id,lang,time,timestamp,status_display,runtime,url,is_pending,title,memory,code,compare_result
378488337,javascript,"1 hour, 2 minutes",1596997036,Accepted,152 ms,/submissions/detail/378488337/,Not Pending,Number of Sub-arrays With Odd Sum,58.5 MB,"/**
 * @param {number[]} arr
 * @return {number}
 */
var numOfSubarrays = function(A) {
  A=A.map(x=>x%2);
  let sum = 0;
  let rec = [1,0];
  let ans=0;
  for(let x of A) {
    sum = (sum+x) % 2;
    ans = (ans+rec[1-sum]) % 1_000_000_007;
    rec[sum]++;
  }
  return ans;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378478285,javascript,"1 hour, 28 minutes",1596995516,Accepted,88 ms,/submissions/detail/378478285/,Not Pending,Count Number of Teams,36.6 MB,"/**
 * @param {number[]} rating
 * @return {number}
 */
var numTeams = function(R) {
  const n=R.length;
  let ans=0;
  for(let i=0;i<n;++i)
    for(let j=i+1;j<n;++j) if(R[i]>R[j]) 
      for(let k=j+1;k<n;++k) if(R[j]>R[k]) ++ans;

  for(let i=0;i<n;++i)
    for(let j=i+1;j<n;++j) if(R[i]<R[j]) 
      for(let k=j+1;k<n;++k) if(R[j]<R[k]) ++ans;

  return ans;
};",11111111111111111111111111111111111111111111111111111
378474658,javascript,"1 hour, 37 minutes",1596994944,Accepted,76 ms,/submissions/detail/378474658/,Not Pending,Reformat Date,36.9 MB,"/**
 * @param {string} date
 * @return {string}
 */
var reformatDate = function(d) {
  d=d.split("" "");
  
  let m={""Jan"":""01"", ""Feb"":""02"", ""Mar"":""03"", 
    ""Apr"":""04"", ""May"":""05"", ""Jun"":""06"", 
      ""Jul"":""07"", ""Aug"":""08"", ""Sep"":""09"", 
        ""Oct"":""10"", ""Nov"":""11"", ""Dec"":""12""}
  d[0]=d[0].replace(""th"","""").replace(""st"","""").replace(""nd"","""").replace(""rd"","""");
  
  if(d[0].length==1) d[0]=""0""+d[0];
  d[1] = m[d[1]];
  
  return d[2]+""-""+d[1]+""-""+d[0];
  
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378472770,python,"1 hour, 42 minutes",1596994654,Accepted,36 ms,/submissions/detail/378472770/,Not Pending,Pancake Sorting,12.7 MB,"class Solution(object):
    def pancakeSort(self, A):
        """"""
        :type A: List[int]
        :rtype: List[int]
        """"""
        
        n = len(A)
        S = sorted(A[::])
        i = n-1
        ans=[]
        for i in range(n-1,-1,-1):
            for j in range(n):
                if S[i]==A[j]:
                    break
            if i!=j:
                A = A[:j+1][::-1] + A[j+1:]
                ans.append(j+1)
                # print(""after1"", A)
                A = A[:i+1][::-1] + A[i+1:]
                ans.append(i+1)                
                # print(""after2"", A)
                
            i -= 1
            
        return ans
            
            
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378466216,javascript,"1 hour, 59 minutes",1596993630,Accepted,72 ms,/submissions/detail/378466216/,Not Pending,Kth Missing Positive Number,37.4 MB,"/**
 * @param {number[]} arr
 * @param {number} k
 * @return {number}
 */
var findKthPositive = function(arr, k) {
  arr.push(3000);
  let p=0;
  for(let x of arr) {
    for(let i=p+1;i<x;++i) {
      if(--k===0) return i;
    }
    p = x;
  }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111
378466002,javascript,2 hours,1596993591,Wrong Answer,N/A,/submissions/detail/378466002/,Not Pending,Kth Missing Positive Number,N/A,"/**
 * @param {number[]} arr
 * @param {number} k
 * @return {number}
 */
var findKthPositive = function(arr, k) {
  arr.push(2000);
  let p=0;
  for(let x of arr) {
    for(let i=p+1;i<x;++i) {
      if(--k===0) return i;
    }
    p = x;
  }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111110
378464911,javascript,"2 hours, 3 minutes",1596993426,Accepted,76 ms,/submissions/detail/378464911/,Not Pending,Binary Gap,37.2 MB,"/**
 * @param {number} N
 * @return {number}
 */
var binaryGap = function(N) {
  let A = N.toString(2).split``.map((x,i)=>x===""1""?i:-1).filter(x=>x>=0);
  
  let ans = 0;
  
  for(let i=1;i<A.length;++i) {
    ans = Math.max(ans, A[i]-A[i-1]);
  }
  
  return ans;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378463068,javascript,"2 hours, 8 minutes",1596993132,Accepted,76 ms,/submissions/detail/378463068/,Not Pending,Valid Boomerang,37.3 MB,"/**
 * @param {number[][]} points
 * @return {boolean}
 */
var isBoomerang = function(P) {
  P.sort((a,b)=>a[1]-b[1]).sort((a,b)=>a[0]-b[0]);
  
  if(P[0][0]===P[1][0] && P[0][1]===P[1][1]) return false;
  if(P[1][0]===P[2][0] && P[1][1]===P[2][1]) return false;
  
  if(P[0][0]===P[1][0] && P[0][0]===P[2][0]) return false;
  if(P[0][1]===P[1][1] && P[0][1]===P[2][1]) return false;
  
  return !(P[0][0]-P[1][0] === P[1][0]-P[2][0] &&
    P[0][1]-P[1][1] === P[1][1]-P[2][1]);
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378462117,javascript,"2 hours, 10 minutes",1596992980,Wrong Answer,N/A,/submissions/detail/378462117/,Not Pending,Valid Boomerang,N/A,"/**
 * @param {number[][]} points
 * @return {boolean}
 */
var isBoomerang = function(P) {
  P.sort((a,b)=>a[1]-b[1]).sort((a,b)=>a[0]-b[0]);
  
  if(P[0][0]===P[1][0] && P[0][1]===P[1][1]) return false;
  if(P[1][0]===P[2][0] && P[1][1]===P[2][1]) return false;
  
  return !(P[0][0]-P[1][0] === P[1][0]-P[2][0] &&
    P[0][1]-P[1][1] === P[1][1]-P[2][1]);
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111
378461386,javascript,"2 hours, 12 minutes",1596992858,Wrong Answer,N/A,/submissions/detail/378461386/,Not Pending,Valid Boomerang,N/A,"/**
 * @param {number[][]} points
 * @return {boolean}
 */
var isBoomerang = function(P) {
  P.sort((a,b)=>a[1]-b[1]).sort((a,b)=>a[0]-b[0]);
  
  return !(P[0][0]-P[1][0] === P[1][0]-P[2][0] &&
    P[0][1]-P[1][1] === P[1][1]-P[2][1]);
};",1111011101101011111011110111111000101111111011011100011110101110110001100111111111111100010111111111111111111110000111110111101101011001111011101000001010101111111111111111101111101111111111
378460431,javascript,"2 hours, 15 minutes",1596992705,Accepted,80 ms,/submissions/detail/378460431/,Not Pending,Surface Area of 3D Shapes,37.7 MB,"/**
 * @param {number[][]} grid
 * @return {number}
 */
var surfaceArea = function(grid) {
  let ans=0;
  const n=grid.length;
  for(let i=0;i<n;++i)
    for(let j=0;j<n;++j)
      if(grid[i][j]>0) ans += 2;

  for(let i=0;i<n;++i)
    for(let j=0;j<n;++j) {
      ans += i==0 ? grid[i][j] : Math.max(0,grid[i][j]-grid[i-1][j]);
      ans += i==n-1 ? grid[i][j] : Math.max(0,grid[i][j]-grid[i+1][j]);
      ans += j==0 ? grid[i][j] : Math.max(0,grid[i][j]-grid[i][j-1]);
      ans += j==n-1 ? grid[i][j] : Math.max(0,grid[i][j]-grid[i][j+1]);
    }
      
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378459796,javascript,"2 hours, 17 minutes",1596992593,Wrong Answer,N/A,/submissions/detail/378459796/,Not Pending,Surface Area of 3D Shapes,N/A,"/**
 * @param {number[][]} grid
 * @return {number}
 */
var surfaceArea = function(grid) {
  let ans=0;
  const n=grid.length;
  for(let i=0;i<n;++i)
    for(let j=0;j<n;++j)
      if(grid[i][j]>0) ans += 2;

  for(let i=0;i<n;++i)
    for(let j=0;j<n;++j) {
      if(i==0||grid[i-1][j]==0) ans += grid[i][j];
      if(i==n-1||grid[i+1][j]==0) ans += grid[i][j];
      if(j==0||grid[i][j-1]==0) ans += grid[i][j];
      if(j==n-1||grid[i][j+1]==0) ans += grid[i][j];
    }
      
  return ans;
};",101101111100000000010000000000000000000000000000000000000000000000000000000000000000000000
378456780,javascript,"2 hours, 25 minutes",1596992083,Accepted,108 ms,/submissions/detail/378456780/,Not Pending,Subrectangle Queries,43.8 MB,"/**
 * @param {number[][]} rectangle
 */
var SubrectangleQueries = function(rectangle) {
  this.A = Array.from(Array(120), ()=>new Array(120).fill(0));
  for(let i=0;i<rectangle.length;++i)
    for(let j=0;j<rectangle[i].length;++j)
      this.A[i][j]=rectangle[i][j];
};

/** 
 * @param {number} row1 
 * @param {number} col1 
 * @param {number} row2 
 * @param {number} col2 
 * @param {number} newValue
 * @return {void}
 */
SubrectangleQueries.prototype.updateSubrectangle = function(row1, col1, row2, col2, newValue) {
  for(let i=row1;i<=row2;++i)
    for(let j=col1;j<=col2;++j) 
      this.A[i][j] = newValue;
};

/** 
 * @param {number} row 
 * @param {number} col
 * @return {number}
 */
SubrectangleQueries.prototype.getValue = function(row, col) {
  return this.A[row][col];
};

/** 
 * Your SubrectangleQueries object will be instantiated and called as such:
 * var obj = new SubrectangleQueries(rectangle)
 * obj.updateSubrectangle(row1,col1,row2,col2,newValue)
 * var param_2 = obj.getValue(row,col)
 */",1111111111111111111111111111111111111111111111111111
378374734,javascript,"6 hours, 54 minutes",1596975920,Accepted,76 ms,/submissions/detail/378374734/,Not Pending,Number of Students Doing Homework at a Given Time,36.8 MB,"/**
 * @param {number[]} startTime
 * @param {number[]} endTime
 * @param {number} queryTime
 * @return {number}
 */
var busyStudent = function(S, E, q) {
  return S.filter((x,i)=>x<=q&&q<=E[i]).length;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378374431,javascript,"6 hours, 56 minutes",1596975845,Accepted,116 ms,/submissions/detail/378374431/,Not Pending,Find the Distance Value Between Two Arrays,42.7 MB,"/**
 * @param {number[]} arr1
 * @param {number[]} arr2
 * @param {number} d
 * @return {number}
 */
var findTheDistanceValue = function(A, B, d) {           
  return A.filter(x=>B.filter(y=>Math.abs(x-y)>d).length===B.length).length;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378371658,javascript,"7 hours, 7 minutes",1596975157,Accepted,88 ms,/submissions/detail/378371658/,Not Pending,Average of Levels in Binary Tree,42 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[]}
 */
var averageOfLevels = function(root) {
  let d={};
  
  function go(node, level) {
    if(node===null) return;
    if(d[level]===undefined) d[level]=[];
    d[level].push(node.val);
    go(node.left, level+1);
    go(node.right, level+1);
  }
  go(root, 0);
  return Object.keys(d).sort((a,b)=>(+a)-(+b)).map(x=>d[x].reduce((a,c)=>a+c,0)/d[x].length);
};",11111111111111111111111111111111111111111111111111111111111111111
378370277,javascript,"7 hours, 13 minutes",1596974808,Accepted,72 ms,/submissions/detail/378370277/,Not Pending,Count Numbers with Unique Digits,36.6 MB,"/**
 * @param {number} n
 * @return {number}
 */

// 1 : 10
// 2 : 9*8
// 3 : 9*9*8
// 4 : 9*9*8*7

var countNumbersWithUniqueDigits = function(n) {
  if(n===0) return 1;
  if(n===1) return 10;
  if(n===2) return 91;
  
  let ans=91;
  for(let i=3;i<=n;++i) {
    let cur=9;
    for(let j=2,k=9;j<=i;++j,--k) cur *= k;
    ans += cur;
  }
  return ans;
};",111111111
378366563,javascript,"7 hours, 28 minutes",1596973914,Accepted,84 ms,/submissions/detail/378366563/,Not Pending,Path Sum,39.9 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {boolean}
 */
var hasPathSum = function(node, sum) {
  if(node===null) {
    return false;
  }
  
  if(node.left===null && node.right===null) {
    return node.val === sum;
  }
  
  return hasPathSum(node.left,sum-node.val) || hasPathSum(node.right,sum-node.val);
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378366214,javascript,"7 hours, 29 minutes",1596973827,Wrong Answer,N/A,/submissions/detail/378366214/,Not Pending,Path Sum,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {boolean}
 */
var hasPathSum = function(node, sum, ok = false) {
  if(node===null) {
    return sum === 0 && ok;
  }
  
  return hasPathSum(node.left,sum-node.val, true) || hasPathSum(node.right,sum-node.val, true);
};",111111011101111111110101110101111111101011110111111110111111101111111110111111111111111111111111111111111111111111
378365839,javascript,"7 hours, 31 minutes",1596973735,Wrong Answer,N/A,/submissions/detail/378365839/,Not Pending,Path Sum,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {boolean}
 */
var hasPathSum = function(node, sum) {
  if(node===null) {
    return sum === 0;
  }
  
  return hasPathSum(node.left,sum-node.val) || hasPathSum(node.right,sum-node.val);
};",110111011101111111110101110101111111101011110111111110111111101111111110111111111111111111111111111111111111111111
378357013,javascript,"8 hours, 8 minutes",1596971512,Accepted,180 ms,/submissions/detail/378357013/,Not Pending,Bulls and Cows,37.5 MB,"/**
 * @param {string} secret
 * @param {string} guess
 * @return {string}
 */
var getHint = function(S, G) {
  S=S.split``;
  G=G.split``;
  let A=0, B=0;
  for(let i=0;i<S.length;++i) {
    if(S[i]===G[i]) {
      A++;
      S[i] = G[i] = 'x';
    }
  }
  
  for(let i=0;i<S.length;++i) if(S[i]!=='x') {
    let where=null;
    for(let j=0;j<G.length;++j) {
      if(i!==j&&S[i]===G[j]) {
        where=j;
      }
    }
    if(where!==null) {
      G[where]='x';
      ++B;
    }
  }
  return A+""A""+B+""B"";
};
",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378354480,javascript,"8 hours, 18 minutes",1596970910,Wrong Answer,N/A,/submissions/detail/378354480/,Not Pending,Bulls and Cows,N/A,"/**
 * @param {string} secret
 * @param {string} guess
 * @return {string}
 */
var getHint = function(S, G) {
  S=S.split``;
  G=G.split``;
  const A=S.filter((x,i)=>x===G[i]).length;
  S.sort();
  G.sort();
  const B=S.filter((x,i)=>x===G[i]).length-A;
  return A+""A""+B+""B"";
};",10111111011101000111111111011001110111010111011111100010000010000001001100000010000010000000000000000000000000000000000000000000000000000000000000000000
378353532,javascript,"8 hours, 22 minutes",1596970684,Accepted,68 ms,/submissions/detail/378353532/,Not Pending,Powerful Integers,37.3 MB,"/**
 * @param {number} x
 * @param {number} y
 * @param {number} bound
 * @return {number[]}
 */
var powerfulIntegers = function(x, y, bound) {
  let a=[], b=[];
  if(x===1) a.push(1); else for(let i=1;i<=bound;i*=x) a.push(i);
  if(y===1) b.push(1); else for(let i=1;i<=bound;i*=y) b.push(i); 
  let ans={};
  for(let x of a) {
    for(let y of b) {
      if(x+y<=bound) ans[x+y]=true;
    }
  }
  return Object.keys(ans);
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378353182,javascript,"8 hours, 23 minutes",1596970595,Runtime Error,N/A,/submissions/detail/378353182/,Not Pending,Powerful Integers,N/A,"/**
 * @param {number} x
 * @param {number} y
 * @param {number} bound
 * @return {number[]}
 */
var powerfulIntegers = function(x, y, bound) {
  let a=[], b=[];
  for(let i=1;i<=bound;i*=x) a.push(i);
  for(let i=1;i<=bound;i*=y) b.push(i);
  let ans={};
  for(let x of a) {
    for(let y of b) {
      if(x+y<=bound) ans[x+y]=true;
    }
  }
  return Object.keys(ans);
};",110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
378351893,javascript,"8 hours, 29 minutes",1596970271,Accepted,80 ms,/submissions/detail/378351893/,Not Pending,Isomorphic Strings,38.7 MB,"/**
 * @param {string} s
 * @param {string} t
 * @return {boolean}
 */
var isIsomorphic = function(s, t) {
  s=s.split``;
  t=t.split``;
  let d = {};
  let q = {};
  for(let i=0;i<s.length;++i) {
    if(d[s[i]]===undefined) {
      if(q[t[i]]!==undefined) return false;
      d[s[i]] = t[i];
      q[t[i]] = s[i];
    } else {
      if(d[s[i]] !== t[i]) return false;
    }
  }
  return true;
};",11111111111111111111111111111111
378351525,javascript,"8 hours, 30 minutes",1596970194,Wrong Answer,N/A,/submissions/detail/378351525/,Not Pending,Isomorphic Strings,N/A,"/**
 * @param {string} s
 * @param {string} t
 * @return {boolean}
 */
var isIsomorphic = function(s, t) {
  s=s.split``;
  t=t.split``;
  let d = {};
  for(let i=0;i<s.length;++i) {
    if(d[s[i]]===undefined) {
      d[s[i]] = t[i];
    } else {
      if(d[s[i]] !== t[i]) return false;
    }
  }
  return true;
};",11111110111011101111111011011111
378349351,javascript,"8 hours, 39 minutes",1596969676,Accepted,260 ms,/submissions/detail/378349351/,Not Pending,Sort Integers by The Power Value,43.1 MB,"/**
 * @param {number} lo
 * @param {number} hi
 * @param {number} k
 * @return {number}
 */
var getKth = function(lo, hi, k) {
  let d={};
  function f(x) {
    if(x===1) return 0;
    if(d[x]!==undefined) return d[x];
    
    if(x%2===0) d[x] = 1+f(Math.floor(x/2));
    else d[x] = 1+f(3*x+1);
    
    return d[x];
  }
  
  let ans=[];
  for(let i=lo;i<=hi;++i) ans.push(i);
  
  return ans.sort((a,b)=>f(a)-f(b))[k-1];
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378347891,javascript,"8 hours, 45 minutes",1596969315,Accepted,208 ms,/submissions/detail/378347891/,Not Pending,Delete Columns to Make Sorted,54.3 MB,"/**
 * @param {string[]} A
 * @return {number}
 */
var minDeletionSize = function(A) {
  A=A.map(x=>x.split``);
  const T = A[0].map((_,c)=>A.map(r=>r[c]));
  return T.filter(x=>[...x].sort().join``!==x.join``).length;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378344724,javascript,"8 hours, 57 minutes",1596968552,Accepted,84 ms,/submissions/detail/378344724/,Not Pending,Make The String Great,39.2 MB,"/**
 * @param {string} s
 * @return {string}
 */
var makeGood = function(s) {
  const stk = [];
  s=s.split``;
  for(let x of s) {
    if(stk.length===0 || 
       Math.abs(stk[stk.length-1].charCodeAt()-x.charCodeAt())!==32) {
      stk.push(x);
    } else {
      stk.pop();
    }
  }
  return stk.join``;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378343474,javascript,"9 hours, 3 minutes",1596968223,Wrong Answer,N/A,/submissions/detail/378343474/,Not Pending,Make The String Great,N/A,"/**
 * @param {string} s
 * @return {string}
 */
var makeGood = function(s) {
  const stk = [];
  s=s.split``;
  for(let x of s) {
    if(""A"" <= x && x <= ""Z"") {
      if(stk.length===0 || 
         stk[stk.length-1].charCodeAt()-32 != x.charCodeAt()) {
        stk.push(x);
      } else {
        stk.pop();
      }
    } else {
      stk.push(x);
    }
  }
  return stk.join``;
};",1110111000100111101010101001001101100101011101010000001000000000100100000100000110100000000000011000000000000001010000110010100000000000011010101000100100100000100000000010000110000000000001000000000000000100000010100000001000000000001000001000000000000010101010001000001000000000011000001000100000010000000010000000100000000000000000
378331789,javascript,"9 hours, 49 minutes",1596965431,Accepted,144 ms,/submissions/detail/378331789/,Not Pending,Longest Harmonious Subsequence,49.8 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var findLHS = function(A) {
  let d={};
  for(let x of A) {
    d[x]=1+(d[x]||0);
  }
  
  let ans = 0;
  for(let x of Object.keys(d).map(k=>+k)) {
    if(d[x+1]===undefined) continue;
    ans = Math.max(ans, d[x]+d[x+1]);
  }
  
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378330501,javascript,"9 hours, 54 minutes",1596965135,Accepted,100 ms,/submissions/detail/378330501/,Not Pending,Number of Equivalent Domino Pairs,45.2 MB,"/**
 * @param {number[][]} dominoes
 * @return {number}
 */
var numEquivDominoPairs = function(D) {
  let C={};
  D.map(x=>x[0]>x[1]?x[1]+"" ""+x[0]:x[0]+"" ""+x[1]).map(x=>C[x]=1+(C[x]||0));
  return Object.keys(C).map(x=>C[x]>1?C[x]*(C[x]-1)/2:0).reduce((a,c)=>a+c,0);
};",1111111111111111111
378327798,javascript,"10 hours, 5 minutes",1596964520,Accepted,80 ms,/submissions/detail/378327798/,Not Pending,Baseball Game,38 MB,"/**
 * @param {string[]} ops
 * @return {number}
 */
var calPoints = function(ops) {
  const stk=[];
  for(let x of ops) {
    if(x===""C"") {
      stk.pop();
    } else if(x===""D"") {
      stk.push(stk[stk.length-1] * 2);
    } else if(x===""+"") {
      stk.push(stk[stk.length-1]+stk[stk.length-2]);
    } else {
      stk.push(parseInt(x));
    }
  }
  return stk.reduce((a,c)=>a+c,0);
};",111111111111111111111111111111111111111
378325572,javascript,"10 hours, 13 minutes",1596964007,Accepted,100 ms,/submissions/detail/378325572/,Not Pending,K-diff Pairs in an Array,44.3 MB,"/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var findPairs = function(A, k) {
  let d={};
  A.map(x=>d[x]=1+(d[x]||0));
  
  if(k===0) {
    return Object.keys(d).filter(x=>d[x]>1).length;
  }
  
  if(k<0) {
    return 0;
  }
  
  
  let q = {};
  let ans=0;
  for(let x of Object.keys(d)) {
    x = +x;
    if(q[x-k]!==undefined) ans += q[x-k];
    if(q[x+k]!==undefined) ans += q[x+k];
    q[x]=1+(q[x]||0);
  }
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111
378325381,javascript,"10 hours, 14 minutes",1596963968,Wrong Answer,N/A,/submissions/detail/378325381/,Not Pending,K-diff Pairs in an Array,N/A,"/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var findPairs = function(A, k) {
  let d={};
  A.map(x=>d[x]=1+(d[x]||0));
  
  if(k===0) {
    return Object.keys(d).filter(x=>d[x]>1).length;
  }
  
  
  let q = {};
  let ans=0;
  for(let x of Object.keys(d)) {
    x = +x;
    if(q[x-k]!==undefined) ans += q[x-k];
    if(q[x+k]!==undefined) ans += q[x+k];
    q[x]=1+(q[x]||0);
  }
  return ans;
};",111111110111111111111111111111111111111111111111110000111110010001111111
378325241,javascript,"10 hours, 14 minutes",1596963934,Wrong Answer,N/A,/submissions/detail/378325241/,Not Pending,K-diff Pairs in an Array,N/A,"/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var findPairs = function(A, k) {
  let d={};
  A.map(x=>d[x]=1+(d[x]||0));
  
  if(k===0) {
    return Object.keys(d).filter(x=>d[x]>1).length;
  }
  
  
  let q = {};
  let ans=0;
  for(let x of Object.keys(d)) {
    if(q[x-k]!==undefined) ans += q[x-k];
    if(q[x+k]!==undefined) ans += q[x+k];
    q[x]=1+(q[x]||0);
  }
  return ans;
};",111111111111111111100111101100111111111111111111111111111111111111111111
378321409,javascript,"10 hours, 28 minutes",1596963095,Wrong Answer,N/A,/submissions/detail/378321409/,Not Pending,K-diff Pairs in an Array,N/A,"/**
 * @param {number[]} nums
 * @param {number} k
 * @return {number}
 */
var findPairs = function(nums, k) {
  let d = {};
  let ans=0;
  for(let x of nums) {
    if(d[x-k]!==undefined) ans += d[x-k];
    if(d[k-x]!==undefined) ans += d[k-x];
    d[x]=1+(d[x]||0);
  }
  return ans;
};",111100011001110001100100000011001000000001110101110000000000000000011111
378318909,javascript,"10 hours, 37 minutes",1596962588,Accepted,80 ms,/submissions/detail/378318909/,Not Pending,Backspace String Compare,38.1 MB,"/**
 * @param {string} S
 * @param {string} T
 * @return {boolean}
 */
var backspaceCompare = function(S, T) {
  let sS = [];
  let sT = [];
  
  for(let x of S.split``) {
    if(x===""#"") sS.length>0 && sS.pop();
    else sS.push(x);
  }
  for(let x of T.split``) {
    if(x===""#"") sT.length>0 && sT.pop();
    else sT.push(x);
  }
  
  return sS.join`` === sT.join``;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378318309,javascript,"10 hours, 39 minutes",1596962464,Wrong Answer,N/A,/submissions/detail/378318309/,Not Pending,Backspace String Compare,N/A,"/**
 * @param {string} S
 * @param {string} T
 * @return {boolean}
 */
var backspaceCompare = function(S, T) {
  let sS = [];
  let sT = [];
  
  for(let x of S.split``) {
    if(x===""#"" && sS.length>0) sS.pop();
    else sS.push(x);
  }
  for(let x of T.split``) {
    if(x===""#"" && sT.length>0) sT.pop();
    else sT.push(x);
  }
  
  return sS.join`` === sT.join``;
};",11111111101111111010111110101110111011111110111111101111111111111111111011111111111111111111111110111111101111
378317051,javascript,"10 hours, 43 minutes",1596962193,Accepted,88 ms,/submissions/detail/378317051/,Not Pending,Remove Duplicates from Sorted List,38.6 MB,"/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var deleteDuplicates = function(head) {
  let prev = null;
  
  let cur = head;
  
  while(cur !== null) {
    if(prev===null || prev.val != cur.val) {
      prev = cur;
    } else {
      prev.next = cur.next;
    }
    cur = cur.next;
  }
  
  return head;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378315689,javascript,"10 hours, 48 minutes",1596961898,Accepted,116 ms,/submissions/detail/378315689/,Not Pending,Pairs of Songs With Total Durations Divisible by 60,41.3 MB,"/**
 * @param {number[]} time
 * @return {number}
 */
var numPairsDivisibleBy60 = function(time) {
  let d=new Array(501).fill(0);
  time.map(x=>d[x]++);
  let ans = 0;
  for(let i=1;i<=500;++i) 
    for(let j=i+1;j<=500;++j) if((i+j)%60===0) {
      ans += d[i] * d[j];
    }
  
  for(let i=1;i<=500;++i) if(2*i%60===0 && d[i] > 1) {
    ans += d[i] * (d[i]-1) / 2;
  }
  
  return ans;
};",1111111111111111111111111111111111
378309808,javascript,"11 hours, 8 minutes",1596960711,Accepted,576 ms,/submissions/detail/378309808/,Not Pending,Longest Common Subsequence,65.6 MB,"/**
 * @param {string} text1
 * @param {string} text2
 * @return {number}
 */
var longestCommonSubsequence = function(A, B) {
  let d=Array.from(Array(1010), ()=>new Array(1010).fill(-1));
  A=A.split``;
  B=B.split``;
  const n=A.length;
  const m=B.length;
  function dp(i, j) {
    if(i>=n) return 0;
    if(j>=m) return 0;
    if(d[i][j]!==-1) return d[i][j];
    if(A[i]===B[j]) d[i][j] = 1 + dp(i+1,j+1);
    else d[i][j] = Math.max(dp(i+1,j), dp(i,j+1));
    return d[i][j];
  }
  return dp(0,0);
};",1111111111111111111111111111111111111111111
378304980,javascript,"11 hours, 24 minutes",1596959790,Accepted,80 ms,/submissions/detail/378304980/,Not Pending,Reverse Only Letters,37 MB,"/**
 * @param {string} S
 * @return {string}
 */
var reverseOnlyLetters = function(S) {
  const special = new Set(S.match(/[^a-zA-Z]/g));  
  const alpha = S.match(/[a-zA-Z]/g);
  if(alpha===null) return S;
  alpha.reverse();
  S = S.split``;
  for(let i=0,j=0;i<S.length;++i) if(!special.has(S[i])) {
    S[i] = alpha[j++];
  }
  return S.join``;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378304641,javascript,"11 hours, 25 minutes",1596959730,Wrong Answer,N/A,/submissions/detail/378304641/,Not Pending,Reverse Only Letters,N/A,"/**
 * @param {string} S
 * @return {string}
 */
var reverseOnlyLetters = function(S) {
  const special = new Set(S.match(/[^a-zA-Z]/g));  
  const alpha = S.match(/[a-zA-z]/g);
  if(alpha===null) return S;
  alpha.reverse();
  S = S.split``;
  for(let i=0,j=0;i<S.length;++i) if(!special.has(S[i])) {
    S[i] = alpha[j++];
  }
  return S.join``;
};",11111111111000101111111001101011011111111111111111111111010101111111000001101001000100000001100000000000000000000000
378303595,javascript,"11 hours, 28 minutes",1596959533,Wrong Answer,N/A,/submissions/detail/378303595/,Not Pending,Reverse Only Letters,N/A,"/**
 * @param {string} S
 * @return {string}
 */
var reverseOnlyLetters = function(S) {
  const special = new Set(S.match(/[^a-zA-z]/g));  
  const alpha = S.match(/[a-zA-z]/g);
  if(alpha===null) return S;
  alpha.reverse();
  S = S.split``;
  for(let i=0,j=0;i<S.length;++i) if(!special.has(S[i])) {
    S[i] = alpha[j++];
  }
  return S.join``;
};",11111101111000101111111001101001011110111111111111011111010101011111000001101001000100001001100000000000000000000000
378303325,javascript,"11 hours, 29 minutes",1596959484,Runtime Error,N/A,/submissions/detail/378303325/,Not Pending,Reverse Only Letters,N/A,"/**
 * @param {string} S
 * @return {string}
 */
var reverseOnlyLetters = function(S) {
  const special = new Set(S.match(/[^a-zA-z]/g));  
  const alpha = S.match(/[a-zA-z]/g).reverse();
  S = S.split``;
  for(let i=0,j=0;i<S.length;++i) if(!special.has(S[i])) {
    S[i] = alpha[j++];
  }
  return S.join``;
};",11100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
378301236,python,"11 hours, 35 minutes",1596959107,Accepted,20 ms,/submissions/detail/378301236/,Not Pending,Remove Palindromic Subsequences,12.8 MB,"class Solution(object):
    def removePalindromeSub(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        if len(s) == 0: return 0
        if s == s[::-1]: return 1
        return 2",1111111111111111111111111111111111111111111111111
378294775,javascript,"11 hours, 54 minutes",1596957980,Accepted,120 ms,/submissions/detail/378294775/,Not Pending,Rotting Oranges,39.9 MB,"/**
 * @param {number[][]} grid
 * @return {number}
 */
var orangesRotting = function(G) {
  function nofresh(G) {
    return G.map(x=>x.filter(y=>y===1).length).filter(z=>z>0).length===0; 
  }
  
  let ans=0;
  const n=G.length;
  const m=G[0].length;
  for(;;ans++) {
    if(nofresh(G)) break;
    let next=G.map(x=>[...x]);
    
    for(let i=0;i<n;++i) {
      for(let j=0;j<m;++j) if(G[i][j]===1) {
        if(i-1>=0&&G[i-1][j]===2) next[i][j] = 2;
        if(i+1<n &&G[i+1][j]===2) next[i][j] = 2;
        if(j-1>=0&&G[i][j-1]===2) next[i][j] = 2;
        if(j+1<m &&G[i][j+1]===2) next[i][j] = 2;
      }
    }
    if(JSON.stringify(G) === JSON.stringify(next)) {
      ans=-1;
      break;
    }
    
    G = next.map(x=>[...x]);
  }    
  
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378288438,javascript,"12 hours, 12 minutes",1596956891,Accepted,76 ms,/submissions/detail/378288438/,Not Pending,Goat Latin,37.1 MB,"/**
 * @param {string} S
 * @return {string}
 */
var toGoatLatin = function(S) {
  vowel = new Set(""AEIOUaeiou"".split``);
  
  function f(x,i) {
    if(vowel.has(x.charAt(0))) {
      return x + ""ma"" + 'a'.repeat(i);
    } else {
      return x.substring(1,x.length) + x.substring(0,1) + ""ma"" + 'a'.repeat(i);
    }
  }
  return S.split("" "").map((x,i)=>f(x,i+1)).join("" "");
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378285716,javascript,"12 hours, 20 minutes",1596956419,Accepted,76 ms,/submissions/detail/378285716/,Not Pending,Water Bottles,36.6 MB,"/**
 * @param {number} numBottles
 * @param {number} numExchange
 * @return {number}
 */
var numWaterBottles = function(n, e) {
  let ans=0;
  let nempty=0;
  while(n>0) {
    ans += n;
    nempty += n;
    n = Math.floor(nempty/e);
    nempty %= e;
  }
  return ans
};",1111111111111111111111111111111111111111111111111111111111111111
378283506,javascript,"12 hours, 26 minutes",1596956058,Accepted,248 ms,/submissions/detail/378283506/,Not Pending,Rank Transform of an Array,62.2 MB,"/**
 * @param {number[]} arr
 * @return {number[]}
 */
var arrayRankTransform = function(A) {
  if(A.length===0) return [];
  A = A.map((x,i)=>[x,i]).sort((a,b)=>a[0]-b[0]);
  let rank = new Array(A.length).fill(0);

  let p=0;
  for(let i=0;i<A.length;++i) {
    if(i===0||A[i-1][0]!==A[i][0]) p++;
    rank[A[i][1]]=p;
  }
  return rank;
};",1111111111111111111111111111111111111
378279501,python,"12 hours, 36 minutes",1596955426,Accepted,320 ms,/submissions/detail/378279501/,Not Pending,Add to Array-Form of Integer,13.1 MB,"class Solution(object):
    def addToArrayForm(self, A, K):
        """"""
        :type A: List[int]
        :type K: int
        :rtype: List[int]
        """"""
        return [int(x) for x in list(str(int("""".join([str(x) for x in A]))+K))]
        ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378278605,javascript,"12 hours, 39 minutes",1596955279,Wrong Answer,N/A,/submissions/detail/378278605/,Not Pending,Add to Array-Form of Integer,N/A,"/**
 * @param {number[]} A
 * @param {number} K
 * @return {number[]}
 */
var addToArrayForm = function(A, K) {
  return (K+(+A.join``)).toString().split``.map(x=>+x);
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000
378278062,javascript,"12 hours, 40 minutes",1596955184,Accepted,772 ms,/submissions/detail/378278062/,Not Pending,Fair Candy Swap,42.1 MB,"/**
 * @param {number[]} A
 * @param {number[]} B
 * @return {number[]}
 */
var fairCandySwap = function(A, B) {
  let sumA = A.reduce((a,c)=>a+c,0);
  let sumB = B.reduce((a,c)=>a+c,0);
  for(let a of A) for(let b of B) {
    if(sumA+b-a == sumB+a-b) return [a,b]; 
  }
};",111111111111111111111111111111111111111111111111111111111111111111111111111
378276804,javascript,"12 hours, 44 minutes",1596954971,Accepted,168 ms,/submissions/detail/378276804/,Not Pending,Compare Strings by Frequency of the Smallest Character,43.8 MB,"/**
 * @param {string[]} queries
 * @param {string[]} words
 * @return {number[]}
 */
var numSmallerByFrequency = function(Q, W) {
  function f(s) {
    s = s.split``.sort();
    return s.filter(x=>x==s[0]).length;
  }
    
  Q = Q.map(x=>f(x));
  W = W.map(x=>f(x));
  
  return Q.map(x=>W.filter(y=>x<y).length);
};",1111111111111111111111111111111111111
378273897,javascript,"12 hours, 52 minutes",1596954483,Accepted,76 ms,/submissions/detail/378273897/,Not Pending,Complement of Base 10 Integer,36.9 MB,"/**
 * @param {number} N
 * @return {number}
 */
var bitwiseComplement = function(N) {
  return parseInt(N.toString(2).split``.map(x=>1-x).join``, 2);
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378268423,javascript,"13 hours, 7 minutes",1596953573,Accepted,84 ms,/submissions/detail/378268423/,Not Pending,Element Appearing More Than 25% In Sorted Array,43 MB,"/**
 * @param {number[]} arr
 * @return {number}
 */
var findSpecialInteger = function(A) {
  let d={};
  A.map(x=>d[x]=1+(d[x]||0));
  return Object.keys(d).filter(x=>d[x]>0.25*A.length)[0];
};",111111111111111111
378257910,javascript,"13 hours, 37 minutes",1596951791,Accepted,120 ms,/submissions/detail/378257910/,Not Pending,Count Square Submatrices with All Ones,44.2 MB,"/**
 * @param {number[][]} matrix
 * @return {number}
 */
var countSquares = function(A) {
  const dp=Array.from(Array(310), ()=>new Array(310).fill(0));
  const n=A.length;
  const m=A[0].length;
  let ans=0;
  for(let i=0;i<n;++i) {
    for(let j=0;j<m;++j) {
      if(i===0||j===0) {
        dp[i][j] = A[i][j];
      } else {
        dp[i][j] = A[i][j] ? Math.min(dp[i-1][j], dp[i-1][j-1], dp[i][j-1])+1 : 0;
      }
      ans+=dp[i][j];
    }
  }
  return ans;
};",11111111111111111111111111111111
378254364,javascript,"13 hours, 47 minutes",1596951186,Accepted,228 ms,/submissions/detail/378254364/,Not Pending,Reducing Dishes,46.7 MB,"/**
 * @param {number[]} satisfaction
 * @return {number}
 */
var maxSatisfaction = function(S) {
  const n = S.length;
  S.sort((a,b)=>a-b);
  const d = Array.from(Array(501), ()=>new Array(501).fill(-1));
  
  function dp(i, t) {
    if(i>=n) return 0;
    if(d[i][t]!==-1) return d[i][t];
    
    d[i][t] = Math.max(t*S[i]+dp(i+1,t+1), dp(i+1,t));
    return d[i][t];
  }
  
  return dp(0, 1);
};",11111111111111111111111111111111111111111111111111111111111
378253903,javascript,"13 hours, 48 minutes",1596951108,Wrong Answer,N/A,/submissions/detail/378253903/,Not Pending,Reducing Dishes,N/A,"/**
 * @param {number[]} satisfaction
 * @return {number}
 */
var maxSatisfaction = function(S) {
  const n = S.length;
  const d = Array.from(Array(501), ()=>new Array(501).fill(-1));
  
  function dp(i, t) {
    if(i>=n) return 0;
    if(d[i][t]!==-1) return d[i][t];
    
    d[i][t] = Math.max(t*S[i]+dp(i+1,t+1), dp(i+1,t));
    return d[i][t];
  }
  
  return dp(0, 1);
};",10100000000000000000000000000000000000000000000000000000000
378251612,javascript,"13 hours, 55 minutes",1596950740,Accepted,420 ms,/submissions/detail/378251612/,Not Pending,Find Kth Bit in Nth Binary String,88.9 MB,"/**
 * @param {number} n
 * @param {number} k
 * @return {character}
 */
var findKthBit = function(n, k) {
  s = [0];
  for(let i=2;i<=n;++i) {
    s = s.concat([1]).concat([...s].reverse().map(x=>1-x));
  }
  return """"+s[k-1];
};",111111111111111111111111111111111111111111111111111111111111111
378246422,javascript,"14 hours, 9 minutes",1596949882,Accepted,124 ms,/submissions/detail/378246422/,Not Pending,Maximum Number of Non-Overlapping Subarrays With Sum Equals Target,54.5 MB,"/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var maxNonOverlapping = function(A, tar) {
  let s = new Set();
  s.add(0);
  let sum = 0;
  let ans = 0;
  for(let x of A) {
    sum += x;
    
    if(s.has(sum-tar)) {
      ++ans;
      s.clear();
      s.add(0);
      sum = 0;
    } else {
      s.add(sum);
    }
  }
  return ans;
    
};",111111111111111111111111111111111111111111111111111111111111111111111
378238939,javascript,"14 hours, 29 minutes",1596948677,Accepted,148 ms,/submissions/detail/378238939/,Not Pending,Minimum Cost to Cut a Stick,38.5 MB,"/**
 * @param {number} n
 * @param {number[]} cuts
 * @return {number}
 */
var minCost = function(l, cuts) {
  cuts = [0].concat(cuts.sort((a,b)=>a-b)).concat([l]);
  const n = cuts.length;
  const d = Array.from(Array(n), ()=>Array(n).fill(-1));
  
  function dp(i, j) {
    if(i+1>=j) return 0;
    if(d[i][j]!==-1) return d[i][j];
    d[i][j]=2147483647;
    for(let k=i+1;k<j;++k) {
      d[i][j] = Math.min(d[i][j], cuts[j]-cuts[i] + dp(i,k)+dp(k,j));
    }
    return d[i][j];
  }
  return dp(0,n-1);
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378238823,javascript,"14 hours, 29 minutes",1596948657,Wrong Answer,N/A,/submissions/detail/378238823/,Not Pending,Minimum Cost to Cut a Stick,N/A,"/**
 * @param {number} n
 * @param {number[]} cuts
 * @return {number}
 */
var minCost = function(l, cuts) {
  cuts = [0].concat(cuts.sort()).concat([l]);
  const n = cuts.length;
  const d = Array.from(Array(n), ()=>Array(n).fill(-1));
  
  function dp(i, j) {
    if(i+1>=j) return 0;
    if(d[i][j]!==-1) return d[i][j];
    d[i][j]=2147483647;
    for(let k=i+1;k<j;++k) {
      d[i][j] = Math.min(d[i][j], cuts[j]-cuts[i] + dp(i,k)+dp(k,j));
    }
    return d[i][j];
  }
  return dp(0,n-1);
};",1111111100000000000000010000100010010000000000000000000000000000000000000000000010000100000000000001
378224043,javascript,"15 hours, 5 minutes",1596946493,Wrong Answer,N/A,/submissions/detail/378224043/,Not Pending,Maximum Number of Non-Overlapping Subarrays With Sum Equals Target,N/A,"/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var maxNonOverlapping = function(A, tar) {
  let s = new Set();
  s.add(0);
  let sum = 0;
  let ans = 0;
  for(let x of A) {
    sum += x;
    s.add(sum);
    if(s.has(sum-tar)) {
      ++ans;
      s.clear();
      s.add(0);
      sum = 0;
    }
  }
  return ans;
    
};",111111111111111111111111111111111111111111111111111111111111111110111
378195702,javascript,"15 hours, 55 minutes",1596943546,Accepted,100 ms,/submissions/detail/378195702/,Not Pending,Triangle,37.3 MB,"/**
 * @param {number[][]} triangle
 * @return {number}
 */
var minimumTotal = function(A) {
  const n = A.length;
  let d = Array.from(Array(n), ()=>new Array(n).fill(-1));  
  function dp(i, j) {
    if(j>i) {
      return 2147483647;
    }
    if(i>=n) {
      return 0;
    }
    
    if(d[i][j]!=-1) return d[i][j];
    
    d[i][j]=A[i][j]+Math.min(dp(i+1,j), dp(i+1,j+1));
    
    return d[i][j];
  }
  
  return dp(0,0);
};",1111111111111111111111111111111111111111111
378160008,javascript,"16 hours, 46 minutes",1596940452,Accepted,76 ms,/submissions/detail/378160008/,Not Pending,Minimum Path Sum,38.6 MB,"/**
 * @param {number[][]} grid
 * @return {number}
 */
var minPathSum = function(A) {
  if(A.length===0) return 0;
  const n=A.length;
  const m=A[0].length;
  const D=Array.from(Array(n), ()=>new Array(m).fill(-1));
 
  function dp(i, j) {
    if(i>=n) return 2147483647;
    if(j>=m) return 2147483647;
    if(i===n-1 && j===m-1) return A[i][j];
    if(D[i][j]!=-1) return D[i][j];
    
    D[i][j] = A[i][j] + Math.min(dp(i+1,j), dp(i,j+1));
    
    return D[i][j];
  }

  return dp(0,0);
};",1111111111111111111111111111111111111111111111111111111111111
378156446,javascript,"16 hours, 56 minutes",1596939835,Accepted,280 ms,/submissions/detail/378156446/,Not Pending,Find Words That Can Be Formed by Characters,44.1 MB,"/**
 * @param {string[]} words
 * @param {string} chars
 * @return {number}
 */
var countCharacters = function(W, p) {  
  p=p.split``.sort();
  let ans=0;
  for(let x of W) {
    let j=0;
    x=x.split``.sort();
    for(let c of p) {
      if(j<x.length && x[j]===c) ++j;     
    }
    if(j===x.length) ans += x.length;
  }
  return ans;
};",111111111111111111111111111111111111
378154278,javascript,"17 hours, 3 minutes",1596939419,Accepted,136 ms,/submissions/detail/378154278/,Not Pending,Lucky Numbers in a Matrix,39.8 MB,"/**
 * @param {number[][]} matrix
 * @return {number[]}
 */
var luckyNumbers  = function(A) {
  const n=A.length;
  const m=A[0].length;
  const R=new Array(n).fill(2147483647);
  const C=new Array(m).fill(0);
  for(let i=0;i<n;++i) {
    for(let j=0;j<m;++j) {
      R[i]=Math.min(R[i], A[i][j]);
      C[j]=Math.max(C[j], A[i][j]);
    }
  }
  
  let ans = [];
  for(let i=0;i<n;++i) 
    for(let j=0;j<m;++j)  
      if(A[i][j]==R[i]&&A[i][j]==C[j]) ans.push(A[i][j]);

  return ans;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378152785,javascript,"17 hours, 8 minutes",1596939128,Accepted,72 ms,/submissions/detail/378152785/,Not Pending,Distribute Candies to People,37.1 MB,"/**
 * @param {number} candies
 * @param {number} num_people
 * @return {number[]}
 */
var distributeCandies = function(C, n) {
  let ans=new Array(n).fill(0);
  for(let i=1,gave=0;gave < C;++i) {
    const r = C-gave;
    ans[(i-1)%n] += Math.min(r,i);
    gave+=Math.min(r,i);
  }
  return ans;
};",111111111111111111111111111
378152441,javascript,"17 hours, 9 minutes",1596939062,Wrong Answer,N/A,/submissions/detail/378152441/,Not Pending,Distribute Candies to People,N/A,"/**
 * @param {number} candies
 * @param {number} num_people
 * @return {number[]}
 */
var distributeCandies = function(C, n) {
  let ans=new Array(n).fill(0);
  for(let i=1,gave=0;i<=2*n && gave < C;++i) {
    const r = C-gave;
    ans[(i-1)%n] += Math.min(r,i);
    gave+=Math.min(r,i);
  }
  return ans;
};",110000000011001111111111110
378147467,javascript,"17 hours, 25 minutes",1596938101,Accepted,180 ms,/submissions/detail/378147467/,Not Pending,Sum of Square Numbers,56.9 MB,"/**
 * @param {number} c
 * @return {boolean}
 */
var judgeSquareSum = function(c) {
  const s = new Set();
  for(let i=0;i*i<=c;++i) s.add(i*i);
  
  for(let i=0;i*i<=c;++i) if(s.has(c-i*i)) return true;
  
  return false;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378147377,javascript,"17 hours, 26 minutes",1596938084,Wrong Answer,N/A,/submissions/detail/378147377/,Not Pending,Sum of Square Numbers,N/A,"/**
 * @param {number} c
 * @return {boolean}
 */
var judgeSquareSum = function(c) {
  const s = new Set();
  for(let i=1;i*i<=c;++i) s.add(i*i);
  
  for(let i=0;i*i<=c;++i) if(s.has(c-i*i)) return true;
  
  return false;
};",1111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378147171,javascript,"17 hours, 26 minutes",1596938037,Wrong Answer,N/A,/submissions/detail/378147171/,Not Pending,Sum of Square Numbers,N/A,"/**
 * @param {number} c
 * @return {boolean}
 */
var judgeSquareSum = function(c) {
  const s = new Set();
  for(let i=1;i*i<c;++i) s.add(i*i);
  
  for(let i=1;i*i<c;++i) if(s.has(c-i*i)) return true;
  
  return false;
};",1101011100111111011111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111
378146556,javascript,"17 hours, 28 minutes",1596937916,Accepted,68 ms,/submissions/detail/378146556/,Not Pending,Valid Perfect Square,36.4 MB,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPerfectSquare = function(num) {
  for(let i=1;i*i<=num;++i) if(i*i===num) return true;
  return false;
};",1111111111111111111111111111111111111111111111111111111111111111111111
378146296,javascript,"17 hours, 29 minutes",1596937864,Accepted,84 ms,/submissions/detail/378146296/,Not Pending,Projection Area of 3D Shapes,36.5 MB,"/**
 * @param {number[][]} grid
 * @return {number}
 */
var projectionArea = function(A) {
  const n=A.length;
  const m=A[0].length;
  
  let ans = 0;
  
  for(let i=0;i<n;++i) {
    for(let j=0;j<m;++j) {
      ans += A[i][j]>0;
    }
  }

  for(let i=0;i<n;++i) {
    let maxi = 0;
    for(let j=0;j<m;++j) {
      maxi = Math.max(maxi, A[i][j]);
    }
    ans += maxi;
  }  

  for(let j=0;j<m;++j) {
    let maxi = 0;
    for(let i=0;i<n;++i) {
      maxi = Math.max(maxi, A[i][j]);
    }
    ans += maxi;
  }
  return ans;    
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378143995,javascript,"17 hours, 37 minutes",1596937399,Accepted,92 ms,/submissions/detail/378143995/,Not Pending,Find Lucky Integer in an Array,36.9 MB,"/**
 * @param {number[]} arr
 * @return {number}
 */
var findLucky = function(A) {
  let d={};
  A.map(x=>d[x]=1+(d[x]||0));
  
  let ans = -1;
  for(let x of Object.keys(d)) {
    if(+x===d[x]) ans=+x;
  }
  return ans;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378143611,javascript,"17 hours, 38 minutes",1596937323,Wrong Answer,N/A,/submissions/detail/378143611/,Not Pending,Find Lucky Integer in an Array,N/A,"/**
 * @param {number[]} arr
 * @return {number}
 */
var findLucky = function(A) {
  let d={};
  A.map(x=>d[x]=1+(d[x]||0));
  for(let x of Object.keys(d)) {
    if(+x===d[x]) return x;
  }
  return -1;
};",1011100111100011100110011101000001101100100010100111100000000110000000000000110100001101001000001010
378142650,javascript,"17 hours, 41 minutes",1596937130,Accepted,76 ms,/submissions/detail/378142650/,Not Pending,Leaf-Similar Trees,38.6 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root1
 * @param {TreeNode} root2
 * @return {boolean}
 */
var leafSimilar = function(r1, r2) {
  let l1 = [];
  let l2 = [];
  
  function go(node, leafs) {
    if(node===null) return;
    if(node.left===null && node.right===null) {
      leafs.push(node.val);
      return;
    }
    go(node.left, leafs);
    go(node.right, leafs);
  }
  
  go(r1, l1);
  go(r2, l2);
  
  return JSON.stringify(l1) === JSON.stringify(l2);
};",11111111111111111111111111111111111111
378141499,javascript,"17 hours, 45 minutes",1596936904,Accepted,84 ms,/submissions/detail/378141499/,Not Pending,Check If a Word Occurs As a Prefix of Any Word in a Sentence,36.5 MB,"/**
 * @param {string} sentence
 * @param {string} searchWord
 * @return {number}
 */
var isPrefixOfWord = function(W, p) {
  const r = new RegExp(""^""+p);
  W = W.split("" "");

  for(let i=0;i<W.length;++i) {
    if(W[i].match(r)!==null) return i+1;
  }
  return -1;
};",11111111111111111111111111111111111111
378140685,javascript,"17 hours, 48 minutes",1596936739,Wrong Answer,N/A,/submissions/detail/378140685/,Not Pending,Check If a Word Occurs As a Prefix of Any Word in a Sentence,N/A,"/**
 * @param {string} sentence
 * @param {string} searchWord
 * @return {number}
 */
var isPrefixOfWord = function(W, p) {
  const r = new RegExp(""^""+p);
  W = W.split("" "");

  for(let i=0;i<W.length;++i) {
    if(W[i].match(p)!==null) return i+1;
  }
  return -1;
};",11111011111111111111111110111111111001
378139464,javascript,"17 hours, 52 minutes",1596936482,Accepted,72 ms,/submissions/detail/378139464/,Not Pending,Occurrences After Bigram,36.8 MB,"/**
 * @param {string} text
 * @param {string} first
 * @param {string} second
 * @return {string[]}
 */
var findOcurrences = function(T, f, s) {
  T = T.split("" "");
  let ans = [];
  for(i=0;i+3<=T.length;++i) {
    if(T[i]===f && T[i+1]===s) ans.push(T[i+2]);
  }
  return ans;
};",11111111111111111111111111111
378138879,javascript,"17 hours, 54 minutes",1596936358,Accepted,80 ms,/submissions/detail/378138879/,Not Pending,Minimum Value to Get Positive Step by Step Sum,37.6 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var minStartValue = function(A) {
  for(let ans=1;;++ans) {
    let cur=ans;
    let ok = true;
    for(let x of A) {
      cur += x;
      if(cur<1) {
        ok = false;
        break;
      }
    }
    if(ok) return ans;
  }
    
  return -1;
};",11111111111111111111111111111111111111111111111111111
378137572,javascript,"17 hours, 59 minutes",1596936093,Accepted,136 ms,/submissions/detail/378137572/,Not Pending,Matrix Cells in Distance Order,44.7 MB,"/**
 * @param {number} R
 * @param {number} C
 * @param {number} r0
 * @param {number} c0
 * @return {number[][]}
 */
var allCellsDistOrder = function(R, C, r0, c0) {
  let ans = [];
  for(let i=0;i<R;++i) for(let j=0;j<C;++j) ans.push([i,j]);
  return ans.sort((a,b)=>Math.abs(a[0]-r0)+Math.abs(a[1]-c0)-(Math.abs(b[0]-r0)+Math.abs(b[1]-c0)));
};",111111111111111111111111111111111111111111111111111111111111111111
378037716,javascript,"23 hours, 10 minutes",1596917413,Accepted,116 ms,/submissions/detail/378037716/,Not Pending,Repeated Substring Pattern,44.9 MB,"/**
 * @param {string} s
 * @return {boolean}
 */
var repeatedSubstringPattern = function(s) {
  for(i=1;i<=Math.floor(s.length/2);++i) if(s.length % i===0) {
    if(s.match(new RegExp(s.substring(0,i), ""g"")).join``.length === s.length) return true;
  }  
  return false;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
378036967,javascript,"23 hours, 12 minutes",1596917283,Time Limit Exceeded,N/A,/submissions/detail/378036967/,Not Pending,Repeated Substring Pattern,N/A,"/**
 * @param {string} s
 * @return {boolean}
 */
var repeatedSubstringPattern = function(s) {
  for(i=1;i<=s.length-1;++i) {
    if(s.match(new RegExp(s.substring(0,i), ""g"")).join``.length === s.length) return true;
  }  
  return false;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000
378035179,javascript,"23 hours, 17 minutes",1596916981,Accepted,324 ms,/submissions/detail/378035179/,Not Pending,Repeated String Match,37.3 MB,"/**
 * @param {string} A
 * @param {string} B
 * @return {number}
 */
var repeatedStringMatch = function(A, B) {
  let ans=-1;
  for(let s=0;s<A.length;++s) {
    let nrep = 1;
    let i=s;
    let ok = true;
    for(let j=0;j<B.length;++j) {
      if(A[i] !== B[j]) {
        ok = false;
        break;
      }
      if(++i === A.length) {
        nrep++;
        i = 0;
      }
    }
    if(ok) {
      if(i===0) nrep--;
      if(ans===-1||nrep<ans) ans=nrep;
    }
  }
  return ans;
};",1111111111111111111111111111111111111111111111111111111
378034739,javascript,"23 hours, 19 minutes",1596916906,Wrong Answer,N/A,/submissions/detail/378034739/,Not Pending,Repeated String Match,N/A,"/**
 * @param {string} A
 * @param {string} B
 * @return {number}
 */
var repeatedStringMatch = function(A, B) {
  let ans=-1;
  for(let s=0;s<A.length;++s) {
    let nrep = 1;
    let i=s;
    let ok = true;
    for(let j=0;j<B.length;++j) {
      if(A[i] !== B[j]) {
        ok = false;
        break;
      }
      if(++i === A.length) {
        nrep++;
        i = 0;
      }
    }
    if(ok) {
      if(ans===-1||nrep<ans) ans=nrep;
    }
  }
  return ans;
};",1001100111111111101010101011101111111111111110010011011
377982129,javascript,"1 day, 1 hour",1596908635,Accepted,120 ms,/submissions/detail/377982129/,Not Pending,Count Largest Group,43.6 MB,"/**
 * @param {number} n
 * @return {number}
 */
var countLargestGroup = function(n) {
  let d={};
  let maxi=0;
  for(let i=1;i<=n;++i) {
    const s=(""""+i).split``.reduce((a,c)=>a+(+c),0);
    d[s]=1+(d[s]||0);
    maxi=Math.max(maxi, d[s]);
  }
  return Object.keys(d).filter(i=>d[i]===maxi).length;
};",111111111111111111111111111111111111111111111111111111111111111111111111111
377977394,javascript,"1 day, 1 hour",1596907907,Accepted,80 ms,/submissions/detail/377977394/,Not Pending,Find Positive Integer Solution for a Given Equation,37.2 MB,"/**
 * // This is the CustomFunction's API interface.
 * // You should not implement it, or speculate about its implementation
 * function CustomFunction() {
 *     @param {integer, integer} x, y
 *     @return {integer}
 *     this.f = function(x, y) {
 *         ...
 *     };
 * };
 */

/**
 * @param {CustomFunction} customfunction
 * @param {integer} z
 * @return {integer[][]}
 */
var findSolution = function(f, z) {
  let ans=[];
  for(let x=1;f.f(x,1)<=z;++x) {
    for(let y=1;f.f(x,y)<=z;++y) {
      if(f.f(x,y)===z) ans.push([x,y]);
    }
  }
  return ans;
};",111111111111111111111111111111111111111111111
377972982,javascript,"1 day, 2 hours",1596907208,Accepted,132 ms,/submissions/detail/377972982/,Not Pending,Maximum Score After Splitting a String,43.6 MB,"/**
 * @param {string} s
 * @return {number}
 */
var maxScore = function(s) {
  let ans=0;
  
  const score = (s,t) => s.split``.map(x=>x===t).filter(x=>x).length;
  
  for(let i=1;i<s.length;++i) {
    ans=Math.max(ans, score(s.substring(0,i),""0"")+score(s.substring(i,s.length),""1""));
  }
  return ans;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
377972682,javascript,"1 day, 2 hours",1596907163,Wrong Answer,N/A,/submissions/detail/377972682/,Not Pending,Maximum Score After Splitting a String,N/A,"/**
 * @param {string} s
 * @return {number}
 */
var maxScore = function(s) {
  let ans=0;
  
  const score = (s,t) => s.split``.map(x=>x===t).filter(x=>x).length;
  
  for(let i=1;i<s.length-1;++i) {
    ans=Math.max(ans, score(s.substring(0,i),""0"")+score(s.substring(i,s.length),""1""));
  }
  return ans;
};",1111111000111110011101111111111111111111111111111001111111111111111111011111111111111111111111111111011
377970620,javascript,"1 day, 2 hours",1596906840,Accepted,84 ms,/submissions/detail/377970620/,Not Pending,Consecutive Characters,37.6 MB,"/**
 * @param {string} s
 * @return {number}
 */
var maxPower = function(s) {
  let ans=0;
  let cur=0;
  let pre="""";
  for(let x of s) {
    if(pre!==x) {
      cur=1;
      pre=x;
    } else {
      cur++;
    }
    ans=Math.max(ans, cur);
  }
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
377969772,javascript,"1 day, 2 hours",1596906704,Accepted,84 ms,/submissions/detail/377969772/,Not Pending,String Matching in an Array,39.4 MB,"/**
 * @param {string[]} words
 * @return {string[]}
 */
var stringMatching = function(W) {
  const n=W.length;
  let ans=[];
  for(let i=0;i<n;++i) {
    let ok = false;
    for(let j=0;j<n;++j) if(i!==j) {
      if(W[j].match(W[i])!==null) ok = true;
    }
    if(ok) ans.push(W[i]);
  }
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111
377969341,javascript,"1 day, 2 hours",1596906635,Wrong Answer,N/A,/submissions/detail/377969341/,Not Pending,String Matching in an Array,N/A,"/**
 * @param {string[]} words
 * @return {string[]}
 */
var stringMatching = function(W) {
  const n=W.length;
  let ans=[];
  for(let i=0;i<n;++i) for(let j=0;j<n;++j) if(i!==j) {
    if(W[i].match(W[j])!==null) ans.push(W[j]);
  }
  return ans;
};",111010000100000000000000000000000000000000000000000000000000000000
377967792,javascript,"1 day, 2 hours",1596906377,Accepted,72 ms,/submissions/detail/377967792/,Not Pending,Generate a String With Characters That Have Odd Counts,37 MB,"/**
 * @param {number} n
 * @return {string}
 */

// 1 : a
// 2 : ab
// 3 : aaa
// 4 : aaab
// 5 : aaabc
// 6 : aaaaab
// 7 : aaaaaaa
// 8 : aaaaaaab
// 9 : aaa

var generateTheString = function(n) {
  return n%2 ? ""a"".repeat(n) : ""a"".repeat(n-1) + ""b"";
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
377780024,javascript,"1 day, 11 hours",1596874175,Accepted,100 ms,/submissions/detail/377780024/,Not Pending,Path Sum III,41.9 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {number}
 */
var pathSum = function(root, S) {
  let ans = 0;
  let d = {0:1};
  function go(node, sum) {
    if(node===null) return;
    sum += node.val;
    ans += (d[sum-S]||0);
    d[sum] = 1+(d[sum]||0);
    go(node.left, sum);
    go(node.right, sum);
    d[sum]--;
  }
  
  go(root, 0);
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
377779721,javascript,"1 day, 11 hours",1596874115,Wrong Answer,N/A,/submissions/detail/377779721/,Not Pending,Path Sum III,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {number}
 */
var pathSum = function(root, S) {
  let ans = 0;
  let d = {0:1};
  function go(node, sum) {
    if(node===null) return;
    sum += node.val;
    d[sum-S] && ans++;
    d[sum] = 1+(d[sum]||0);
    go(node.left, sum);
    go(node.right, sum);
    d[sum]--;
  }
  
  go(root, 0);
  return ans;
};",111111111111111111101011111111011111111111111011111111111111111111101111111111111111111111111111111111111111111111100010001111
377761209,javascript,"1 day, 12 hours",1596870626,Accepted,112 ms,/submissions/detail/377761209/,Not Pending,Path Sum III,40.2 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} sum
 * @return {number}
 */
var pathSum = function(root, S) {
  let ans = 0;
  
  function go(node, sum) {
    if(node===null) return;
    sum += node.val;
    if(sum===S) ans++;
    go(node.left, sum);
    go(node.right, sum);
  }
  
  function start(node) {
    if(node===null) return;
    go(node, 0);
    start(node.left);
    start(node.right);
  }
  start(root);
  return ans;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
377482318,javascript,"2 days, 3 hours",1596814677,Accepted,88 ms,/submissions/detail/377482318/,Not Pending,Vertical Order Traversal of a Binary Tree,38.8 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var verticalTraversal = function(root) {
  let d={};
  
  let que=[[root,0,0]];
  let next=[];
   while(que.length>0) {
    for(let v of que) {
      if(v===null) continue;
      const node=v[0];
      const x=v[1];
      const y=v[2];
      
      if(d[x]===undefined) d[x]=[];
      d[x].push([node.val,y]);
      
      if(node.left!==null) next.push([node.left,x-1,y-1]);
      if(node.right!==null) next.push([node.right,x+1,y-1]);
    }
    que=[...next];
    next.length=0;
  }
  //console.log(d);
  return Object.keys(d).sort((a,b)=>a-b).map(x=>(d[x].sort((a,b)=>a[0]-b[0]).sort((a,b)=>b[1]-a[1]).map(y=>y[0])));
};",111111111111111111111111111111
377479381,javascript,"2 days, 3 hours",1596814157,Wrong Answer,N/A,/submissions/detail/377479381/,Not Pending,Vertical Order Traversal of a Binary Tree,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var verticalTraversal = function(root) {
  let d={};
  
  let que=[[root,0]];
  let next=[];
   while(que.length>0) {
    for(let v of que) {
      if(v===null) continue;
      const node=v[0];
      const x=v[1];
      
      if(d[x]===undefined) d[x]=[];
      d[x].push(node.val);
      
      if(node.left!==null) next.push([node.left,x-1]);
      if(node.right!==null) next.push([node.right,x+1]);
    }
    que=[...next];
    next.length=0;
  }
  
  return Object.keys(d).sort((a,b)=>a-b).map(x=>d[x]);
};",111111111111011010000000000000
377475498,javascript,"2 days, 4 hours",1596813452,Wrong Answer,N/A,/submissions/detail/377475498/,Not Pending,Vertical Order Traversal of a Binary Tree,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number[][]}
 */
var verticalTraversal = function(root) {
  let d={};
  function solve(node, x) {
    if(node===null) return;
    if(d[x]===undefined) d[x] = [];
    d[x].push(node.val);
    solve(node.left, x-1);
    solve(node.right, x+1);
  }
  solve(root, 0);
  return Object.keys(d).sort((a,b)=>a-b).map(x=>d[x]);
};",111111111011000000000000000000
376960754,javascript,"3 days, 6 hours",1596718092,Accepted,120 ms,/submissions/detail/376960754/,Not Pending,Find All Duplicates in an Array,45.3 MB,"/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDuplicates = function(A) {
  let n = A.length;
  for(let i=0;i<n;++i) A[i] = A[i]-1;
  for(let i=0;i<n;++i) {
    let u = A[i] % n;
    A[u] += n;
  }
  const ans=[];
  for(let i=0;i<n;++i) {
    if(A[i]>=2*n) {
      ans.push(i+1);
    }
  }
  return ans;
};",1111111111111111111111111111
376960407,javascript,"3 days, 6 hours",1596718022,Wrong Answer,N/A,/submissions/detail/376960407/,Not Pending,Find All Duplicates in an Array,N/A,"/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDuplicates = function(A) {
  let n = A.length;
  for(let i=0;i<n;++i) A[i] = A[i]-1;
  for(let i=0;i<n;++i) {
    let u = A[i] % n;
    A[u] += n;
  }
  const ans=[];
  for(let i=0;i<n;++i) {
    if(A[i]>2*n) {
      ans.push(i+1);
    }
  }
  return ans;
};",1110111111100011000011000011
376481512,javascript,"4 days, 5 hours",1596635188,Accepted,348 ms,/submissions/detail/376481512/,Not Pending,Add and Search Word - Data structure design,81.1 MB,"/**
 * Initialize your data structure here.
 */

function Trie(c) {
  this.ch = c;
  this.next = new Map();
  this.endsHere = false;
}

var WordDictionary = function() {
  this.head = new Trie(null); 
};


/**
 * Adds a word into the data structure. 
 * @param {string} word
 * @return {void}
 */
WordDictionary.prototype.addWord = function(w) {
  function add(node, s, i) {
    if(i===s.length) {
      node.endsHere = true;
      return;
    }
    if(!node.next.has(s[i])) {
      node.next.set(s[i], new Trie(s[i]));    
    }
    add(node.next.get(s[i]), s, i+1);
  }
  add(this.head, w.split``, 0);
};

/**
 * Returns if the word is in the data structure. A word could contain the dot character '.' to represent any one letter. 
 * @param {string} word
 * @return {boolean}
 */
WordDictionary.prototype.search = function(w) {
  let v = {};
  
  function find(node, s, i) {
    if(i===s.length) {
      return node.endsHere;
    }
    if(node === null) return false;
    if(v[s,i]!==undefined) return false;
    v[s[i]+"" ""+i] = true;
    if(s[i]!==""."") {
      return node.next.has(s[i]) && find(node.next.get(s[i]), s, i+1);
    } else {
      for(c of ""abcdefghijklmnopqrstuvwxyz"".split``) {
        if(node.next.has(c) && find(node.next.get(c), s, i+1))
          return true;
      }
    }
    return false;
  }
  const ans = find(this.head, w.split``, 0); 
  return ans;
};

/** 
 * Your WordDictionary object will be instantiated and called as such:
 * var obj = new WordDictionary()
 * obj.addWord(word)
 * var param_2 = obj.search(word)
 */",1111111111111
376474435,javascript,"4 days, 5 hours",1596633784,Wrong Answer,N/A,/submissions/detail/376474435/,Not Pending,Add and Search Word - Data structure design,N/A,"/**
 * Initialize your data structure here.
 */

function Trie(c) {
  this.ch = c;
  this.next = {};
}

var WordDictionary = function() {
  this.head = new Trie(null); 
};


/**
 * Adds a word into the data structure. 
 * @param {string} word
 * @return {void}
 */
WordDictionary.prototype.addWord = function(w) {
  function add(node, s, i) {
    if(i===s.length) return;
    node.next[s[i]] = new Trie(s[i]);
    add(node.next[s[i]], s, i+1);
  }
  add(this.head, w.split``, 0);
};

/**
 * Returns if the word is in the data structure. A word could contain the dot character '.' to represent any one letter. 
 * @param {string} word
 * @return {boolean}
 */
WordDictionary.prototype.search = function(w) {
  let v = {};
  
  function find(node, s, i) {
    if(i===s.length) return true;
    if(node === null) return false;
    if(v[s,i]!==undefined) return false;
    v[(s,i)] = true;
    //console.log(i+ "" ""+s[i]);
    //console.log(node);
    if(s[i]!=='.') {
      return node.next[s[i]] !== undefined && find(node.next[s[i]], s, i+1);
    } else {
      for(c of ""abcdefghijklmnopqrstuvwxyz"".split``) {
        if(node.next[c] !== undefined && find(node.next[c], s, i+1))
          return true;
      }
    }
    return false;
  }
  return find(this.head, w.split``, 0); 
};

/** 
 * Your WordDictionary object will be instantiated and called as such:
 * var obj = new WordDictionary()
 * obj.addWord(word)
 * var param_2 = obj.search(word)
 */",1111111100010
376291834,javascript,"4 days, 15 hours",1596600605,Accepted,156 ms,/submissions/detail/376291834/,Not Pending,Deepest Leaves Sum,47.3 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var deepestLeavesSum = function(root) {
  let ret=0;
  let maxi=0;
  
  function solve(n, d) {
    if(n===null) return;
    if(maxi<d) {
      maxi = d;
      ret = 0;
    }
    if(maxi===d) ret += n.val;
    solve(n.left, d+1);
    solve(n.right, d+1);
  }
  
  solve(root, 0);
  return ret;
};",111111111111111
376290654,javascript,"4 days, 15 hours",1596600452,Accepted,92 ms,/submissions/detail/376290654/,Not Pending,Group the People Given the Group Size They Belong To,40.6 MB,"/**
 * @param {number[]} groupSizes
 * @return {number[][]}
 */
var groupThePeople = function(G) {
  let d={};
  
  G.map((x,i)=>d[x]===undefined?d[x]=[i]:d[x].push(i));
  
  let ret = [];
  for(k of Object.keys(d)) {
    while(d[k].length>0) {
      ret.push(d[k].splice(0,k));
    }
  }
  return ret;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
376283255,javascript,"4 days, 15 hours",1596599489,Accepted,148 ms,/submissions/detail/376283255/,Not Pending,Shortest Unsorted Continuous Subarray,39.4 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var findUnsortedSubarray = function(A) {
  const n=A.length;
  let B=[...A].sort((a,b)=>a-b);
  let mini=n-1;
  let maxi=0;
  
  for(let i=0;i<n;i++) {
    if(A[i]!==B[i]) {
      mini = Math.min(mini, i);
      maxi = Math.max(maxi, i);
    }
  }
  
  return mini>=maxi ? 0 : maxi-mini+1;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
376282613,javascript,"4 days, 15 hours",1596599401,Wrong Answer,N/A,/submissions/detail/376282613/,Not Pending,Shortest Unsorted Continuous Subarray,N/A,"/**
 * @param {number[]} nums
 * @return {number}
 */
var findUnsortedSubarray = function(A) {
  const n=A.length;
  let B=[...A].sort((a,b)=>a-b);
  let mini=n-1;
  let maxi=0;
  
  for(let i=0;i<n;i++) {
    if(A[i]!==B[i]) {
      mini = Math.min(mini, i);
      maxi = Math.max(maxi, i);
    }
  }
  
  return maxi-mini+1;
};",1001111011111101011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110011111111100110111111011001111110110011111111111111111110111111010111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
376280255,javascript,"4 days, 15 hours",1596599078,Accepted,108 ms,/submissions/detail/376280255/,Not Pending,Unique Email Addresses,41.6 MB,"/**
 * @param {string[]} emails
 * @return {number}
 */
var numUniqueEmails = function(emails) {
  let S=new Set();
  for(let e of emails) {
    e = e.split('@');
    S.add(e[0].replace(/\./g, """").split('+')[0]+""@""+e[1]);
  }
  console.log(S);
  return S.size;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
376277732,javascript,"4 days, 15 hours",1596598752,Wrong Answer,N/A,/submissions/detail/376277732/,Not Pending,Unique Email Addresses,N/A,"/**
 * @param {string[]} emails
 * @return {number}
 */
var numUniqueEmails = function(emails) {
  let S=new Set();
  for(let e of emails) {
    e = e.split('@');
    S.add(e[0].replace('.','').split('+')[0]+""@""+e[1]);
  }
  console.log(S);
  return S.size;
};",0111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
376277129,javascript,"4 days, 15 hours",1596598668,Wrong Answer,N/A,/submissions/detail/376277129/,Not Pending,Unique Email Addresses,N/A,"/**
 * @param {string[]} emails
 * @return {number}
 */
var numUniqueEmails = function(emails) {
  let S=new Set();
  for(let e of emails) {
    e = e.replace('.','').split('@');
    S.add(e[0].split('+')[0]+""@""+e[1]);
  }
  return S.size;
};",1111101111111010111011010000100000000101110000010110001000000010001011110111000000101000101111110001110010001000001111100110111000011100011010101011000011111010001111110000001100110100
376010671,javascript,"5 days, 3 hours",1596557499,Accepted,84 ms,/submissions/detail/376010671/,Not Pending,Sum of Root To Leaf Binary Numbers,38.6 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var sumRootToLeaf = function(root) {
  let ret = 0;
  function solve(node, s) {
    if(node===null) {
      return;
    } 
    if(node.left===null && node.right === null) {
      ret += parseInt(s+node.val, 2);
      return; 
    }
    solve(node.left, s+node.val);
    solve(node.right, s+node.val);
  }
  solve(root, """");
  return ret;
};",111111111111111111111111111111111111111111111111111111111111111
376009871,javascript,"5 days, 3 hours",1596557399,Wrong Answer,N/A,/submissions/detail/376009871/,Not Pending,Sum of Root To Leaf Binary Numbers,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var sumRootToLeaf = function(root) {
  let ret = 0;
  function solve(node, s) {
    if(node===null) {
      ret += parseInt(s, 2);
      return;
    } 
    solve(node.left, s+node.val);
    solve(node.right, s+node.val);
  }
  solve(root, """");
  return ret/2;
};",111001101111111111111111111111111111000000000000000000000000000
376003690,javascript,"5 days, 3 hours",1596556569,Accepted,76 ms,/submissions/detail/376003690/,Not Pending,Univalued Binary Tree,37.4 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
var isUnivalTree = function(root) {
  function solve(node, val) {
    if(node===null) return true;
    if(node.val!==val) return false;
    return solve(node.left, val) && solve(node.right, val);
  }
  return solve(root, root.val);
};",111111111111111111111111111111111111111111111111111111111111111111111111
376001868,javascript,"5 days, 3 hours",1596556326,Accepted,96 ms,/submissions/detail/376001868/,Not Pending,Relative Sort Array,37.2 MB,"/**
 * @param {number[]} arr1
 * @param {number[]} arr2
 * @return {number[]}
 */
var relativeSortArray = function(A,B) {
  let d={};
  B.map((x,i)=>d[x]=i);
  const C=A.filter(x=>d[x]===undefined).sort((a,b)=>a-b);
  return A.filter(x=>d[x]!==undefined).sort((a,b)=>(d[a]-d[b])).concat(C);
};",1111111111111111
375997634,javascript,"5 days, 3 hours",1596555782,Wrong Answer,N/A,/submissions/detail/375997634/,Not Pending,Relative Sort Array,N/A,"/**
 * @param {number[]} arr1
 * @param {number[]} arr2
 * @return {number[]}
 */
var relativeSortArray = function(A,B) {
  let d={};
  B.map((x,i)=>d[x]=i);
  return A.sort((a,b)=>(d[a]-d[b]));
};",1000001010101010
375996227,javascript,"5 days, 3 hours",1596555602,Accepted,168 ms,/submissions/detail/375996227/,Not Pending,Find Common Characters,43.9 MB,"/**
 * @param {string[]} A
 * @return {string[]}
 */
var commonChars = function(A) {
  let d={};
  let ret=[];
  A=A.map(x=>x.split``);
  for(let c of ""abcdefghijklmnopqrstuvwxyz"") {
    let mini = 2147483647;
    for(let w of A) {
      let cnt = w.filter(x=>x===c).length;
      mini=Math.min(mini,cnt);
    }
    ret += c.repeat(mini);
  }
  return ret.split``;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111
375994396,javascript,"5 days, 3 hours",1596555358,Wrong Answer,N/A,/submissions/detail/375994396/,Not Pending,Find Common Characters,N/A,"/**
 * @param {string[]} A
 * @return {string[]}
 */
var commonChars = function(A) {
  let d={};
  for(let w of A) {
    w.split``.map(c=>d[c]=1+(d[c]||0));
  }
  let ret=[];
  for(let c of Object.keys(d)) {
    ret+=c.repeat(Math.floor(d[c]/A.length));
  }
  return ret.split``;
};",11000000000000000000000000000000000000000000000000000000000000000000000000000000001
375991340,javascript,"5 days, 3 hours",1596554958,Accepted,80 ms,/submissions/detail/375991340/,Not Pending,Remove All Adjacent Duplicates In String,44.4 MB,"/**
 * @param {string} S
 * @return {string}
 */
var removeDuplicates = function(S) {
  const stk=[];
  for(let x of S) {
    stk.push(x);
    if(stk.length<=1) continue;
    if(stk[stk.length-1]==stk[stk.length-2]) {
      stk.pop();
      stk.pop();
    }
  }
  return stk.join``;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375988281,javascript,"5 days, 3 hours",1596554572,Accepted,248 ms,/submissions/detail/375988281/,Not Pending,Minimum Number of Steps to Make Two Strings Anagram,44.2 MB,"/**
 * @param {string} s
 * @param {string} t
 * @return {number}
 */
var minSteps = function(s, t) {
  let d={};
  const L=""abcdefghijklmnopqrstuvwxyz"";
  for(let x of L) d[x]=0;
  for(let x of s) d[x]++;
  for(let x of t) d[x]--;
  return L.split``.map(x=>Math.abs(d[x])).reduce((a,x)=>a+x) / 2;
};
",111111111111111111111111111111111111111111111111111111111111111
375882981,javascript,"5 days, 8 hours",1596537963,Accepted,112 ms,/submissions/detail/375882981/,Not Pending,Power of Four,38.2 MB,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(n) {
  if(n===0) return false;
  if(n!==(n&-n)) return false;
  return  (1431655765 & n) === n;
}
375879080,javascript,"5 days, 8 hours",1596537152,Accepted,108 ms,/submissions/detail/375879080/,Not Pending,Power of Four,38.3 MB,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(n) {
  if(n===0) return false;
  if(n===1) return true;
  if(n!==(n&-n)) return false;
  return  (1431655765 & n) === n;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375877992,javascript,"5 days, 8 hours",1596536932,Wrong Answer,N/A,/submissions/detail/375877992/,Not Pending,Power of Four,N/A,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(n) {
  if(n===0) return false;
  if(n===1) return true;
  return (1431655764 & n) === n;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111111111111101111111111101110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111101110111111111111111111111111111111111111111111101110111111111110111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375877559,javascript,"5 days, 8 hours",1596536850,Wrong Answer,N/A,/submissions/detail/375877559/,Not Pending,Power of Four,N/A,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(n) {
  return n && (1431655765 & n) === n;
}
375877477,javascript,"5 days, 8 hours",1596536836,Wrong Answer,N/A,/submissions/detail/375877477/,Not Pending,Power of Four,N/A,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(n) {
  return n && (1431655764 & n) === n;
}
375877293,javascript,"5 days, 8 hours",1596536797,Wrong Answer,N/A,/submissions/detail/375877293/,Not Pending,Power of Four,N/A,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(n) {
  return (1431655764 & n) === n;
}
375875617,javascript,"5 days, 9 hours",1596536463,Wrong Answer,N/A,/submissions/detail/375875617/,Not Pending,Power of Four,N/A,"/**
 * @param {number} num
 * @return {boolean}
 */
var isPowerOfFour = function(num) {
  return Math.pow(4,15) % Math.abs(num) === 0;  
}
375508573,javascript,"6 days, 1 hour",1596476622,Accepted,80 ms,/submissions/detail/375508573/,Not Pending,Can Make Arithmetic Progression From Sequence,37.4 MB,"var canMakeArithmeticProgression = A => A.sort((a,b)=>a-b).map((x,i)=>A[i]-A[i-1]).filter(x=>x==A[1]-A[0]).length==A.length-1;",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375508394,javascript,"6 days, 1 hour",1596476594,Accepted,76 ms,/submissions/detail/375508394/,Not Pending,Can Make Arithmetic Progression From Sequence,37.5 MB,"var canMakeArithmeticProgression = A => A.sort((a,b)=>a-b).map((x,i)=>A[i]-A[i-1]).slice(1).filter(x=>x==A[1]-A[0]).length==A.length-1;",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375507724,javascript,"6 days, 1 hour",1596476488,Accepted,72 ms,/submissions/detail/375507724/,Not Pending,Can Make Arithmetic Progression From Sequence,37.4 MB,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var canMakeArithmeticProgression = function(A) {
  return A.sort((a,b)=>a-b).map((x,i)=>A[i]-A[i-1]).slice(1).filter(x=>x===A[1]-A[0]).length===A.length-1;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375505107,javascript,"6 days, 1 hour",1596476090,Accepted,92 ms,/submissions/detail/375505107/,Not Pending,Can Make Arithmetic Progression From Sequence,40 MB,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var canMakeArithmeticProgression = function(A) {
  if(A.length<=2) return true;
  A.sort((a,b)=>a-b);
  console.log(A);
  for(i=2;i<A.length;++i) {
    if(A[i-2]-A[i-1] != A[i-1]-A[i]) return false;
  }
  return true;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375504092,javascript,"6 days, 1 hour",1596475938,Wrong Answer,N/A,/submissions/detail/375504092/,Not Pending,Can Make Arithmetic Progression From Sequence,N/A,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var canMakeArithmeticProgression = function(A) {
  if(A.length<=2) return true;
  A.sort((a,b)=>a-b);
  for(i=2;i<A.length;++i) {
    if(A[i-2] == 2*A[i-1]-A[i]) return true;
  }
  return false;
};",1111101111111111111011011011011111011101111101001100101100100100110100100100110101111101111
375503824,javascript,"6 days, 1 hour",1596475900,Wrong Answer,N/A,/submissions/detail/375503824/,Not Pending,Can Make Arithmetic Progression From Sequence,N/A,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var canMakeArithmeticProgression = function(A) {
  A.sort((a,b)=>a-b);
  for(i=2;i<A.length;++i) {
    if(A[i-2] == 2*A[i-1]-A[i]) return true;
  }
  return false;
};",1110001111111111111011011011011111011101111101001100101100100100110100100100110101111101111
375500161,javascript,"6 days, 1 hour",1596475387,Accepted,80 ms,/submissions/detail/375500161/,Not Pending,The K Weakest Rows in a Matrix,38.2 MB,"/**
 * @param {number[][]} mat
 * @param {number} k
 * @return {number[]}
 */
var kWeakestRows = (A,k) => A.map((x,i)=>[i,x.reduce((a,b)=>a+b,0)]).sort((a,b)=>a[1]-b[1]).map(x=>x[0]).slice(0,k);",1111111111111111111111111111111111111111111111111111
375497430,javascript,"6 days, 2 hours",1596474961,Accepted,76 ms,/submissions/detail/375497430/,Not Pending,Build an Array With Stack Operations,36.9 MB,"/**
 * @param {number[]} target
 * @param {number} n
 * @return {string[]}
 */
var buildArray = function(A, n) {
  n=Math.min(n, A[A.length-1]);
  let ans=[];
  for(let i=1;i<=n;++i) {
    ans.push(""Push"");
    if(A.indexOf(i)===-1) {
      ans.push(""Pop"");
    }
  }
  return ans;
};",111111111111111111111111111111111111111111111111
375461789,javascript,"6 days, 3 hours",1596469514,Accepted,216 ms,/submissions/detail/375461789/,Not Pending,Sort Integers by The Number of 1 Bits,42.8 MB,"/**
 * @param {number[]} arr
 * @return {number[]}
 */
var sortByBits = function(A) {
  // https://stackoverflow.com/questions/43122082/efficiently-count-the-number-of-bits-in-an-integer-in-javascript
  let f = n => n?n.toString(2).match(/1/g).length:0;
  return A.sort((a,b)=>a-b).sort((a,b)=>f(a)-f(b));
};",11111111111111111111111111111111111111111111111111111111111111111111111111111
375461478,javascript,"6 days, 3 hours",1596469468,Accepted,204 ms,/submissions/detail/375461478/,Not Pending,Sort Integers by The Number of 1 Bits,42.6 MB,"/**
 * @param {number[]} arr
 * @return {number[]}
 */
var sortByBits = function(arr) {
  // https://stackoverflow.com/questions/43122082/efficiently-count-the-number-of-bits-in-an-integer-in-javascript
  const f = n => n?n.toString(2).match(/1/g).length:0;
  arr.sort((a,b)=>a-b).sort((a,b)=>f(a)-f(b));
  return arr;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111
375455664,javascript,"6 days, 3 hours",1596468551,Accepted,92 ms,/submissions/detail/375455664/,Not Pending,Maximum Depth of N-ary Tree,39.1 MB,"/**
 * // Definition for a Node.
 * function Node(val,children) {
 *    this.val = val;
 *    this.children = children;
 * };
 */

/**
 * @param {Node} root
 * @return {number}
 */
var maxDepth = function(node) {
  return node!==null?1+(node.children.length>0?Math.max(...node.children.map(x=>maxDepth(x))):0):0;
};",1111111111111111111111111111111111111
375330299,javascript,"6 days, 11 hours",1596442273,Accepted,76 ms,/submissions/detail/375330299/,Not Pending,Valid Palindrome,41.3 MB,"/**
 * @param {string} s
 * @return {boolean}
 */
var isPalindrome = function(s) {
  s=s.toLowerCase().match(/[a-z|0-9]/gi);
  if(s===null) return true;
  for(let i=0,j=s.length-1;i<j;i++,j--) 
      if(s[i]!==s[j]) return false;
  return true;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375235609,javascript,"6 days, 15 hours",1596425641,Accepted,168 ms,/submissions/detail/375235609/,Not Pending,Minimum Absolute Difference,49.6 MB,"/**
 * @param {number[]} arr
 * @return {number[][]}
 */
var minimumAbsDifference = function(A) {
  if(A.length<2) return [];
  let ans=[];
  const n=A.length;
  A.sort((a,b)=>a-b);
  let diff=A[n-1]-A[0];
  for(let i=1;i<n;++i) {
    const cur=A[i]-A[i-1];
    if(cur<diff) {
      diff=cur;
      ans.length=0; 
    } 
    if(cur===diff) {
      ans.push([A[i-1],A[i]]);
    }
  }
  return ans;
};",111111111111111111111111111111111111
375232384,javascript,"6 days, 15 hours",1596425037,Accepted,64 ms,/submissions/detail/375232384/,Not Pending,Peak Index in a Mountain Array,37.6 MB,"/**
 * @param {number[]} A
 * @return {number}
 */
var peakIndexInMountainArray = function(A) {
  return A.indexOf(Math.max(...A));
};",11111111111111111111111111111111
375232009,javascript,"6 days, 15 hours",1596424965,Accepted,256 ms,/submissions/detail/375232009/,Not Pending,Number of Recent Calls,46.8 MB,"
var RecentCounter = function() {
  this.t = [];
};

/** 
 * @param {number} t
 * @return {number}
 */
RecentCounter.prototype.ping = function(t) {
  this.t.push(t);
  while(true) {
    if(this.t[0]===t) break;
    if(t-3000<=this.t[0]) break;
    this.t.splice(0,1);
  }
  return this.t.length;  
};

/** 
 * Your RecentCounter object will be instantiated and called as such:
 * var obj = new RecentCounter()
 * var param_1 = obj.ping(t)
 */",11111111111111111111111111111111111111111111111111111111111111111111
375227445,javascript,"6 days, 16 hours",1596424123,Accepted,96 ms,/submissions/detail/375227445/,Not Pending,N-ary Tree Preorder Traversal,39.6 MB,"/**
 * // Definition for a Node.
 * function Node(val, children) {
 *    this.val = val;
 *    this.children = children;
 * };
 */

/**
 * @param {Node} root
 * @return {number[]}
 */
var preorder = function(root) {
  let ans=[];
  
  function go(node) {
    if(node===null) return;
    ans.push(node.val);
    for(let u of node.children) go(u);
  }
  go(root)
  return ans;    
};",1111111111111111111111111111111111111
375227277,javascript,"6 days, 16 hours",1596424092,Accepted,100 ms,/submissions/detail/375227277/,Not Pending,N-ary Tree Postorder Traversal,39.6 MB,"/**
 * // Definition for a Node.
 * function Node(val,children) {
 *    this.val = val;
 *    this.children = children;
 * };
 */

/**
 * @param {Node} root
 * @return {number[]}
 */
var postorder = function(root) {
  let ans=[];
  
  function go(node) {
    if(node===null) return;
    for(let u of node.children) go(u);
    ans.push(node.val);
  }
  go(root)
  return ans;
};",1111111111111111111111111111111111111
375223514,javascript,"6 days, 16 hours",1596423381,Accepted,128 ms,/submissions/detail/375223514/,Not Pending,Sort Array By Parity II,45.1 MB,"/**
 * @param {number[]} A
 * @return {number[]}
 */
var sortArrayByParityII = function(A) {
  A.sort((a,b)=>a-b);
  let o=A.filter(x=>x%2);
  let e=A.filter(x=>x%2===0);
  return new Array(A.length).fill(0).map((x,i)=>i%2===0?e[Math.floor(i/2)]:o[Math.floor(i/2)]);
};",1111111111111111111111111111111111111111111111111111111111111
375220552,javascript,"6 days, 16 hours",1596422844,Accepted,72 ms,/submissions/detail/375220552/,Not Pending,Length of Last Word,36.7 MB,"/**
 * @param {string} s
 * @return {number}
 */
var lengthOfLastWord = function(s) {
  let c = s.replace(/^\s+|\s+$/g,"""").split("" "");
  if(c.length===0) return 0;
  else return c[c.length-1].length;
};",11111111111111111111111111111111111111111111111111111111111
375219712,javascript,"6 days, 16 hours",1596422691,Wrong Answer,N/A,/submissions/detail/375219712/,Not Pending,Length of Last Word,N/A,"/**
 * @param {string} s
 * @return {number}
 */
var lengthOfLastWord = function(s) {
  let c = s.split("" "");
  if(c.length===0) return 0;
  else return c[c.length-1].length;
};",11111100001010111001111111111111111110010111100100100001000
375216035,javascript,"6 days, 16 hours",1596422004,Accepted,80 ms,/submissions/detail/375216035/,Not Pending,Next Greater Element I,39.1 MB,"/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */
var nextGreaterElement = function(A, B) {
  d={};
  for(let i=0;i<B.length;++i) {
    d[B[i]]=-1;
    for(let j=i+1;j<B.length;++j) {
      if(B[i]<B[j]) {
        d[B[i]]=B[j];
        break;
      }
    }
  }
  return A.map(x=>d[x]);
};",11111111111111111
375214096,javascript,"6 days, 16 hours",1596421628,Wrong Answer,N/A,/submissions/detail/375214096/,Not Pending,Next Greater Element I,N/A,"/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */
var nextGreaterElement = function(A, B) {
  d={};
  for(let i=0;i<B.length-1;++i) {
    if(B[i]<B[i+1])
      d[B[i]]=B[i+1];
  }
  return A.map(x=>!!d[x]?d[x]:-1);
};",11111111000111000
375165842,javascript,"6 days, 19 hours",1596412387,Wrong Answer,N/A,/submissions/detail/375165842/,Not Pending,Can I Win,N/A,"/**
 * @param {number} maxChoosableInteger
 * @param {number} desiredTotal
 * @return {boolean}
 */
var canIWin = function(M, T) {
  let d={};
  function solve(n) {
    if(n>T) {
      return true;
    }
    if(d[n]!==undefined) return d[n];
    d[n]=false;
    for(let i=1;i<=M;++i) 
      if(!solve(n+i)) {
        d[n]=true;
      }
    return d[n];
  }
  
  return solve(0);
};",101011101111011101111101111111111111111111001011100011
375162597,javascript,"6 days, 19 hours",1596411791,Accepted,6724 ms,/submissions/detail/375162597/,Not Pending,Rotate List,38.7 MB,"/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} k
 * @return {ListNode}
 */
var rotateRight = function(head, k) {
  if(head===null||head.next==null) return head;
  while(k-->0) {
    let cur=head;
    let prev=null;
    while(cur.next!==null) {
      prev=cur;
      cur=cur.next;    
    }
    cur.next=head;
    prev.next=null;
    head=cur;
  }  
  return head;

};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
375161912,javascript,"6 days, 19 hours",1596411672,Runtime Error,N/A,/submissions/detail/375161912/,Not Pending,Rotate List,N/A,"/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} k
 * @return {ListNode}
 */
var rotateRight = function(head, k) {
  while(k-->0) {
    let cur=head;
    let prev=null;
    while(cur.next!==null) {
      prev=cur;
      cur=cur.next;    
    }
    cur.next=head;
    prev.next=null;
    head=cur;
  }  
  return head;

};",111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
375111464,javascript,"6 days, 22 hours",1596402888,Accepted,76 ms,/submissions/detail/375111464/,Not Pending,Next Greater Element III,36.8 MB,"/**
 * @param {number} n
 * @return {number}
 */

// https://www.nayuki.io/page/next-lexicographical-permutation-algorithm
function nextPermutation(array) {
    // Find non-increasing suffix
    var i = array.length - 1;
    while (i > 0 && array[i - 1] >= array[i])
        i--;
    if (i <= 0)
        return false;
    
    // Find successor to pivot
    var j = array.length - 1;
    while (array[j] <= array[i - 1])
        j--;
    var temp = array[i - 1];
    array[i - 1] = array[j];
    array[j] = temp;
    
    // Reverse suffix
    j = array.length - 1;
    while (i < j) {
        temp = array[i];
        array[i] = array[j];
        array[j] = temp;
        i++;
        j--;
    }
    return true;
}


var nextGreaterElement = function(n) {
  let x=n.toString().split``;
  if(!nextPermutation(x)) return -1;
  let ans=parseInt(x.join``);
  return ans >= Math.pow(2,31) ? -1 : ans;
};",11111111111111111111111111111111111
375111231,javascript,"6 days, 22 hours",1596402844,Wrong Answer,N/A,/submissions/detail/375111231/,Not Pending,Next Greater Element III,N/A,"/**
 * @param {number} n
 * @return {number}
 */

// https://www.nayuki.io/page/next-lexicographical-permutation-algorithm
function nextPermutation(array) {
    // Find non-increasing suffix
    var i = array.length - 1;
    while (i > 0 && array[i - 1] >= array[i])
        i--;
    if (i <= 0)
        return false;
    
    // Find successor to pivot
    var j = array.length - 1;
    while (array[j] <= array[i - 1])
        j--;
    var temp = array[i - 1];
    array[i - 1] = array[j];
    array[j] = temp;
    
    // Reverse suffix
    j = array.length - 1;
    while (i < j) {
        temp = array[i];
        array[i] = array[j];
        array[j] = temp;
        i++;
        j--;
    }
    return true;
}


var nextGreaterElement = function(n) {
  let x=n.toString().split``;
  if(!nextPermutation(x)) return -1;
  let ans=parseInt(x.join``);
  return ans >= Math.pow(2,32) ? -1 : ans;
};",11111111111111111111111111111111110
375108515,javascript,"6 days, 22 hours",1596402385,Wrong Answer,N/A,/submissions/detail/375108515/,Not Pending,Next Greater Element III,N/A,"/**
 * @param {number} n
 * @return {number}
 */
var nextGreaterElement = function(n) {
  let x=n.toString().split``;
  x.sort();
  x.reverse();
  let ans = parseInt(x.join``);
  return ans >= Math.pow(2,32) || ans <= n ? -1 : ans;
};",11111111111101001100000000000101011
375107954,javascript,"6 days, 22 hours",1596402293,Wrong Answer,N/A,/submissions/detail/375107954/,Not Pending,Next Greater Element III,N/A,"/**
 * @param {number} n
 * @return {number}
 */
var nextGreaterElement = function(n) {
  n=n.toString().split``;
  n.sort();
  n.reverse();
  let ans = parseInt(n.join``);
  return ans >= Math.pow(2,32) ? -1 : ans;
};",10000001101100000000000000000000011
375005861,javascript,1 week,1596386368,Accepted,72 ms,/submissions/detail/375005861/,Not Pending,Jump Game II,37.7 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var jump = function(A) {
  let L=0,H=0,J=0;
  while(H<A.length-1) {
    let next=H;
    for(let i=L;i<=H;++i) {
      next=Math.max(next, i+A[i]);
    }
    L=H+1;
    H=next;
    J++;
  }
  return J;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374994281,javascript,1 week,1596384419,Time Limit Exceeded,N/A,/submissions/detail/374994281/,Not Pending,Jump Game II,N/A,"/**
 * @param {number[]} nums
 * @return {number}
 */
var jump = function(a) {
  const n=a.length;
  let d=new Array(n);
  d.fill(2147483647);
  d[0]=0;
  let que=[[0],[]];
  for(let x=0;d[n-1]>=2147483647;++x) {
    const cur=x%2;
    const next=1-cur;
    for(let u of que[cur]) {
      for(let i=1;i<=a[u];++i) {
        if(i+u>n) continue;
        if(d[i+u]<=x+1) continue;
        d[i+u]=x+1;
        que[next].push(i+u);
      }
    }
    que[cur].length=0;
  }
  return d[n-1];
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374992259,javascript,1 week,1596384087,Time Limit Exceeded,N/A,/submissions/detail/374992259/,Not Pending,Jump Game II,N/A,"/**
 * @param {number[]} nums
 * @return {number}
 */
var jump = function(a) {
  const n=a.length;
  let d=new Array(n);
  d.fill(2147483647);
  d[0]=0;
  let cur=[0];
  let next=[];
  for(let x=0;d[n-1]>=2147483647;++x) {
    for(let u of cur) {
      for(let i=1;i<=a[u];++i) {
        if(i+u>n) continue;
        if(d[i+u]<=x+1) continue;
        d[i+u]=x+1;
        next.push(i+u);
      }
    }
    cur=[...next];
  }
  return d[n-1];
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100
374989103,javascript,1 week,1596383542,Time Limit Exceeded,N/A,/submissions/detail/374989103/,Not Pending,Jump Game II,N/A,"/**
 * @param {number[]} nums
 * @return {number}
 */
var jump = function(a) {
  const n=a.length;
  let d=new Array(n);
  d.fill(2147483647);
  d[0]=0;
  for(let i=0;i<n-1;++i) {
    for(let j=1;i+j<=n&&j<=a[i];++j)
      d[i+j]=Math.min(d[i+j],d[i]+1);
  }
  return d[n-1];
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
374959253,javascript,1 week,1596378321,Accepted,80 ms,/submissions/detail/374959253/,Not Pending,Count Good Triplets,36.7 MB,"/**
 * @param {number[]} arr
 * @param {number} a
 * @param {number} b
 * @param {number} c
 * @return {number}
 */
var countGoodTriplets = function(arr, a, b, c) {
  let n=arr.length;  
  let ret=0;
  for(let i=0;i<n;++i) 
    for(let j=i+1;j<n;++j) 
      for(let k=j+1;k<n;++k)
        if(Math.abs(arr[j]-arr[i])<=a)
          if(Math.abs(arr[k]-arr[j])<=b)
            if(Math.abs(arr[k]-arr[i])<=c) ++ret;
  return ret;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374958374,javascript,1 week,1596378160,Wrong Answer,N/A,/submissions/detail/374958374/,Not Pending,Count Good Triplets,N/A,"/**
 * @param {number[]} arr
 * @param {number} a
 * @param {number} b
 * @param {number} c
 * @return {number}
 */
var countGoodTriplets = function(arr, a, b, c) {
  let n=arr.length;  
  let ret=0;
  arr.sort((a,b)=>a-b);
  for(let i=0;i<n;++i) 
    for(let j=i+1;j<n;++j) 
      for(let k=j+1;k<n;++k)
        if(arr[j]-arr[i]<=a)
          if(arr[k]-arr[j]<=b)
            if(arr[k]-arr[i]<=c) ++ret;
  return ret;
};",11001001011011100110110000000001000000000000000000000000000000000000000000000000000000000000
374956303,javascript,1 week,1596377767,Accepted,172 ms,/submissions/detail/374956303/,Not Pending,Integer to Roman,43.9 MB,"/**
 * @param {number} num
 * @return {string}
 */
var intToRoman = function(i) {
  let L=""IVXLCDM"";
  function get1000(n) {
    return ""M"".repeat(n);
  }
  function get(n,i) {
    if(n<=3) return L.charAt(i).repeat(n);
    if(n==4) return L.charAt(i)+L.charAt(i+1);
    if(n<9) return L.charAt(i+1) + L.charAt(i).repeat(n-5);
    return L.charAt(i) + L.charAt(i+2);
  }

  return get1000(Math.floor(i/1000)%10) + 
    get(Math.floor(i/100)%10,4) +
    get(Math.floor(i/10)%10,2) +
    get(i%10,0);
}
374955847,javascript,1 week,1596377683,Accepted,4412 ms,/submissions/detail/374955847/,Not Pending,Roman to Integer,57.6 MB,"/**
 * @param {string} s
 * @return {number}
 */
var romanToInt = function(s) {
  let d={};
  let L=""IVXLCDM"";
  function get1000(n) {
    return ""M"".repeat(n);
  }
  function get(n,i) {
    if(n<=3) return L.charAt(i).repeat(n);
    if(n==4) return L.charAt(i)+L.charAt(i+1);
    if(n<9) return L.charAt(i+1) + L.charAt(i).repeat(n-5);
    return L.charAt(i) + L.charAt(i+2);
  }
  
  for(let i=1;i<4000;++i) {
    const t=
          get1000(Math.floor(i/1000)%10) + 
          get(Math.floor(i/100)%10,4) +
          get(Math.floor(i/10)%10,2) +
          get(i%10,0);
    d[t]=i;
  }
  return d[s];
}
374955255,javascript,1 week,1596377576,Accepted,192 ms,/submissions/detail/374955255/,Not Pending,Design HashSet,44.5 MB,"/**
 * Initialize your data structure here.
 */
var MyHashSet = function() {
  this.arr = new Array(127);
  for(let i=0;i<128;++i) {
    this.arr[i]=[];
  }
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.add = function(key) {
  if(!this.contains(key))
   this.arr[key%127].push(key);   
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.remove = function(key) {
  const hash=key%127;
  const i=this.arr[hash].indexOf(key); 
  if(i!==-1) {
    const n=this.arr[hash].length;
    [this.arr[hash][n-1],this.arr[hash][i]]=[this.arr[hash][i],this.arr[hash][n-1]];
    this.arr[hash].pop();    
  }
};

/**
 * Returns true if this set contains the specified element 
 * @param {number} key
 * @return {boolean}
 */
MyHashSet.prototype.contains = function(key) {
  return -1 !== this.arr[key%127].indexOf(key);  
};

/** 
 * Your MyHashSet object will be instantiated and called as such:
 * var obj = new MyHashSet()
 * obj.add(key)
 * obj.remove(key)
 * var param_3 = obj.contains(key)
 */",1111111111111111111111111111
374952423,javascript,1 week,1596377027,Accepted,168 ms,/submissions/detail/374952423/,Not Pending,Design HashSet,45.1 MB,"/**
 * Initialize your data structure here.
 */
var MyHashSet = function() {
  this.arr = new Array(128);
  for(let i=0;i<128;++i) {
    this.arr[i]=[];
  }
  this.hash=function(n) {
    return n%128;      
  }
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.add = function(key) {
  if(!this.contains(key))
    this.arr[this.hash(key)].push(key);   
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.remove = function(key) {
  const hash=this.hash(key);
  const i=this.arr[hash].indexOf(key);
  if(i!==-1) 
    this.arr[hash].splice(i,1);     
};

/**
 * Returns true if this set contains the specified element 
 * @param {number} key
 * @return {boolean}
 */
MyHashSet.prototype.contains = function(key) {
  return -1 !== this.arr[this.hash(key)].indexOf(key);  
};

/** 
 * Your MyHashSet object will be instantiated and called as such:
 * var obj = new MyHashSet()
 * obj.add(key)
 * obj.remove(key)
 * var param_3 = obj.contains(key)
 */",1111111111111111111111111111
374951217,javascript,1 week,1596376798,Wrong Answer,N/A,/submissions/detail/374951217/,Not Pending,Design HashSet,N/A,"/**
 * Initialize your data structure here.
 */
var MyHashSet = function() {
  this.arr = new Array(128);
  for(let i=0;i<128;++i) {
    this.arr[i]=[];
  }
  this.hash=function(n) {
    return n%128;      
  }
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.add = function(key) {
  this.arr[this.hash(key)].push(key);   
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.remove = function(key) {
  const hash=this.hash(key);
  while(true) {
    const n=this.arr.length;
    const i=this.arr[hash].indexOf(key);
    if(i===-1) break;
    [this.arr[hash][n-1],this.arr[hash][i]]=[this.arr[hash][i],this.arr[hash][n-1]];
    this.arr[hash].pop();    
  }
};

/**
 * Returns true if this set contains the specified element 
 * @param {number} key
 * @return {boolean}
 */
MyHashSet.prototype.contains = function(key) {
  return -1 !== this.arr[this.hash(key)].indexOf(key);  
};

/** 
 * Your MyHashSet object will be instantiated and called as such:
 * var obj = new MyHashSet()
 * obj.add(key)
 * obj.remove(key)
 * var param_3 = obj.contains(key)
 */",1111111111111111111111100000
374947986,javascript,1 week,1596376126,Wrong Answer,N/A,/submissions/detail/374947986/,Not Pending,Design HashSet,N/A,"/**
 * Initialize your data structure here.
 */
var MyHashSet = function() {
  this.arr = new Array(128);
  for(let i=0;i<128;++i) {
    this.arr[i]=[];
  }
  this.hash=function(n) {
    return n%128;      
  }
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.add = function(key) {
  if(!this.contains(key))
    this.arr[this.hash(key)].push(key);   
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.remove = function(key) {
  const hash=this.hash(key);
  const i=this.arr[hash].indexOf(key); 
  if(i!==-1) {
    const n=this.arr.length;
    [this.arr[hash][n-1],this.arr[hash][i]]=[this.arr[hash][i],this.arr[hash][n-1]];
    this.arr[hash].pop();    
  }
};

/**
 * Returns true if this set contains the specified element 
 * @param {number} key
 * @return {boolean}
 */
MyHashSet.prototype.contains = function(key) {
  return -1 !== this.arr[this.hash(key)].indexOf(key);  
};

/** 
 * Your MyHashSet object will be instantiated and called as such:
 * var obj = new MyHashSet()
 * obj.add(key)
 * obj.remove(key)
 * var param_3 = obj.contains(key)
 */",1111111111111111111101100000
374944716,javascript,1 week,1596375455,Wrong Answer,N/A,/submissions/detail/374944716/,Not Pending,Design HashSet,N/A,"/**
 * Initialize your data structure here.
 */
var MyHashSet = function() {
  this.arr = new Array(127);
  for(let i=0;i<128;++i) {
    this.arr[i]=[];
  }
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.add = function(key) {
  if(!this.contains(key))
   this.arr[key%127].push(key);   
};

/** 
 * @param {number} key
 * @return {void}
 */
MyHashSet.prototype.remove = function(key) {
  const hash=key%127;
  const i=this.arr[hash].indexOf(key); 
  if(i!==-1) {
    const n=this.arr.length;
    [this.arr[hash][n-1],this.arr[hash][i]]=[this.arr[hash][i],this.arr[hash][n-1]];
    this.arr[hash].pop();    
  }
};

/**
 * Returns true if this set contains the specified element 
 * @param {number} key
 * @return {boolean}
 */
MyHashSet.prototype.contains = function(key) {
  return -1 !== this.arr[key%127].indexOf(key);  
};

/** 
 * Your MyHashSet object will be instantiated and called as such:
 * var obj = new MyHashSet()
 * obj.add(key)
 * obj.remove(key)
 * var param_3 = obj.contains(key)
 */",1111111111111111111111100000
374744409,javascript,1 week,1596339213,Accepted,124 ms,/submissions/detail/374744409/,Not Pending,Make Two Arrays Equal by Reversing Sub-arrays,37.5 MB,"/**
 * @param {number[]} target
 * @param {number[]} arr
 * @return {boolean}
 */
var canBeEqual = function(A, B) {
  return JSON.stringify(A.sort())===JSON.stringify(B.sort());
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374743341,javascript,1 week,1596339105,Accepted,80 ms,/submissions/detail/374743341/,Not Pending,Make Two Arrays Equal by Reversing Sub-arrays,38.9 MB,"/**
 * @param {number[]} target
 * @param {number[]} arr
 * @return {boolean}
 */
var canBeEqual = function(A, B) {
  A.sort();
  B.sort();
  return JSON.stringify(A)===JSON.stringify(B);
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374739524,javascript,1 week,1596338734,Accepted,76 ms,/submissions/detail/374739524/,Not Pending,Longest Common Prefix,38.2 MB,"/**
 * @param {string[]} strs
 * @return {string}
 */
var longestCommonPrefix = function(S) {
  if(S.length===0) return """";
  let ret="""";
  const m=Math.min(...S.map(x=>x.length));
  for(let j=0;j<m;++j) {
    const c=S[0][j];
    if(S.map(x=>x[j]===c).filter(x=>x).length!==S.length) break;
    ret+=c;
  }
  return ret;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374736774,javascript,1 week,1596338461,Accepted,96 ms,/submissions/detail/374736774/,Not Pending,Count and Say,38.4 MB,"/**
 * @param {number} n
 * @return {string}
 */
var countAndSay = function(n) {
  if(n==1) return ""1"";
  const d={};
  const p=countAndSay(n-1).split``;
  p.push("""");
  let ret="""";
  let cnt=0;
  let pre="""";
  for(let i=0;i<p.length;++i) {
    if(pre!==p[i]) {
      if(cnt>0) {
        ret += cnt+pre;
      }
      pre=p[i];
      cnt=1;
    } else cnt++;
  }
  return ret;
};",111111111111111111
374724818,javascript,1 week,1596337295,Accepted,124 ms,/submissions/detail/374724818/,Not Pending,Validate Binary Search Tree,40.9 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
var isValidBST = function(root) {
  function validation(node, lbound, hbound) {
    if(node===null) return true;
    if(node.val<lbound) return false;
    if(node.val>hbound) return false;
    return validation(node.left,lbound,node.val-1) && validation(node.right,node.val+1,hbound);
  }
  return validation(root, Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);
};",111111111111111111111111111111111111111111111111111111111111111111111111111
374722565,javascript,1 week,1596337101,Wrong Answer,N/A,/submissions/detail/374722565/,Not Pending,Validate Binary Search Tree,N/A,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
var isValidBST = function(root) {
  function validation(node, lbound, hbound) {
    if(node===null) return true;
    if(node.val<lbound) return false;
    if(node.val>hbound) return false;
    return validation(node.left,lbound,node.val-1) && validation(node.right,node.val+1,hbound);
  }
  return validation(root, Number.MIN_VALUE, Number.MAX_VALUE);
};",111011101101101100000000000000000000110110111111001101110101111010101110011
374649570,javascript,1 week,1596324576,Accepted,68 ms,/submissions/detail/374649570/,Not Pending,Implement strStr(),38 MB,"/**
 * @param {string} haystack
 * @param {string} needle
 * @return {number}
 */
var strStr = function(t, s) {
  if(s.length===0) return 0;
  let n=t.length;
  let m=s.length;
  for(let i=0;i+m<=n;++i) {
    let j=0;
    for(;t[i+j]===s[j]&&j<m;++j);
    if(j===m) return i;
  }
  return -1;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111
374648901,javascript,1 week,1596324440,Time Limit Exceeded,N/A,/submissions/detail/374648901/,Not Pending,Implement strStr(),N/A,"/**
 * @param {string} haystack
 * @param {string} needle
 * @return {number}
 */
var strStr = function(t, s) {
  if(s.length===0) return 0;
  let n=t.length;
  let m=s.length;
  for(let i=0;i+m<=n;++i) {
    let j=0;
    for(;t[i+j]===s[j];++j);
    if(j===m) return i;
  }
  return -1;
};",11111000000000000000000000000000000000000000000000000000000000000000000000000
374647621,javascript,1 week,1596324175,Accepted,72 ms,/submissions/detail/374647621/,Not Pending,House Robber,36.6 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var rob = function(A) {
  if(A.length===0) return 0;
  if(A.length===1) return A[0];
  const n=A.length;
  const B=new Array(n);
  const C=new Array(n);
  B[0]=A[0];
  C[0]=0;
  B[1]=A[1];
  C[1]=B[0];
  for(let i=2;i<n;++i){
    B[i]=C[i-1]+A[i];
    C[i]=Math.max(B[i-1],C[i-1]);
  }
  return Math.max(B[n-1],C[n-1]);
};",111111111111111111111111111111111111111111111111111111111111111111111
374641806,javascript,1 week,1596323044,Accepted,260 ms,/submissions/detail/374641806/,Not Pending,Power of Three,46.6 MB,"/**
 * @param {number} n
 * @return {boolean}
 */
var isPowerOfThree = function(n) {
  if(n<=0) return false;
  return Math.pow(3,20) % n === 0;
}
374641699,javascript,1 week,1596323020,Wrong Answer,N/A,/submissions/detail/374641699/,Not Pending,Power of Three,N/A,"/**
 * @param {number} n
 * @return {boolean}
 */
var isPowerOfThree = function(n) {
  if(n===0) return false;
  return Math.pow(3,20) % n === 0;
}
374639524,javascript,1 week,1596322592,Accepted,4496 ms,/submissions/detail/374639524/,Not Pending,Roman to Integer,57.6 MB,"/**
 * @param {string} s
 * @return {number}
 */
var romanToInt = function(s) {
  let d={};
  let L=""IVXLCDM"";
  function get1000(n) {
    return ""M"".repeat(n);
  }
  function get(n,i) {
    if(n<=3) return L.charAt(i).repeat(n);
    if(n==4) return L.charAt(i)+L.charAt(i+1);
    if(n<9) return L.charAt(i+1) + L.charAt(i).repeat(n-5);
    return L.charAt(i) + L.charAt(i+2);
  }
  
  for(let i=1;i<4000;++i) {
    const t=
          get1000(Math.floor(i/1000)%10) + 
          get(Math.floor(i/100)%10,4) +
          get(Math.floor(i/10)%10,2) +
          get(i%10,0);
    d[t]=i;
  }
  return d[s];
}
374632183,javascript,1 week,1596321094,Accepted,296 ms,/submissions/detail/374632183/,Not Pending,The k Strongest Values in an Array,56.5 MB,"/**
 * @param {number[]} arr
 * @param {number} k
 * @return {number[]}
 */
var getStrongest = function(A, K) {
  A.sort((a,b)=>a-b);
  const m=A[Math.floor((A.length-1)/2)];  
  let ret=[];
  for(let _=0,i=0,j=A.length-1;_<K;++_) {
    if(Math.abs(A[i]-m)>Math.abs(A[j]-m)) ret.push(A[i++]);
    else ret.push(A[j--]);
  }
  return ret;
};",11111111111111111111111111111111111111111111111111111111111111111111111
374629115,javascript,1 week,1596320516,Accepted,92 ms,/submissions/detail/374629115/,Not Pending,Maximize Distance to Closest Person,40.2 MB,"/**
 * @param {number[]} seats
 * @return {number}
 */
var maxDistToClosest = function(S) {
  let n=S.length;
  S=S.map((x,i)=>x?i+1:0).filter(x=>x>0);
  let ret=S[0]-1;
  ret=Math.max(ret, n-S[S.length-1]);
  for(let i=1;i<S.length;++i) {
    ret=Math.max(ret, Math.floor((S[i]-S[i-1])/2));
  }
  return ret;
};


",1111111111111111111111111111111111111111111111111111111111111111111111111111111
374623406,javascript,1 week,1596319409,Accepted,80 ms,/submissions/detail/374623406/,Not Pending,Final Prices With a Special Discount in a Shop,37.5 MB,"/**
 * @param {number[]} prices
 * @return {number[]}
 */
var finalPrices = function(P) {
  let n=P.length;
  let ret=[...P];
  for(let i=0;i<n;++i) {
    for(let j=i+1;j<n;++j) {
      if(P[i]>=P[j]) {
        ret[i]=P[i]-P[j];
        break;
      }
    }
  }
  return ret;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374623131,javascript,1 week,1596319355,Wrong Answer,N/A,/submissions/detail/374623131/,Not Pending,Final Prices With a Special Discount in a Shop,N/A,"/**
 * @param {number[]} prices
 * @return {number[]}
 */
var finalPrices = function(P) {
  let n=P.length;
  let ret=[...P];
  for(let i=0;i<n;++i) {
    ret[i]=P[i];
    for(let j=i+1;j<n;++j) {
      if(P[i]>P[j]) {
        ret[i]=P[i]-P[j];
        break
      }
    }
  }
  return ret;
};",1100000010100000000101011111111111111011111111111111011101011111101111111100110110100001011010000000000
374577364,typescript,1 week,1596311295,Accepted,108 ms,/submissions/detail/374577364/,Not Pending,DI String Match,39.3 MB,"function diStringMatch(S: string): number[] {
  const s : Array<string> = S.split("""");
  const A : Array<number> = new Array<number>(s.length+1);
  for(let i=0;i<s.length+1;++i) A[i]=i;
  
  while(true) {
    let ok : boolean = true;
    for(let i=0;i<s.length;++i) {
      if(s[i]=='I' && A[i]>A[i+1]) {[A[i],A[i+1]]=[A[i+1],A[i]];ok=false;}
      if(s[i]=='D' && A[i]<A[i+1]) {[A[i],A[i+1]]=[A[i+1],A[i]];ok=false;}
    }    
    if(ok) break;
  }
  return A;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374573639,typescript,1 week,1596310696,Accepted,160 ms,/submissions/detail/374573639/,Not Pending,Count Primes,68 MB,"function countPrimes(n: number): number {
  let isPrime : Array<boolean> = new Array<boolean>(n);
  isPrime.fill(true, 0, n);
  let ret : number = 0;
  
  for(let i=2;i<n;i++) {
    if(!isPrime[i]) continue;
    ret++;
    for(let j=i*i;j<=n;j+=i) isPrime[j]=false;
  }
  return ret;
};",11111111111111111111
374573371,typescript,1 week,1596310651,Wrong Answer,N/A,/submissions/detail/374573371/,Not Pending,Count Primes,N/A,"function countPrimes(n: number): number {
  let isPrime : Array<boolean> = new Array<boolean>(n+1);
  isPrime.fill(true, 0, n+1);
  let ret : number = 0;
  
  for(let i=2;i<=n;i++) {
    if(!isPrime[i]) continue;
    ret++;
    for(let j=i*i;j<=n;j+=i) isPrime[j]=false;
  }
  return ret;
};",11100101011010111001
374573274,typescript,1 week,1596310634,Wrong Answer,N/A,/submissions/detail/374573274/,Not Pending,Count Primes,N/A,"function countPrimes(n: number): number {
  let isPrime : Array<boolean> = new Array<boolean>(n+1);
  isPrime.fill(true, 0, n+1);
  let ret : number = 0;
  
  for(let i=2;i<=n;i++) {
    if(!isPrime[i]) continue;
    ret++;
    for(let j=i*i;j<=n;j+=i) isPrime[j]=false;
  }
  return ret;
};",11100101011010111001
374570896,typescript,1 week,1596310248,Accepted,76 ms,/submissions/detail/374570896/,Not Pending,Best Time to Buy and Sell Stock,39.1 MB,"function maxProfit(prices: number[]): number {
  let min : number = 2147483647;
  let best : number = 0;
  for(let x of prices) {
    best=Math.max(best, x-min);
    min=Math.min(x,min);
  }
  return best;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374569467,typescript,1 week,1596310026,Accepted,72 ms,/submissions/detail/374569467/,Not Pending,Climbing Stairs,36.6 MB,"function climbStairs(n: number): number {
  if(n<=1) return 1;
  let f : Array<number> = new Array<number>(50);
  f[0]=f[1]=1;
  for(let i=2;i<=n;++i) {
    f[i]=f[i-1]+f[i-2];
  }
  return f[n];
};",111111111111111111111111111111111111111111111
374566516,javascript,"1 week, 1 day",1596309545,Accepted,80 ms,/submissions/detail/374566516/,Not Pending,Maximum Subarray,38.7 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var maxSubArray = function(nums) {
  if(nums.length===0) return 0;
  if(nums.filter(x=>x>0).length===0) return Math.max(...nums);
  let ret=0;
  let c=0;
  for(x of nums) {
    c+=x;
    if(c<0) c=0;
    ret=Math.max(ret, c);
  }
      
  return ret;
  
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374564651,javascript,"1 week, 1 day",1596309245,Accepted,76 ms,/submissions/detail/374564651/,Not Pending,First Bad Version,36.7 MB,"/**
 * Definition for isBadVersion()
 * 
 * @param {integer} version number
 * @return {boolean} whether the version is bad
 * isBadVersion = function(version) {
 *     ...
 * };
 */

/**
 * @param {function} isBadVersion()
 * @return {function}
 */
var solution = function(isBadVersion) {
    /**
     * @param {integer} n Total versions
     * @return {integer} The first bad version
     */
    return function(n) {
      let l=1,h=n,m=Math.floor((l+h)/2);
      while(h-l>1) {
        m=Math.floor((l+h)/2);
        if(isBadVersion(m)) {
          h=m;
        } else {
          l=m+1;
        }
      }
      return isBadVersion(l)?l:h;
    };
};",1111111111111111111111
374561011,javascript,"1 week, 1 day",1596308679,Accepted,84 ms,/submissions/detail/374561011/,Not Pending,Maximum Depth of Binary Tree,38.8 MB,"/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {number}
 */
var maxDepth = function(c) {
  if(c===null||c===undefined) return 0;
  return Math.max(maxDepth(c.left), maxDepth(c.right))+1;
};",111111111111111111111111111111111111111
374504039,javascript,"1 week, 1 day",1596299585,Accepted,76 ms,/submissions/detail/374504039/,Not Pending,Fizz Buzz,38.9 MB,"/**
 * @param {number} n
 * @return {string[]}
 */
var fizzBuzz = function(n) {
  return [...Array(n+1).keys()].slice(1).map(x=>(x%3==0?""Fizz"":"""")+(x%5==0?""Buzz"":"""")+(~~x%3&&~~x%5?""""+x:""""))
};",11111111
374411975,javascript,"1 week, 1 day",1596281885,Accepted,92 ms,/submissions/detail/374411975/,Not Pending,Fizz Buzz,38.6 MB,"/**
 * @param {number} n
 * @return {string[]}
 */
var fizzBuzz = function(n) {
  return [...Array(n+1).keys()].slice(1).map(x=>(x%3==0?""Fizz"":"""")+(x%5==0?""Buzz"":"""")+(~~x%3&&~~x%5?""""+x:""""));
};",11111111
374411559,javascript,"1 week, 1 day",1596281797,Accepted,128 ms,/submissions/detail/374411559/,Not Pending,Fizz Buzz,38.7 MB,"/**
 * @param {number} n
 * @return {string[]}
 */
var fizzBuzz = function(n) {
  return [...Array(n+1).keys()].slice(1).map(x=>(x%3===0?""Fizz"":"""")+(x%5===0?""Buzz"":"""")+(x%3!==0&&x%5!==0?""""+x:""""));
};",11111111
374409640,javascript,"1 week, 1 day",1596281377,Accepted,140 ms,/submissions/detail/374409640/,Not Pending,Two Sum,38.3 MB,"/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(A, target) {
  let d={},n=A.length;
  for(let i=0;i<n;++i) {
    if(A[i]*2===target && d[A[i]]!==undefined) return [i, d[A[i]]];
    d[A[i]]=i;
  }
  for(let i=0;i<n;++i) {
    const p=target-A[i];
    if(d[p]!==undefined&&d[p]!==i) return [i, d[p]];
  }
};",11111111111111111111111111111
374409051,javascript,"1 week, 1 day",1596281235,Wrong Answer,N/A,/submissions/detail/374409051/,Not Pending,Two Sum,N/A,"/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(A, target) {
  let d={},n=A.length;
  for(let i=0;i<n;++i) {
    if(A[i]*2===target && d[A[i]]!==undefined) return [d[A[i]], i];
    d[A[i]]=i;
  }
  for(let i=0;i<n;++i) {
    const p=target-A[i];
    if(d[p]!==undefined) return [d[p], i];
  }
};",10111111111111010111111111111
374407250,javascript,"1 week, 1 day",1596280836,Time Limit Exceeded,N/A,/submissions/detail/374407250/,Not Pending,Two Sum,N/A,"/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(A, target) {
  let j=A.length-1;
  let i=0;
  while(i<j) {
    if(A[i]+A[j]===target) return [i,j];
    else if(A[i]+A[j]>target) j--;
    else j=A.length-1;
  }
};",10000000000000000000000000000
374407054,javascript,"1 week, 1 day",1596280796,Wrong Answer,N/A,/submissions/detail/374407054/,Not Pending,Two Sum,N/A,"/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number[]}
 */
var twoSum = function(A, target) {
  let j=A.length-1;
  let i=0;
  while(i<j) {
    if(A[i]+A[j]===target) return [i,j];
    else if(A[i]+A[j]>target) j--;
    else i++;
  }
};",10111110110010111001000000001
374406072,javascript,"1 week, 1 day",1596280585,Accepted,92 ms,/submissions/detail/374406072/,Not Pending,Intersection of Two Arrays II,37.3 MB,"/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */
var intersect = function(A, B) {
  A.sort((a,b)=>a-b);
  B.sort((a,b)=>a-b);
  let i=0,j=0;
  let C=[];
  while(i<A.length&&j<B.length) 
    if(A[i]===B[j]) {
      C.push(A[i]);
      i++; j++;
    } else if(A[i]<B[j]) i++;
    else j++;
  return C;
};",1111111111111111111111111111111111111111111111111111111111111
374405200,javascript,"1 week, 1 day",1596280382,Wrong Answer,N/A,/submissions/detail/374405200/,Not Pending,Intersection of Two Arrays II,N/A,"/**
 * @param {number[]} nums1
 * @param {number[]} nums2
 * @return {number[]}
 */
var intersect = function(A, B) {
  A.sort();
  B.sort();
  let i=0,j=0;
  let C=[];
  while(i<A.length&&j<B.length) 
    if(A[i]===B[j]) {
      C.push(A[i]);
      i++; j++;
    } else if(A[i]<B[j]) i++;
    else j++;
  return C;
};",1111111111111111111111111111111100000011011101011100000000000
374404311,javascript,"1 week, 1 day",1596280184,Accepted,96 ms,/submissions/detail/374404311/,Not Pending,Single Number,37.3 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var singleNumber = function(A) {
  return A.reduce((a,c)=>a^c);
};",1111111111111111
374404055,javascript,"1 week, 1 day",1596280127,Accepted,84 ms,/submissions/detail/374404055/,Not Pending,Contains Duplicate,39.6 MB,"/**
 * @param {number[]} nums
 * @return {boolean}
 */
var containsDuplicate = function(A) {
  A.sort();
  for(let i=1;i<A.length;++i) 
    if(A[i]===A[i-1]) return true;
  return false;
};",111111111111111111
374403759,javascript,"1 week, 1 day",1596280063,Accepted,260 ms,/submissions/detail/374403759/,Not Pending,Rotate Array,37.6 MB,"/**
 * @param {number[]} nums
 * @param {number} k
 * @return {void} Do not return anything, modify nums in-place instead.
 */
var rotate = function(A, K) {
  if(A.length<=1) {
    return;
  }
  for(let j=0;j<K;++j) {
    const t=A[A.length-1];
    for(let i=A.length-1;i>=1;--i) {
      A[i]=A[i-1];
    }
    A[0]=t;
  }
};",11111111111111111111111111111111111
374402719,javascript,"1 week, 1 day",1596279812,Accepted,104 ms,/submissions/detail/374402719/,Not Pending,Best Time to Buy and Sell Stock II,37.5 MB,"/**
 * @param {number[]} prices
 * @return {number}
 */
var maxProfit = function(P) {
  P.push(-1_000_000);
  let ret=0;
  let i=0;
  for(let j=i+1;j<P.length;++j) {
    if(P[j-1]>P[j]) {
      ret+=Math.max(0, P[j-1]-P[i]);
      i=j;
    }
  }
  return ret;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374400835,javascript,"1 week, 1 day",1596279365,Accepted,92 ms,/submissions/detail/374400835/,Not Pending,String to Integer (atoi),38 MB,"/**
 * @param {string} str
 * @return {number}
 */
var myAtoi = function(s) {
  s=s.split("" "");
  for(let x of s) {
    if(x.length===0) continue;
    let y=parseInt(x);
    if(isNaN(y)) return 0;
    return Math.min(Math.max(-2147483648, y), 2147483647);
  }
  return 0;
}
374395789,javascript,"1 week, 1 day",1596278247,Accepted,88 ms,/submissions/detail/374395789/,Not Pending,Valid Palindrome,41.1 MB,"/**
 * @param {string} s
 * @return {boolean}
 */
var isPalindrome = function(s) {
  s=s.toLowerCase().match(/[a-z|0-9]/gi);
  if(s===null) return true;
  for(let i=0,j=s.length-1;i<j;i++,j--) 
      if(s[i]!==s[j]) return false;
  return true;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374395504,javascript,"1 week, 1 day",1596278180,Wrong Answer,N/A,/submissions/detail/374395504/,Not Pending,Valid Palindrome,N/A,"/**
 * @param {string} s
 * @return {boolean}
 */
var isPalindrome = function(s) {
  s=s.toLowerCase().match(/[a-z]/gi);
  if(s===null) return true;
  for(let i=0,j=s.length-1;i<j;i++,j--) 
      if(s[i]!==s[j]) return false;
  return true;
};",1111111111110111111101101111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111001111111011111011111011101011111101111111111111110111011011110101111111110111011010111111111111100111
374395263,javascript,"1 week, 1 day",1596278131,Runtime Error,N/A,/submissions/detail/374395263/,Not Pending,Valid Palindrome,N/A,"/**
 * @param {string} s
 * @return {boolean}
 */
var isPalindrome = function(s) {
  if(s.length==0) return true;
  s=s.toLowerCase().match(/[a-z]/gi);
  for(let i=0,j=s.length-1;i<j;i++,j--) 
      if(s[i]!==s[j]) return false;
  return true;
};",1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
374395073,javascript,"1 week, 1 day",1596278095,Runtime Error,N/A,/submissions/detail/374395073/,Not Pending,Valid Palindrome,N/A,"/**
 * @param {string} s
 * @return {boolean}
 */
var isPalindrome = function(s) {
  s=s.toLowerCase().match(/[a-z]/gi);
  for(let i=0,j=s.length-1;i<j;i++,j--) 
      if(s[i]!==s[j]) return false;
  return true;
};",1100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
374393320,javascript,"1 week, 1 day",1596277704,Accepted,144 ms,/submissions/detail/374393320/,Not Pending,Valid Anagram,43 MB,"/**
 * @param {string} s
 * @param {string} t
 * @return {boolean}
 */
var isAnagram = function(s, t) {
  s=s.split``;
  t=t.split``;
  s.sort();
  t.sort();
  return s.join``===t.join``;
};",1111111111111111111111111111111111
374393088,javascript,"1 week, 1 day",1596277651,Accepted,152 ms,/submissions/detail/374393088/,Not Pending,First Unique Character in a String,41.7 MB,"/**
 * @param {string} s
 * @return {number}
 */
var firstUniqChar = function(s) {
  s=s.split``;
  let d={};
  let c={};
  for(let i=s.length-1;i>=0;--i) {
    d[s[i]]=(d[s[i]]+1||1);
    c[s[i]]=i;
  }
  let ret=-1;
  for(let k in d) {
    if(d[k]===1) {
      if(ret===-1||ret>c[k]) ret=c[k];
    }
  }
  return ret;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374391684,javascript,"1 week, 1 day",1596277341,Time Limit Exceeded,N/A,/submissions/detail/374391684/,Not Pending,First Unique Character in a String,N/A,"/**
 * @param {string} s
 * @return {number}
 */
var firstUniqChar = function(s) {
  s=s.split``;
  for(let i=0;i<s.length;++i) {
    if(s.filter(x=>x===s[i]).length===1) return i;
  }
  return -1;
};",11111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000
374391043,javascript,"1 week, 1 day",1596277199,Accepted,104 ms,/submissions/detail/374391043/,Not Pending,Reverse Integer,38.7 MB,"/**
 * @param {number} x
 * @return {number}
 */
var reverse = function(x) {
  const s=x>0?"""":""-"";
  x=Math.abs(x);
  x=parseInt(s+x.toString().split``.reverse().join``);
  return (x<-2147483647||x>2147483646) ? 0: x;
}
374390443,javascript,"1 week, 1 day",1596277080,Wrong Answer,N/A,/submissions/detail/374390443/,Not Pending,Reverse Integer,N/A,"/**
 * @param {number} x
 * @return {number}
 */
var reverse = function(x) {
  const s=x>0?"""":""-"";
  x=Math.abs(x);
  return s+x.toString().split``.reverse().join``;
}
374378553,javascript,"1 week, 1 day",1596274490,Accepted,256 ms,/submissions/detail/374378553/,Not Pending,Shuffle an Array,52.9 MB,"/**
 * @param {number[]} nums
 */
var Solution = function(nums) {
  this.org = [...nums];
  this.A = [...nums];
  this.n = nums.length;
  this.rng = function() {
    return Math.floor(Math.random()*this.n);
  }
};

/**
 * Resets the array to its original configuration and return it.
 * @return {number[]}
 */
Solution.prototype.reset = function() {
  this.A = [...this.org];
  return this.A;
};

/**
 * Returns a random shuffling of the array.
 * @return {number[]}
 */
Solution.prototype.shuffle = function() {
  for(let i=0;i<this.n;++i) {
    const j=this.rng();
    [this.A[i],this.A[j]]=[this.A[j],this.A[i]];
  }
  return this.A;
};

/** 
 * Your Solution object will be instantiated and called as such:
 * var obj = new Solution(nums)
 * var param_1 = obj.reset()
 * var param_2 = obj.shuffle()
 */",1111111111
374376969,javascript,"1 week, 1 day",1596274154,Accepted,84 ms,/submissions/detail/374376969/,Not Pending,Missing Number,37.9 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var missingNumber = function(A) {
  return A.length*(A.length+1)/2-A.reduce((a,x)=>a+x);
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374376521,javascript,"1 week, 1 day",1596274054,Accepted,72 ms,/submissions/detail/374376521/,Not Pending,Valid Parentheses,37.3 MB,"/**
 * @param {string} s
 * @return {boolean}
 */
var isValid = function(s) {
  const stk=[];
  const C={
    ')': '(',
    ']': '[',
    '}': '{'
  }
  for(let x of s) {
    if(C[x]!==undefined) {
      if(stk.length===0) return false;
      if(stk[stk.length-1]!==C[x]) return false;
      stk.pop();
    } else {
      stk.push(x);
    }
  }
  return stk.length===0;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111
374374087,javascript,"1 week, 1 day",1596273524,Accepted,68 ms,/submissions/detail/374374087/,Not Pending,Pascal's Triangle,36.1 MB,"/**
 * @param {number} numRows
 * @return {number[][]}
 */
var generate = function(n) {
  if(!n) return [];
  const D=[[1]];
  for(let i=1;i<n;++i) {
    const c=[1];
    for(let j=1;j<i;++j) c.push(D[i-1][j-1]+D[i-1][j]);
    c.push(1);
    D.push(c);
  }
  return D;
};",111111111111111
374373976,javascript,"1 week, 1 day",1596273499,Wrong Answer,N/A,/submissions/detail/374373976/,Not Pending,Pascal's Triangle,N/A,"/**
 * @param {number} numRows
 * @return {number[][]}
 */
var generate = function(n) {
  const D=[[1]];
  for(let i=1;i<n;++i) {
    const c=[1];
    for(let j=1;j<i;++j) c.push(D[i-1][j-1]+D[i-1][j]);
    c.push(1);
    D.push(c);
  }
  return D;
};",101111111111111
374372562,javascript,"1 week, 1 day",1596273189,Accepted,104 ms,/submissions/detail/374372562/,Not Pending,Number of 1 Bits,37.3 MB,"/**
 * @param {number} n - a positive integer
 * @return {number}
 */
var hammingWeight = function(n) {
  let ret = 0;
  for(let i=0;i<32;++i) ret += (n>>i)&1;
  return ret;
}
374342837,javascript,"1 week, 1 day",1596267500,Accepted,92 ms,/submissions/detail/374342837/,Not Pending,Detect Capital,37.5 MB,"/**
 * @param {string} word
 * @return {boolean}
 */
var detectCapitalUse = function(W) {
  if(W===W.toUpperCase()) return true;
  if(W===W.toLowerCase()) return true;
  if(W===W.charAt(0)+W.slice(1).toLowerCase()) return true;
  return false;
}
374229620,javascript,"1 week, 1 day",1596241520,Accepted,176 ms,/submissions/detail/374229620/,Not Pending,Find All Numbers Disappeared in an Array,47.8 MB,"/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDisappearedNumbers = function(A) {
  for(let x of A) {
    let i=Math.abs(x)-1;
    A[i]=-Math.abs(A[i]);
  }
  return A.map((v,i)=>(v>0)*(i+1)).filter(x=>x);
};",1111111111111111111111111111111111
374229405,javascript,"1 week, 1 day",1596241463,Accepted,184 ms,/submissions/detail/374229405/,Not Pending,Find All Numbers Disappeared in an Array,47.4 MB,"/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDisappearedNumbers = function(A) {
  let n=A.length;
  for(let x of A) {
    let i=Math.abs(x)-1;
    A[i]=-Math.abs(A[i]);
  }
  return A.map((v,i)=>(v>0)*(i+1)).filter(x=>x>0);
};",1111111111111111111111111111111111
374226964,javascript,"1 week, 1 day",1596240800,Accepted,144 ms,/submissions/detail/374226964/,Not Pending,Find All Numbers Disappeared in an Array,46 MB,"/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDisappearedNumbers = function(A) {
  let n=A.length;
  while(1){
    for(let i=0;i<n;++i) {
      const p = A[i];
      if(A[i]===0) continue;
      if(A[i]===i+1) continue;
      if(A[p-1]===p) A[i] = 0;
      else [A[p-1],A[i]]=[A[i],A[p-1]];
    }
    let ok=true;
    for(let i=0;i<n;++i) if(A[i]!==0&&A[i]!=i+1) {ok=false;break;} 
    if(ok)break;
  }
  
  let ret=[];
  for(let i=0;i<n;++i) if(A[i]===0) ret.push(i+1);
  return ret;
};",1111111111111111111111111111111111
374224408,javascript,"1 week, 1 day",1596240094,Wrong Answer,N/A,/submissions/detail/374224408/,Not Pending,Find All Numbers Disappeared in an Array,N/A,"/**
 * @param {number[]} nums
 * @return {number[]}
 */
var findDisappearedNumbers = function(A) {
  let n=A.length;
  for(let i=0;i<n;++i) {
    const p = A[i]>0?A[i]:-A[i];
    if(A[i]<0) {
      A[i]=i+1;
    } else if(A[i]>0) {
      A[i]=0;
    } else if(A[i]===0) continue;
    
    if(A[p-1]===0) A[p-1]=p;
    else A[p-1]*=-1;
  }
  let ret=[];
  for(let i=0;i<n;++i) if(A[i]===0) ret.push(i+1);
  return ret;
};",1111111110100000100000000000000000
374101108,javascript,"1 week, 2 days",1596214040,Accepted,1072 ms,/submissions/detail/374101108/,Not Pending,Third Maximum Number,37.8 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var thirdMax = function(A) {
  B = A.filter(x=>x!=Math.max(...A));
  B = B.filter(x=>x!=Math.max(...B));
  if(B.length==0) return Math.max(...A);
  else return Math.max(...B);
};",11111111111111111111111111
374092105,javascript,"1 week, 2 days",1596212251,Accepted,72 ms,/submissions/detail/374092105/,Not Pending,Height Checker,36.7 MB,"/**
 * @param {number[]} heights
 * @return {number}
 */
var heightChecker = function(H) {
  let A=[...H].sort((a,b)=>a-b), ret=0;
  for(let i=0;i<A.length;++i) ret += (A[i]!==H[i]);
  return ret;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111
374091185,javascript,"1 week, 2 days",1596212071,Wrong Answer,N/A,/submissions/detail/374091185/,Not Pending,Height Checker,N/A,"/**
 * @param {number[]} heights
 * @return {number}
 */
var heightChecker = function(H) {
  let A=[...H].sort(), ret=0;
  for(let i=0;i<A.length;++i) ret += (A[i]!==H[i]);
  return ret;
};",111111111111111110111110110000001100000000000010000000011110100000000101000101100
374089788,javascript,"1 week, 2 days",1596211795,Accepted,148 ms,/submissions/detail/374089788/,Not Pending,Squares of a Sorted Array,43.5 MB,"/**
 * @param {number[]} A
 * @return {number[]}
 */
var sortedSquares = function(A) {
  const N = A.length;
  let ret=new Array(N);
  const B = A.map(x=>x*x);
  let i=B.indexOf(Math.min(...B));
  let j=i+1;
  let k=0;
  while(i>=0&&j<N) {
    if(B[i]<B[j]) ret[k++]=B[i--];
    else ret[k++]=B[j++];
  }
  while(i>=0) ret[k++]=B[i--];
  while(j<N) ret[k++]=B[j++];
  return ret;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374088693,javascript,"1 week, 2 days",1596211586,Wrong Answer,N/A,/submissions/detail/374088693/,Not Pending,Squares of a Sorted Array,N/A,"/**
 * @param {number[]} A
 * @return {number[]}
 */
var sortedSquares = function(A) {
  const N = A.length;
  let ret=new Array(N);
  let i=0,k=0;
  for(;i<N-1&&A[i]<0;++i);
  const B = A.map(x=>x*x);
  let j=i+1;
  while(i>=0&&j<N) {
    if(B[i]<B[j]) ret[k++]=B[i--];
    else ret[k++]=B[j++];
  }
  while(i>=0) ret[k++]=B[i--];
  while(j<N) ret[k++]=B[j++];
  return ret;
};",111111111111111111111111010111111111111111101110011001001101011101111111110100101111011110101101111111101111111001011011111011101001
374088137,javascript,"1 week, 2 days",1596211477,Wrong Answer,N/A,/submissions/detail/374088137/,Not Pending,Squares of a Sorted Array,N/A,"/**
 * @param {number[]} A
 * @return {number[]}
 */
var sortedSquares = function(A) {
  const N = A.length;
  let ret=new Array(N);
  let i=0,k=0;
  for(;i<N&&A[i]<0;++i);
  const B = A.map(x=>x*x);
  let j=i+1;
  while(i>=0&&j<N) {
    if(B[i]<B[j]) ret[k++]=B[i--];
    else ret[k++]=B[j++];
  }
  while(i>=0) ret[k++]=B[i--];
  while(j<N) ret[k++]=B[j++];
  return ret;
};",111110111011111111111111010111111111111111101110011001001101011101111111110100101111011110101101111111101111111001011011111011101001
374084690,javascript,"1 week, 2 days",1596210824,Accepted,140 ms,/submissions/detail/374084690/,Not Pending,Sort Array By Parity,39.1 MB,"/**
 * @param {number[]} A
 * @return {number[]}
 */
var sortArrayByParity = function(A) {
  const even = A.filter(a=>a%2===0).length;
  for(let i=0;i<even;++i) {
    for(let j=even;j<A.length;++j) if(A[i]%2===1&&A[j]%2===0) {
      [A[i],A[j]]=[A[j],A[i]];
    }
  }
  return A;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374081401,javascript,"1 week, 2 days",1596210208,Accepted,100 ms,/submissions/detail/374081401/,Not Pending,Move Zeroes,37.9 MB,"/**
 * @param {number[]} nums
 * @return {void} Do not return anything, modify nums in-place instead.
 */
var moveZeroes = function(A) {
  for(let i=A.length-1,k=A.length-1;i>=0;--i) {
    if(A[i]!==0) continue;
    for(let j=i;j<k;++j) A[j]=A[j+1];
    A[k--]=0;
  }  
};",111111111111111111111
374079708,javascript,"1 week, 2 days",1596209893,Accepted,96 ms,/submissions/detail/374079708/,Not Pending,Remove Duplicates from Sorted Array,38.9 MB,"/**
 * @param {number[]} nums
 * @return {number}
 */
var removeDuplicates = function(A) {
  let p=0;
  for(let i=1;i<A.length;++i) {
    if(A[p]!=A[i]) {
      A[++p] = A[i];
    }
  }
  return p+1;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374078585,javascript,"1 week, 2 days",1596209681,Accepted,104 ms,/submissions/detail/374078585/,Not Pending,Replace Elements with Greatest Element on Right Side,39.6 MB,"/**
 * @param {number[]} arr
 * @return {number[]}
 */
var replaceElements = function(arr) {
  let ret = [];
  ret[arr.length-1] = -1
  
  for(let i=arr.length-1;i>=1;--i) {
    ret[i-1] = Math.max(ret[i], arr[i]);
  }
  return ret;
};",111111111111111
374078460,javascript,"1 week, 2 days",1596209658,Accepted,124 ms,/submissions/detail/374078460/,Not Pending,Valid Mountain Array,39.7 MB,"/**
 * @param {number[]} A
 * @return {boolean}
 */
var validMountainArray = function(A) {
  const maxi = Math.max(...A);
  const i = A.indexOf(maxi);
  if(i===0||i==A.length-1) return false;
  for(let j=1;j<i;++j) if(A[j-1]>=A[j]) return false;
  for(let j=i+1;j<A.length;++j) if(A[j-1]<=A[j]) return false;
  return true;
};",111111111111111111111111111111111111111111111111111
374078252,javascript,"1 week, 2 days",1596209620,Wrong Answer,N/A,/submissions/detail/374078252/,Not Pending,Valid Mountain Array,N/A,"/**
 * @param {number[]} A
 * @return {boolean}
 */
var validMountainArray = function(A) {
  const maxi = Math.max(...A);
  const i = A.indexOf(maxi);
  if(i===0||i==A.length-1) return false;
  for(let j=1;j<i;++j) if(A[j-1]>A[j]) return false;
  for(let j=i+1;j<A.length;++j) if(A[j-1]<A[j]) return false;
  return true;
};",101111111111111111111111011111111111111111111111111
374066374,javascript,"1 week, 2 days",1596207360,Accepted,100 ms,/submissions/detail/374066374/,Not Pending,Check If N and Its Double Exist,36.9 MB,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var checkIfExist = function(A) {
  for(let x of A) {
    if(A.filter(a=>a*2===x).length>0+(x===0)) return true;
  }  
  return false;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374066063,javascript,"1 week, 2 days",1596207298,Wrong Answer,N/A,/submissions/detail/374066063/,Not Pending,Check If N and Its Double Exist,N/A,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var checkIfExist = function(A) {
  for(let x of A) {
    if(x&&A.filter(a=>a*2===x).length>0) return true;
  }  
  return false;
};",11111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374065395,javascript,"1 week, 2 days",1596207176,Wrong Answer,N/A,/submissions/detail/374065395/,Not Pending,Check If N and Its Double Exist,N/A,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var checkIfExist = function(A) {
  for(let x of A) {
    if(A.filter(a=>a*2===x).length>0) return true;
  }  
  return false;
};",11111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111
374044298,javascript,"1 week, 2 days",1596202793,Accepted,88 ms,/submissions/detail/374044298/,Not Pending,N-Repeated Element in Size 2N Array,39.6 MB,"/**
 * @param {number[]} A
 * @return {number}
 */

/*
  3n-3 >= 2n
  n >= 1
*/
var repeatedNTimes = function(A) {
  for(let i=0;i<A.length;++i) {
    for(let j=i+1;j<i+4;++j) {
      if(A[i]==A[j]) return A[i];
    }
  }
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374044084,javascript,"1 week, 2 days",1596202742,Accepted,80 ms,/submissions/detail/374044084/,Not Pending,N-Repeated Element in Size 2N Array,39.8 MB,"/**
 * @param {number[]} A
 * @return {number}
 */

/*
  3n-3 >= 2n
  n >= 1
*/
var repeatedNTimes = function(A) {
  const N = A.length;
  const W = 4;
  for(let i=0;i<N;++i) {
    for(let j=i+1;j<i+W;++j) {
      console.log(i+ "" "" + j);
      if(A[i]==A[j]) return A[i];
    }
  }
  return A[0];
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
374043101,javascript,"1 week, 2 days",1596202494,Accepted,76 ms,/submissions/detail/374043101/,Not Pending,N-Repeated Element in Size 2N Array,40.2 MB,"/**
 * @param {number[]} A
 * @return {number}
 */

/*
  3n-3 >= 2n
  n >= 1
*/
var repeatedNTimes = function(A) {
  const N = A.length;
  const W = 4;
  for(let i=0;i+W<=N;++i) {
    for(let j=i;j<i+W;++j) {
      for(let k=j+1;k<=i+W;++k) {
        if(A[j]==A[k]) return A[j];
      }
    }
  }
  return A[0];
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
373960753,javascript,"1 week, 2 days",1596181829,Accepted,76 ms,/submissions/detail/373960753/,Not Pending,Climbing Stairs,36.2 MB,"/**
 * @param {number} n
 * @return {number}
 */
var climbStairs = function(n) {
    var f = new Array(50);
    f[0]=1;
    f[1]=1;
    f[2]=2;
    for(var i=3;i<=n;++i)
      f[i]=f[i-1]+f[i-2];
    return f[n];
};",111111111111111111111111111111111111111111111
373895556,javascript,"1 week, 2 days",1596170309,Accepted,124 ms,/submissions/detail/373895556/,Not Pending,Find N Unique Integers Sum up to Zero,36.7 MB,"/**
 * @param {number} n
 * @return {number[]}
 */

/*
  1 : 0
  2 : -1, 1
  3 : -1, 0, 1
  4 : -2, -1, 0, 3
  5 : -3, -2, -1, 0, 6
  6 : -4, -3, -2, -1, 0, 12
*/

var sumZero = function(n) {
  if(n==0) return [0];
  if(n==2) return [-1,1];
  const ret = new Array();
  let sum = 0;
  for(let i=0;i<n-1;++i) {
    ret.push(i);
    sum += i;
  }
  ret.push(-sum);
  return ret;
};",111111111111111111111111111111111111111111
373860537,javascript,"1 week, 2 days",1596163992,Accepted,116 ms,/submissions/detail/373860537/,Not Pending,Replace Elements with Greatest Element on Right Side,39 MB,"/**
 * @param {number[]} arr
 * @return {number[]}
 */
var replaceElements = function(arr) {
  let ret = [];
  ret[arr.length-1] = -1
  
  for(let i=arr.length-1;i>=1;--i) {
    ret[i-1] = Math.max(ret[i], arr[i]);
  }
  return ret;
};",111111111111111
373856634,javascript,"1 week, 2 days",1596163243,Accepted,60 ms,/submissions/detail/373856634/,Not Pending,Unique Number of Occurrences,36.9 MB,"/**
 * @param {number[]} arr
 * @return {boolean}
 */
var uniqueOccurrences = function(arr) {
  let cnt = {};
  arr.forEach(x=>cnt[x]=1+(cnt[x] || 0));
  let cnt2 = {};
  Object.keys(cnt).forEach(k =>{
    let v = cnt[k];
    cnt2[v]=1+(cnt2[v]||0);
  }) 
  return Object.keys(cnt2).length === Object.keys(cnt).length;
};",111111111111111111111111111111111111111111111111111111111111111
373852404,javascript,"1 week, 2 days",1596162392,Accepted,76 ms,/submissions/detail/373852404/,Not Pending,Middle of the Linked List,36.4 MB,"/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @return {ListNode}
 */
var middleNode = function(head) {
  let cur = head;
  let n = 0;
  for(;cur !== null;++n) cur = cur.next;
  
  n = (n/2|0);
  cur = head;
  while((n--)>0) cur = cur.next;
  return cur;
};",111111111111111
373850470,javascript,"1 week, 2 days",1596161997,Accepted,164 ms,/submissions/detail/373850470/,Not Pending,Range Sum Query - Immutable,43.1 MB,"/**
 * @param {number[]} nums
 */
var NumArray = function(nums) {
  this.nums = nums;
  this.sums = nums;
  
  for(let i=1;i<nums.length;++i) this.sums[i] += this.sums[i-1];
  
  this.getSum = function(i) {
    if(i<0) return 0;
    else return this.sums[i];
  }  
};

/** 
 * @param {number} i 
 * @param {number} j
 * @return {number}
 */
NumArray.prototype.sumRange = function(i, j) {
    return this.getSum(j) - this.getSum(i-1);
};

/** 
 * Your NumArray object will be instantiated and called as such:
 * var obj = new NumArray(nums)
 * var param_1 = obj.sumRange(i,j)
 */",1111111111111111
373847499,javascript,"1 week, 2 days",1596161366,Accepted,140 ms,/submissions/detail/373847499/,Not Pending,Divisor Game,36.7 MB,"/**
 * @param {number} N
 * @return {boolean}
 */

/*
1 => alice
2 => alice
3 => bob (alice only select 1 => 2 is the winning)
4 => (alice can select 2 but bob can select 1, but alice can select 3, bob will lost)
*/

var divisorGame = function(N) {
  let cache = Array(N+1);
  cache[1] = false;
  cache[2] = true;
  function solve(n) {
    if(cache[n] !== undefined) return cache[n]
    
    cache[n] = false;
    for(let i=1;i<n;++i) if(n%i==0) {
      if(!solve(n-i)) {
        cache[n] = true;
      }
    }
    
    return cache[n];
  }
  
  return solve(N);
};",1111111111111111111111111111111111111111
373847431,javascript,"1 week, 2 days",1596161352,Wrong Answer,N/A,/submissions/detail/373847431/,Not Pending,Divisor Game,N/A,"/**
 * @param {number} N
 * @return {boolean}
 */

/*
1 => alice
2 => alice
3 => bob (alice only select 1 => 2 is the winning)
4 => (alice can select 2 but bob can select 1, but alice can select 3, bob will lost)
*/

var divisorGame = function(N) {
  let cache = Array(N+1);
  cache[1] = cache[2] = true;
  function solve(n) {
    if(cache[n] !== undefined) return cache[n]
    
    cache[n] = false;
    for(let i=1;i<n;++i) if(n%i==0) {
      if(!solve(n-i)) {
        cache[n] = true;
      }
    }
    
    return cache[n];
  }
  
  return solve(N);
};",1101111111111111111111111111111111111111
373834847,javascript,"1 week, 2 days",1596158695,Accepted,124 ms,/submissions/detail/373834847/,Not Pending,Increasing Decreasing String,40.9 MB,"/**
 * @param {string} s
 * @return {string}
 */
var sortString = function(s) {
  var cnt = {};
  s.split('').forEach(e => cnt[e] = 1  + (cnt[e] || 0));
  var ret = """";
  var remain = s.length;
  var alpha = ""abcdefghijklmnopqrstuvwxyz"";
  var niter = 0;
  while(remain > 0) {
    if(niter % 2 === 0) {
      for(var i=0;i<26;++i) {
        var c = alpha.charAt(i);
        if(cnt[c]>0) {
          ret += c;
          cnt[c]--;
          remain--;
        }
      }      
    } else {
      for(var i=25;i>=0;--i) {
        var c = alpha.charAt(i);
        if(cnt[c]>0) {
          ret += c;
          cnt[c]--;
          remain--;
        }
      }            
    }
    niter++;
  }
  return ret;
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
373830972,javascript,"1 week, 2 days",1596157829,Accepted,80 ms,/submissions/detail/373830972/,Not Pending,Flipping an Image,37.7 MB,"/**
 * @param {number[][]} A
 * @return {number[][]}
 */
var flipAndInvertImage = function(A) {
  return A.map(r => r.reverse().map(x=>1-x));
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111
373817902,javascript,"1 week, 2 days",1596154949,Accepted,80 ms,/submissions/detail/373817902/,Not Pending,Decrypt String from Alphabet to Integer Mapping,36.9 MB,"/**
 * @param {string} s
 * @return {string}
 */
var freqAlphabets = function(s) {
    var ret = """";
    for(var i = 0 ; i < s.length ; ++i) {
        if(i+2 <= s.length && s.charAt(i+2) == '#') {
            var num = parseInt(s.substring(i,i+2));
            i += 2;
        } else {
            var num = parseInt(s.substring(i,i+1));
        }
        ret += String.fromCharCode('a'.charCodeAt()+num-1);
    }  
    return ret;
};",1111111111111111111111111111111111111111
373812292,javascript,"1 week, 2 days",1596153701,Accepted,112 ms,/submissions/detail/373812292/,Not Pending,Shuffle String,38.8 MB,"/**
 * @param {string} s
 * @param {number[]} indices
 * @return {string}
 */
var restoreString = function(s, indices) {
    var x = [];
    
    for(var i = 0 ; i < s.length; ++i) {
        x[indices[i]] = s.charAt(i);
    }
    var ret = """";
    
    for(var i = 0 ; i < s.length; ++i) {
        ret += x[i];
    }
    
    return ret;
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
373587272,python,"1 week, 3 days",1596107829,Accepted,36 ms,/submissions/detail/373587272/,Not Pending,Word Break II,12.8 MB,"class Solution(object):
    def wordBreak(self, S, W):
        """"""
        :type s: str
        :type wordDict: List[str]
        :rtype: List[str]
        """"""
        
        cache = [ None for i in range(len(S)) ]
        
        def solve(i):
            if i == len(S):
                return [""""]
            
            if cache[i] != None:
                return cache[i]
                
            cache[i] = []
            for w in W:
                if S[i:i+len(w)] != w:
                    continue
                            
                ret = solve(i+len(w))
                
                for x in ret:
                    cache[i].append(w + "" "" + x)
            
            return cache[i]
        
        return [x[:-1] for x in solve(0)]",111111111111111111111111111111111111
373159479,cpp,"1 week, 4 days",1596022565,Accepted,208 ms,/submissions/detail/373159479/,Not Pending,Best Time to Buy and Sell Stock with Cooldown,12.7 MB,"int cache[5000];
int N;
vector<int> P;

int solve(int i) {
    if(i>=N) {
        return 0;
    }
    int &ret = cache[i];    
    if(ret >= 0) {
        return ret;
    }
    ret = 0;
                    
    ret = max(ret, solve(i+1));
    int best = 0;
    for(int j=i+1;j<N;++j) {
        best = max(best, P[j]);
        ret = max(ret, solve(j+2) + best - P[i]);
    }
    return ret;
}              

class Solution {
public:
    int maxProfit(vector<int>& p) {
        P = p;
        N = (int)P.size();
        memset(cache, -1, sizeof cache);    
        return solve(0);
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
373158749,cpp,"1 week, 4 days",1596022368,Time Limit Exceeded,N/A,/submissions/detail/373158749/,Not Pending,Best Time to Buy and Sell Stock with Cooldown,N/A,"int cache[5000][5000];
int N;
vector<int> P;

int solve(int i, int p) {
    if(i>=N) {
        if(p==-1) {
            return 0;
        } else {
            return -P[p];
        }
    }
    int &ret = cache[i][p+1];    
    if(ret >= 0) {
        return ret;
    }
    ret = 0;
                    
    if(p==-1) {
        ret = max(ret, solve(i+1, -1));
        ret = max(ret, solve(i+1, i));
    } else {
        ret = max(ret, solve(i+1, p));
        ret = max(ret, solve(i+2, -1) + P[i]-P[p]);
    }
                    
    return ret;
}              

class Solution {
public:
    int maxProfit(vector<int>& p) {
        P = p;
        N = (int)P.size();
        memset(cache, -1, sizeof cache);    
        return solve(0, -1);
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000
373152108,python,"1 week, 4 days",1596020570,Time Limit Exceeded,N/A,/submissions/detail/373152108/,Not Pending,Best Time to Buy and Sell Stock with Cooldown,N/A,"class Solution(object):
    def maxProfit(self, P):
        """"""
        :type prices: List[int]
        :rtype: int
        """"""
        N = len(P)
        cache = dict()
        
        def solve(i, last_buy):
            if i >= N:
                return 0 if last_buy is None else -P[last_buy]
            
            state = (i, last_buy)
            
            if state in cache:
                return cache[state]
            cache[state] = -987654321
            
            if last_buy is None:
                cache[state] = max(cache[state], solve(i+1, None))
                cache[state] = max(cache[state], solve(i+1, i))
            else:
                cache[state] = max(cache[state], solve(i+1, last_buy))
                cache[state] = max(cache[state], solve(i+2, None) + (P[i]-P[last_buy]))
                                   
            return cache[state]
                                   
        return solve(0, None)
            
            
            
            ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
372721868,cpp,"1 week, 5 days",1595939722,Accepted,252 ms,/submissions/detail/372721868/,Not Pending,Task Scheduler,34.3 MB,"class Solution {
public:
    int leastInterval(vector<char>& T, int n) {
        int ntasks[30]={0};
        int remains[30]={0};
        int m = (int)T.size();
        int l = 0;
        for(int i=0;i<m;++i) {
            int c = (int)(T[i]-'A');
            ntasks[c]++;
            l = max(l, c+1);
        }
        
        int elapsed=0;
        
        for(elapsed=1;;++elapsed) {

            
            //cout << elapsed << "":"" << endl;

            int p = -1;
            for(int i=0;i<l;++i) {
                if(ntasks[i]>0 && remains[i] == 0) {
                    if(p==-1) {
                        p = i;
                    }
                    else if(ntasks[i]>ntasks[p]) {
                        p = i;
                   }
               }
            }
            
            
            if(p!=-1) {
                remains[p] = -1;
                ntasks[p]--;
            }

            
            for(int i=0;i<l;++i) {
                if(remains[i]>0) {
                    remains[i]--;
                } else if(remains[i]==-1) {
                    remains[i] = n;
                }
            }            
            
            /*cout << ""time: "";
            for(int i=0;i<l;++i) cout << remains[i] << "" ""; cout << endl;
            cout << ""task: "";
            for(int i=0;i<l;++i) cout << ntasks[i] << "" ""; cout << endl;*/
            bool is_empty = true;
            for(int i=0;i<l;++i) {
                if(ntasks[i]>0) {
                    is_empty = false;
                    break;
                }
            }
            
            
            if(is_empty) {
                break;
            }

        }
        return elapsed;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111
372719250,cpp,"1 week, 5 days",1595939119,Wrong Answer,N/A,/submissions/detail/372719250/,Not Pending,Task Scheduler,N/A,"class Solution {
public:
    int leastInterval(vector<char>& T, int n) {
        int ntasks[30]={0};
        int remains[30]={0};
        int m = (int)T.size();
        int l = 0;
        for(int i=0;i<m;++i) {
            int c = (int)(T[i]-'A');
            ntasks[c]++;
            l = max(l, c+1);
        }
        
        int elapsed=0;
        
        for(elapsed=1;;++elapsed) {

            
            // cout << elapsed << "":"" << endl;

            for(int i=0;i<l;++i) {
                if(ntasks[i]>0 && remains[i] == 0) {
                    // cout << ""took "" << i << endl;
                    remains[i] = -1;
                    ntasks[i]--;
                    break;
                }
            }
            
            for(int i=0;i<l;++i) {
                if(remains[i]>0) {
                    remains[i]--;
                } else if(remains[i]==-1) {
                    remains[i] = n;
                }
            }            
            
            // for(int i=0;i<l;++i) cout << remains[i] << "" ""; cout << endl;
            // for(int i=0;i<l;++i) cout << ntasks[i] << "" ""; cout << endl;
            bool is_empty = true;
            for(int i=0;i<l;++i) {
                if(ntasks[i]>0) {
                    is_empty = false;
                    break;
                }
            }
            
            
            if(is_empty) {
                break;
            }

        }
        return elapsed;
    }
};",111111111111111111111000000000000000000000000000000000000000001100010
372226308,python,"1 week, 6 days",1595836850,Accepted,184 ms,/submissions/detail/372226308/,Not Pending,Construct Binary Tree from Inorder and Postorder Traversal,88.7 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def buildTree(self, I, P):
        """"""
        :type inorder: List[int]
        :type postorder: List[int]
        :rtype: TreeNode
        """"""
        
        def go(inord, ptord):
            if len(inord) == 0:
                return None
            if len(inord) == 1:
                return TreeNode(val=inord[0])
            
            root = ptord[-1]
            i = inord.index(root)
            cur = TreeNode(val=root)
            l = inord[:i]
            r = inord[i+1:]
            j = len(l)
            cur.left = go(l,ptord[:j])
            cur.right = go(r,ptord[j:-1])
            return cur
        
        return go(I, P)
            
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
371841569,rust,2 weeks,1595762271,Accepted,0 ms,/submissions/detail/371841569/,Not Pending,Add Digits,2 MB,"impl Solution {
    pub fn add_digits(num: i32) -> i32 {
        let mut ret = num;
        
        while ret >= 10 {
            let mut cur = 0;
            loop {
                cur += ret % 10;
                ret /= 10;
                if ret == 0 {
                    break;
                }
            }
            ret = cur;
        }
        return ret;
    }
}
371343602,python,"2 weeks, 1 day",1595675883,Accepted,44 ms,/submissions/detail/371343602/,Not Pending,Find Minimum in Rotated Sorted Array II,13 MB,"class Solution(object):
    def findMin(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        return min(nums)",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
371343525,python,"2 weeks, 1 day",1595675865,Accepted,28 ms,/submissions/detail/371343525/,Not Pending,Find Minimum in Rotated Sorted Array,13 MB,"class Solution(object):
    def findMin(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        return min(nums)",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
370972628,python,"2 weeks, 2 days",1595593443,Accepted,84 ms,/submissions/detail/370972628/,Not Pending,All Paths From Source to Target,14.2 MB,"class Solution(object):
    def allPathsSourceTarget(self, graph):
        """"""
        :type graph: List[List[int]]
        :rtype: List[List[int]]
        """"""
        
        N = len(graph)
        
        adj = [[] for i in range(N)]
        for u, edges in enumerate(graph):
            for v in edges:
                adj[u].append(v)
                       
        ret = []
        
        def go(u, visited, path):
            if u == N-1:
                ret.append(path)
                return 
                      
            for v in adj[u]:
                if visited & (1<<v) > 0:
                    continue
                go(v, visited | (1<<v), path + [v])
                
        
        go(0, 1, [0])
        return ret
            ",11111111111111111111111111
370484322,python,"2 weeks, 3 days",1595490353,Accepted,44 ms,/submissions/detail/370484322/,Not Pending,Single Number III,15.7 MB,"class Solution(object):
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        from collections import Counter
        return [k for k, v in Counter(nums).items() if v == 1]
        ",111111111111111111111111111111
370148036,python,"2 weeks, 4 days",1595430027,Accepted,24 ms,/submissions/detail/370148036/,Not Pending,Binary Tree Zigzag Level Order Traversal,13.2 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def zigzagLevelOrder(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        from collections import deque
        que = deque()
        que.append((root, 0))
        
        ret = []
        while bool(que):
            node, lv = que.popleft()
            if node == None:
                continue
            
            if len(ret) < lv+1:
                ret.append([])
                
            ret[lv].append(node.val)
            
            que.append((node.left,lv+1))
            que.append((node.right,lv+1))

        for i in range(1, len(ret), 2):
            ret[i] = ret[i][::-1]
        return ret    
            ",111111111111111111111111111111111
370146371,python,"2 weeks, 4 days",1595429751,Wrong Answer,N/A,/submissions/detail/370146371/,Not Pending,Binary Tree Zigzag Level Order Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def zigzagLevelOrder(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        from collections import deque
        que = deque()
        que.append((root, 0))
        
        ret = []
        while bool(que):
            node, lv = que.popleft()
            if node == None:
                continue
            
            if len(ret) < lv+1:
                ret.append([])
                
            ret[lv].append(node.val)
            
            if lv % 2 == 0:
                que.append((node.right,lv+1))
                que.append((node.left,lv+1))
            else:
                que.append((node.left,lv+1))
                que.append((node.right,lv+1))

        return ret    
            ",111111101101101000001000000100000
369629475,cpp,"2 weeks, 5 days",1595332768,Accepted,36 ms,/submissions/detail/369629475/,Not Pending,Word Search,11.2 MB,"int N;
int M;
bool visited[300][300];
vector<vector<char>> B;

bool search(int i, int j, int k, const string &s) {

    if(k==s.length()) return true;

    if(i<0) return false;
    if(i>=N) return false;
    if(j<0) return false;
    if(j>=M) return false;
    
    if(visited[i][j]) {
        return false;
    }
    
    if(B[i][j] != s[k]) {
        return false;
    }
    
    visited[i][j] = true;
    
    if(search(i-1, j, k+1, s)) { visited[i][j] = false; return true; }
    if(search(i+1, j, k+1, s)) { visited[i][j] = false; return true; }
    if(search(i, j-1, k+1, s)) { visited[i][j] = false; return true; }
    if(search(i, j+1, k+1, s)) { visited[i][j] = false; return true; }
    
    visited[i][j] = false;  
    return false;
}

class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        B = board;
        N = board.size();
        M = board[0].size();
        memset(visited, 0, sizeof visited);
        for(int i=0;i<N;++i) {
            for(int j=0;j<M;++j) {
                if(B[i][j] == word[0] && search(i, j, 0, word)) {
                    return true;
                }
            }
        }
        
        return false;
    }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
369628826,cpp,"2 weeks, 5 days",1595332598,Time Limit Exceeded,N/A,/submissions/detail/369628826/,Not Pending,Word Search,N/A,"int N;
int M;
bool visited[300][300];
vector<vector<char>> B;

bool search(int i, int j, int k, const string &s) {
    if(k==s.length()) return true;

    if(i<0) return false;
    if(i>=N) return false;
    if(j<0) return false;
    if(j>=M) return false;
    
    if(visited[i][j]) {
        return false;
    }
    
    if(B[i][j] != s[k]) {
        return false;
    }
    
    visited[i][j] = true;
    
    bool ret = false;
    
    ret |= search(i-1, j, k+1, s);
    ret |= search(i+1, j, k+1, s);
    ret |= search(i, j-1, k+1, s);
    ret |= search(i, j+1, k+1, s);
    
    visited[i][j] = false;
    
    return ret;
    
}

class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        B = board;
        N = board.size();
        M = board[0].size();
        memset(visited, 0, sizeof visited);
        for(int i=0;i<N;++i) {
            for(int j=0;j<M;++j) {
                if(search(i, j, 0, word)) {
                    return true;
                }
            }
        }
        
        return false;
    }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111100
369123367,python,"2 weeks, 6 days",1595239697,Accepted,64 ms,/submissions/detail/369123367/,Not Pending,Remove Linked List Elements,19.7 MB,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeElements(self, head, val):
        """"""
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """"""
        cur = head
        prev = None
        while cur != None:
            if cur.val != val:
                prev = cur
                cur = cur.next
                continue
            
            if prev != None:
                prev.next = cur.next
            else:
                head = cur.next
            cur = cur.next
            
            
        
        return head
        ",11111111111111111111111111111111111111111111111111111111111111111
369123047,python,"2 weeks, 6 days",1595239622,Wrong Answer,N/A,/submissions/detail/369123047/,Not Pending,Remove Linked List Elements,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeElements(self, head, val):
        """"""
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """"""
        cur = head
        prev = None
        while cur != None:
            if cur.val != val:
                prev = cur
                cur = cur.next
                continue
            
            if prev != None:
                prev.next = cur.next
            else:
                head = None
            cur = cur.next
            
            
        
        return head
        ",11111110110110101110010110011111011011101111110011111001101100111
369122048,python,"2 weeks, 6 days",1595239399,Runtime Error,N/A,/submissions/detail/369122048/,Not Pending,Remove Linked List Elements,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def removeElements(self, head, val):
        """"""
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """"""
        cur = head
        prev = None
        while cur != None:
            if cur.val != val:
                prev = cur
                cur = cur.next
                continue
            prev.next = cur.next
            cur = cur.next
            
        
        return head
        ",11000000000000000000000000000000000000000000000000000000000000000
368624117,rust,3 weeks,1595145320,Accepted,0 ms,/submissions/detail/368624117/,Not Pending,Add Binary,1.9 MB,"impl Solution {
    pub fn add_binary(a: String, b: String) -> String {
        let mut A : String = a.chars().rev().collect::<String>();
        let mut B : String = b.chars().rev().collect::<String>();
        
        if A.len() > B.len() {
            std::mem::swap(&mut A, &mut B);
        }
     
        let mut ret : String = """".to_string();
        
        for i in A.len()..B.len() {
            A += ""0"";    
        }
        
        let bA = A.as_bytes();
        let bB = B.as_bytes();
        let mut carry = 0u8;
        for i in 0..B.len() {
            let cA = bA[i]-('0' as u8);
            let cB = bB[i]-('0' as u8);
            let tot = carry + cA + cB;
            
            if tot % 2 == 1 {
                ret += ""1"";
            } else {
                ret += ""0"";
            }
            
            carry = tot / 2;
        }
        
        if carry > 0 {
            ret += ""1"";
        }
        return ret.chars().rev().collect::<String>();
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
368192068,rust,"3 weeks, 1 day",1595064816,Accepted,0 ms,/submissions/detail/368192068/,Not Pending,H-Index,2 MB,"impl Solution {
    pub fn h_index(citations: Vec<i32>) -> i32 {
        let mut C : Vec<i32> = citations.clone();
        C.sort();
        C.reverse();
        
        for i in 0..C.len() {
            if C[i] < 1i32+(i as i32) {
                return i as i32;
            }
        }
        
        return C.len() as i32;
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111111111111111
368190981,rust,"3 weeks, 1 day",1595064528,Accepted,0 ms,/submissions/detail/368190981/,Not Pending,Minimum Subsequence in Non-Increasing Order,2 MB,"impl Solution {
    pub fn min_subsequence(nums: Vec<i32>) -> Vec<i32> {
        let mut vec = nums.clone();
        vec.sort();
        vec.reverse();
        
        let mut ret : Vec<i32> = vec![];
        
        let mut tot : i32 = nums.iter().sum();
        
        let mut cur = 0i32;
        for x in vec {
            cur += x;
            let mut remain = tot - cur;
            ret.push(x);
            if cur > remain {
                break;
            }
        }
        
        return ret;
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
368170338,rust,"3 weeks, 1 day",1595059601,Accepted,24 ms,/submissions/detail/368170338/,Not Pending,Course Schedule II,6.1 MB,"impl Solution {
    pub fn find_order(num_courses: i32, prerequisites: Vec<Vec<i32>>) -> Vec<i32> {
        let N = num_courses as usize;
        let mut G : Vec<Vec<bool>> = vec![ vec![false; N]; N];
        let mut V = vec![0i32; N];
        let mut ret = vec![0i32; N];
        
        for i in 0..prerequisites.len() {
            let u = prerequisites[i][0] as usize;
            let v = prerequisites[i][1] as usize;
            G[u][v] = true;
            V[u] += 1;
        }
                
        for i in 0..N {
            let mut u = N;

            for j in 0..N {
                if V[j] == 0 {
                    u = j;
                    break;
                }
            }
            
            if u == N {
                return vec![];
            }
            V[u] = -1;
            
            for j in 0..N {
                if G[j][u] {
                    V[j] -= 1;
                }
            }
            
            ret[i] = u as i32;
        }
        return ret;
    }
}",11111111111111111111111111111111111111111111
368169859,rust,"3 weeks, 1 day",1595059496,Runtime Error,N/A,/submissions/detail/368169859/,Not Pending,Course Schedule II,N/A,"impl Solution {
    pub fn find_order(num_courses: i32, prerequisites: Vec<Vec<i32>>) -> Vec<i32> {
        let N = num_courses as usize;
        let mut G : Vec<Vec<bool>> = vec![ vec![false; N]; N];
        let mut V = vec![0i32; N];
        let mut ret = vec![0i32; N];
        
        for i in 0..prerequisites.len() {
            let u = prerequisites[i][0] as usize;
            let v = prerequisites[i][1] as usize;
            G[u][v] = true;
            V[u] += 1;
        }
        
        println!(""{:?}"", V);
        
        for i in 0..N {
            let mut u = N;

            for j in 0..N {
                if V[j] == 0 {
                    u = j;
                    break;
                }
            }
            
            V[u] = -1;
            
            for j in 0..N {
                if G[j][u] {
                    V[j] -= 1;
                }
            }
            
            ret[i] = u as i32;
        }
        return ret;
    }
}",11110000000000000000000000000000000000000000
367833182,python,"3 weeks, 2 days",1594984514,Accepted,48 ms,/submissions/detail/367833182/,Not Pending,Search Insert Position,13.2 MB,"class Solution(object):
    def searchInsert(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        
        for i, v in enumerate(nums):
            if target <= v:
                return i
        
        return len(nums)",11111111111111111111111111111111111111111111111111111111111111
367832801,python,"3 weeks, 2 days",1594984399,Accepted,68 ms,/submissions/detail/367832801/,Not Pending,Search in a Binary Search Tree,16.7 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def searchBST(self, root, val):
        """"""
        :type root: TreeNode
        :type val: int
        :rtype: TreeNode
        """"""
        
        def find(cur, v):
            if cur is None: 
                return None
            
            if cur.val == v:
                return cur
            
            if cur.val > v:
                return find(cur.left, v)
            else:
                return find(cur.right, v)
            
        return find(root, val)
                ",111111111111111111111111111111111111
367832087,rust,"3 weeks, 2 days",1594984190,Accepted,0 ms,/submissions/detail/367832087/,Not Pending,Number of Good Pairs,2 MB,"impl Solution {
    pub fn num_identical_pairs(nums: Vec<i32>) -> i32 {
        let mut ret = 0i32;
        
        let N = nums.len();
        
        for i in 0..(N-1) {
            for j in (i+1)..(N) {
                if nums[i] == nums[j] {
                    ret += 1;
                }
            }
        }
        
        return ret;
    }
}",111111111111111111111111111111111111111111111111
367831545,cpp,"3 weeks, 2 days",1594984015,Accepted,240 ms,/submissions/detail/367831545/,Not Pending,01 Matrix,35.3 MB,"class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& matrix) {
        int N = matrix.size();
        int M = matrix[0].size();
        
        vector<vector<int>> ret(N, vector<int>(M, -1));
        typedef pair<pair<int,int>, int> Node;
        queue< Node > que;
        
        for(int i=0;i<N;++i) {
            for(int j=0;j<M;++j) {
                if(matrix[i][j]==0) {
                    que.push(make_pair(make_pair(i,j), 0));
                }        
            }
        }        
        
        while(!que.empty()) {
            Node top = que.front();
            que.pop();
            int i = top.first.first;
            int j = top.first.second;
            int d = top.second;
            
            if(ret[i][j] != -1) {
                continue;
            }
            
            ret[i][j] = d;
            
            if(i-1>=0 && ret[i-1][j] == -1) que.push(make_pair(make_pair(i-1,j), d+1));
            if(i+1< N && ret[i+1][j] == -1) que.push(make_pair(make_pair(i+1,j), d+1));
            if(j-1>=0 && ret[i][j-1] == -1) que.push(make_pair(make_pair(i,j-1), d+1));
            if(j+1< M && ret[i][j+1] == -1) que.push(make_pair(make_pair(i,j+1), d+1));
        }
        return ret;
    }
};",111111111111111111111111111111111111111111111111
367827835,python,"3 weeks, 2 days",1594982948,Accepted,16 ms,/submissions/detail/367827835/,Not Pending,Word Pattern,12.8 MB,"class Solution(object):
    def wordPattern(self, P, S):
        """"""
        :type pattern: str
        :type str: str
        :rtype: bool
        """"""
        S = S.strip().split()
        
        from collections import defaultdict
        D = defaultdict(set)
        E = defaultdict(set)
        
        if len(P) != len(S):
            return False
        
        for a, b in zip(P, S):
            D[a].add(b)
            E[b].add(a)
            
        for k, v in D.items():
            if len(v) > 1:
                return False

        for k, v in E.items():
            if len(v) > 1:
                return False
        
        return True
                ",1111111111111111111111111111111111111
367827692,python,"3 weeks, 2 days",1594982905,Wrong Answer,N/A,/submissions/detail/367827692/,Not Pending,Word Pattern,N/A,"class Solution(object):
    def wordPattern(self, P, S):
        """"""
        :type pattern: str
        :type str: str
        :rtype: bool
        """"""
        S = S.strip().split()
        
        from collections import defaultdict
        D = defaultdict(set)
        E = defaultdict(set)
        for a, b in zip(P, S):
            D[a].add(b)
            E[b].add(a)
            
        for k, v in D.items():
            if len(v) > 1:
                return False

        for k, v in E.items():
            if len(v) > 1:
                return False
        
        return True
                ",1111111111111111011101011111011111111
367827448,python,"3 weeks, 2 days",1594982834,Wrong Answer,N/A,/submissions/detail/367827448/,Not Pending,Word Pattern,N/A,"class Solution(object):
    def wordPattern(self, P, S):
        """"""
        :type pattern: str
        :type str: str
        :rtype: bool
        """"""
        S = S.strip().split()
        
        from collections import defaultdict
        D = defaultdict(set)
        E = defaultdict(set)
        for a, b in zip(P, S):
            D[a].add(b)
            D[b].add(a)
            
        for k, v in D.items():
            if len(v) > 1:
                return False

        for k, v in E.items():
            if len(v) > 1:
                return False
        
        return True
                ",1111111111100111011101011111011111111
367805416,python,"3 weeks, 2 days",1594976957,Accepted,168 ms,/submissions/detail/367805416/,Not Pending,Top K Frequent Elements,16.3 MB,"class Solution(object):
    def topKFrequent(self, nums, k):
        """"""
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """"""
        from collections import Counter
        c = Counter(nums)
        return sorted([x[0] for x in c.most_common(k)])",111111111111111111111
367428426,rust,"3 weeks, 3 days",1594908818,Wrong Answer,N/A,/submissions/detail/367428426/,Not Pending,"Pow(x, n)",N/A,"impl Solution {
    pub fn my_pow(x: f64, n: i32) -> f64 {        
        fn pow(x: f64, n: i32) -> f64 {
            if n == 0 {
                return 1f64;
            }
            else if n == 1 {
                return x;
            }
                       
            let mut ret = pow(x, n/2);
            ret *= ret;
            if n % 2 == 1 {
                ret *= x;
            }
            return ret;
        }
        let mut nn = n;
        let mut xx = x;
        if nn < 0 {
            nn *= -1;
            xx = 1f64 / x;
        }
        
        return pow(xx, nn);
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111011
367428377,python,"3 weeks, 3 days",1594908808,Accepted,12 ms,/submissions/detail/367428377/,Not Pending,"Pow(x, n)",13 MB,"class Solution(object):
    def myPow(self, x, n):
        """"""
        :type x: float
        :type n: int
        :rtype: float
        """"""
               
        def f(x, n):
            if n == 0:
                return 1
            if n == 1:
                return x
            ret = f(x, n//2) ** 2
            if n % 2 == 1:
                ret *= x
            return ret
                
        if n < 0:
            n *= -1
            x = 1/x
            
        return f(x, n)",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
366887882,python,"3 weeks, 4 days",1594803449,Accepted,36 ms,/submissions/detail/366887882/,Not Pending,Reverse Words in a String,13.9 MB,"class Solution(object):
    def reverseWords(self, s):
        """"""
        :type s: str
        :rtype: str
        """"""
        return "" "".join(s.strip().split()[::-1])",1111111111111111111111111
366404049,python,"3 weeks, 5 days",1594711735,Accepted,20 ms,/submissions/detail/366404049/,Not Pending,Angle Between Hands of a Clock,12.8 MB,"class Solution(object):
    def angleClock(self, hh, mm):
        """"""
        :type hour: int
        :type minutes: int
        :rtype: float
        """"""
        a = hh * 30 + mm * 0.5
        b = mm * 6
        c = abs(a-b)
        return min(c,360-c)",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
365988856,python,"3 weeks, 6 days",1594635369,Accepted,20 ms,/submissions/detail/365988856/,Not Pending,Same Tree,12.8 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isSameTree(self, p, q):
        """"""
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """"""
        def go(p, q):
            if p == None or q == None:
                return p == None and q == None
            
            if p.val != q.val:
                return False
            
            if not go(p.left, q.left):
                return False
            
            if not go(p.right, q.right):
                return False
            
            return True
            
        return go(p, q)
            ",111111111111111111111111111111111111111111111111111111111
365499558,python,4 weeks,1594539813,Accepted,296 ms,/submissions/detail/365499558/,Not Pending,Reverse String,19.6 MB,"class Solution(object):
    def reverseString(self, s):
        """"""
        :type s: List[str]
        :rtype: None Do not return anything, modify s in-place instead.
        """"""
        l, r = 0, len(s)-1
        
        while l < r:
            s[l], s[r] = s[r], s[l]
            l += 1
            r -= 1
            ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
365495477,python3,4 weeks,1594539052,Accepted,32 ms,/submissions/detail/365495477/,Not Pending,Reverse Bits,13.8 MB,"class Solution:
    def reverseBits(self, n: int) -> int:
        ret = 0
        for i in range(32):
            ret *= 2
            ret += n % 2
            n //= 2
        return ret
    ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
365495016,cpp,4 weeks,1594538966,Runtime Error,N/A,/submissions/detail/365495016/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        int ret = 0;
        for(int i=0;i<32;++i) {
            ret *= 2;
            ret += n % 2;
            n /= 2;
        }
        return ret;
    }
}
365323215,python,4 weeks,1594512438,Accepted,12 ms,/submissions/detail/365323215/,Not Pending,Subsets,13.1 MB,"class Solution(object):
    def subsets(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        
        from itertools import combinations
        
        N = len(nums)
        
        ret = [[]]
        for i in range(1,N+1):
            ret.extend([list(c) for c in combinations(nums,i)])
        # ret.sort()
        return ret
        ",1111111111
364629780,python,1 month,1594366222,Accepted,280 ms,/submissions/detail/364629780/,Not Pending,Flatten a Multilevel Doubly Linked List,14.2 MB,"""""""
# Definition for a Node.
class Node(object):
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
""""""

class Solution(object):
    def flatten(self, head):
        """"""
        :type head: Node
        :rtype: Node
        """"""
        
        def go(cur):
            if cur == None:
                return None
            
            if cur.child != None:
                last = go(cur.child)
                child = cur.child
                cur.child = None
                
                last.next = cur.next
                cur.next = child
                child.prev = cur
                
                if last.next != None:
                    last.next.prev = last
                
            next = go(cur.next)
            if next != None:
                return next
            else: 
                return cur
                
        go(head)
        
        return head
                
        ",1111111111111111111111
364628573,python,1 month,1594365987,Runtime Error,N/A,/submissions/detail/364628573/,Not Pending,Flatten a Multilevel Doubly Linked List,N/A,"""""""
# Definition for a Node.
class Node(object):
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
""""""

class Solution(object):
    def flatten(self, head):
        """"""
        :type head: Node
        :rtype: Node
        """"""
        
        def go(cur):
            if cur == None:
                return None
            
            if cur.child != None:
                last = go(cur.child)
                child = cur.child
                cur.child = None
                
                last.next = cur.next
                cur.next = child
                child.prev = cur
                last.next.prev = last
                
            next = go(cur.next)
            if next != None:
                return next
            else: 
                return cur
                
        go(head)
        
        return head
                
        ",1111111111111111111000
364229544,python,1 month,1594288396,Accepted,28 ms,/submissions/detail/364229544/,Not Pending,Maximum Width of Binary Tree,13.6 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def widthOfBinaryTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        from collections import defaultdict, deque
        
        maxi = 0
        que = deque()
        que.append((root,1,1))
        
        cur_lv = -1
        mini = None
        while len(que) > 0:
            node, lv, idx = que.popleft()
            if lv > cur_lv:
                cur_lv = lv
                mini = idx
                            
            maxi = max(maxi, idx-mini)
                
            if not node.left is None: que.append((node.left, lv+1, 2*idx))
            if not node.right is None: que.append((node.right, lv+1, 2*idx+1))


        return maxi+1",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
364228430,python,1 month,1594288081,Wrong Answer,N/A,/submissions/detail/364228430/,Not Pending,Maximum Width of Binary Tree,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def widthOfBinaryTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        from collections import defaultdict, deque
        
        maxi = 0
        que = deque()
        que.append((root,1,1))
        
        cur_lv = -1
        mini = None
        while len(que) > 0:
            node, lv, idx = que.pop()
            
            if lv > cur_lv:
                cur_lv = lv
                mini = idx
                            
            maxi = max(maxi, idx-mini)
                
            if not node.left is None: que.append((node.left, lv+1, 2*idx))
            if not node.right is None: que.append((node.right, lv+1, 2*idx+1))


        return maxi+1",000000111101111001001011011110001000001001000001001001011001001011011100111000011000000000001000000000000001
364227300,python,1 month,1594287791,Accepted,56 ms,/submissions/detail/364227300/,Not Pending,Maximum Width of Binary Tree,14 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def widthOfBinaryTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        from collections import defaultdict, deque
        
        maxi = 0
        que = deque()
        que.append((root,1,1))
        
        smallest = dict()
        largest = dict()
        cnt = defaultdict(int)
        while len(que) > 0:
            node, lv, idx = que.pop()
            
            if not lv in smallest:
                smallest[lv] = idx
            if not lv in largest:
                largest[lv] = idx
                
            smallest[lv] = min(smallest[lv], idx)
            largest[lv] = max(largest[lv], idx)
            
            maxi = max(maxi, largest[lv]-smallest[lv])
                
            if not node.left is None: que.append((node.left, lv+1, 2*idx))
            if not node.right is None: que.append((node.right, lv+1, 2*idx+1))


        return maxi+1",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
364226052,python,1 month,1594287479,Time Limit Exceeded,N/A,/submissions/detail/364226052/,Not Pending,Maximum Width of Binary Tree,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def widthOfBinaryTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        from collections import defaultdict, deque
        
        que = deque()
        que.append((root,0))
        
        
        
        smallest = dict()
        cnt = defaultdict(int)
        max_level = 0
        while len(que) > 0:
            node, level = que.pop()
            max_level = max(max_level, level)
            if not node.left is None: que.append((node.left, level+1))
            if not node.right is None: que.append((node.right, level+1))

        maxi = 0
                
        que = deque()
        que.append((root,0))

        while len(que) > 0:
            node, level = que.pop()
            cnt[level] += 1
            if not node is None: 
                if not level in smallest:
                    smallest[level] = cnt[level]
                maxi = max(maxi, cnt[level] - smallest[level])
            if level < max_level: 
                if node is None or node.left is None: 
                    que.append((None, level+1))
                else:
                    que.append((node.left, level+1))
                if node is None or node.right is None: 
                    que.append((None, level+1))
                else:
                    que.append((node.right, level+1))

        return maxi+1",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
364225540,python,1 month,1594287349,Runtime Error,N/A,/submissions/detail/364225540/,Not Pending,Maximum Width of Binary Tree,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def widthOfBinaryTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        from collections import defaultdict, deque
        
        que = deque()
        que.append((root,0))
        
        
        
        smallest = dict()
        cnt = defaultdict(int)
        max_level = 0
        while len(que) > 0:
            node, level = que.pop()
            max_level = max(max_level, level)
            if not node.left is None: que.append((node.left, level+1))
            if not node.right is None: que.append((node.right, level+1))

        maxi = 0
                
        que = deque()
        que.append((root,0))

        while len(que) > 0:
            node, level = que.pop()
            cnt[level] += 1
            if not node is None: 
                if not level in smallest:
                    smallest[level] = cnt[level]
                maxi = max(maxi, cnt[level] - smallest[level])
            if level < max_level: que.append((node.left, level+1))
            if level < max_level: que.append((node.right, level+1))

        return maxi+1",100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
364124258,cpp,1 month,1594268791,Accepted,2004 ms,/submissions/detail/364124258/,Not Pending,3Sum,126.5 MB,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        sort(nums.begin(), nums.end());
        
        set<vector<int>> s;
        
        for(int i=0;i<n-2;++i) {
            int v = nums[i];
            int l = i+1;
            int r = n-1;
            
            while(l<r) {
                int sum = v + nums[l] + nums[r];
                if(sum == 0) {
                    s.insert({v, nums[l], nums[r]});
                    l++;
                    r--;
                }
                else if(sum < 0) {
                    l++;
                } else {
                    r--;
                }
            }
        }
        vector<vector<int>> ret(s.begin(), s.end());
        return ret;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
364123732,cpp,1 month,1594268707,Time Limit Exceeded,N/A,/submissions/detail/364123732/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        sort(nums.begin(), nums.end());
        
        vector<vector<int>> ret;
        
        for(int i=0;i<n-2;++i) {
            int v = nums[i];
            int l = i+1;
            int r = n-1;
            
            while(l<r) {
                int sum = v + nums[l] + nums[r];
                if(sum == 0) {
                    ret.push_back({v, nums[l], nums[r]});
                    l++;
                    r--;
                }
                else if(sum < 0) {
                    l++;
                } else {
                    r--;
                }
            }
        }
        sort(ret.begin(),ret.end());
        auto ip = unique(ret.begin(), ret.end());
        ret.resize(distance(ret.begin(), ip));
        return ret;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
364123488,cpp,1 month,1594268666,Wrong Answer,N/A,/submissions/detail/364123488/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        sort(nums.begin(), nums.end());
        
        vector<vector<int>> ret;
        
        for(int i=0;i<n-2;++i) {
            int v = nums[i];
            int l = i+1;
            int r = n-1;
            
            while(l<r) {
                int sum = v + nums[l] + nums[r];
                if(sum == 0) {
                    ret.push_back({v, nums[l], nums[r]});
                    l++;
                    r--;
                }
                else if(sum < 0) {
                    l++;
                } else {
                    r--;
                }
            }
        }
        
        auto ip = unique(ret.begin(), ret.end());
        ret.resize(distance(ret.begin(), ip));
        return ret;
    }
};",1111111111111111111111111110111001111111111011111011101100001111111011101111111010111010100011111111110010110000100111111001010000001000010100100000110001000000000110010111000100000000001100010000001101010001000010111011100000010000000000000000000000000000000000000000000000000000000000000000000000000000000000001
364121551,cpp,1 month,1594268338,Time Limit Exceeded,N/A,/submissions/detail/364121551/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        set< vector<int> > s_ans;
        sort(nums.begin(), nums.end());
        vector<int> vec(3,0);
        for(int i=0;i<n;++i) {
          vec[0] = nums[i];
          for(int j=i+1;j<n;++j) {
            vec[1] = nums[j];
            if(binary_search(&nums[j+1], &nums[n], -nums[i]-nums[j])) {
              vec[2] = -nums[i]-nums[j];
              s_ans.insert(vec);
            }
          }
        }
        cout << s_ans.size() << endl;
      
        vector<vector<int>> ret;
        for(set<vector<int>>::iterator it = s_ans.begin(); it != s_ans.end() ; ++it ) {
          ret.push_back(*it);
        }
      
        return ret;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
364120939,cpp,1 month,1594268232,Wrong Answer,N/A,/submissions/detail/364120939/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int N = nums.size();
        unordered_map<int, vector<pair<int,int>> > M;
        for(int i = 0 ; i < N ; ++i) {
            for(int j=i+1; j < N ; ++j) {
                M[nums[i]+nums[j]].push_back(make_pair(i,j));
                
            }
        }
        
        vector<vector<int>> ret;
        
        for(int i=0;i<N;++i) {
            int target = -nums[i];
            if(M.count(target) == 0) continue;
            for(const auto &v : M[target]) {
                if(i == v.first) continue;
                if(i == v.second) continue;
                vector<int> vec;
                vec.push_back(nums[i]);
                vec.push_back(nums[v.first]);
                vec.push_back(nums[v.second]);
                // sort(vec.begin(), vec.end());
                ret.push_back(vec);
            }
        }

        sort(ret.begin(), ret.end());
        auto ip = unique(ret.begin(), ret.end()); 
        ret.resize(distance(ret.begin(), ip)); 
        
        return ret;
        
    }
};",0111111100000001111111000000110000000001111010010010000000000001010000001100111000000000000000001000000000000000000011110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
364120292,cpp,1 month,1594268116,Time Limit Exceeded,N/A,/submissions/detail/364120292/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int N = nums.size();
        unordered_map<int, vector<pair<int,int>> > M;
        for(int i = 0 ; i < N ; ++i) {
            for(int j=i+1; j < N ; ++j) {
                M[nums[i]+nums[j]].push_back(make_pair(i,j));
                
            }
        }
        
        vector<vector<int>> ret;
        
        for(int i=0;i<N;++i) {
            int target = -nums[i];
            if(M.count(target) == 0) continue;
            for(const auto &v : M[target]) {
                if(i == v.first) continue;
                if(i == v.second) continue;
                vector<int> vec;
                vec.push_back(nums[i]);
                vec.push_back(nums[v.first]);
                vec.push_back(nums[v.second]);
                sort(vec.begin(), vec.end());
                ret.push_back(vec);
            }
        }

        sort(ret.begin(), ret.end());
        auto ip = unique(ret.begin(), ret.end()); 
        ret.resize(distance(ret.begin(), ip)); 
        
        return ret;
        
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000
364117704,cpp,1 month,1594267669,Time Limit Exceeded,N/A,/submissions/detail/364117704/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int N = nums.size();
        map<int, set<int>> M;
        for(int i = 0 ; i < N ; ++i) {
            M[nums[i]].insert(i);
        }
        
        set< vector<int> > S;
        
        for(int i=0;i<N;++i) {
            for(int j=i+1;j<N;++j) {
                int target = -(nums[i] + nums[j]);
                
                if(M.count(target) == 0) continue;
                
                for(const auto &v : M[target]) {
                    if(v == i) continue;
                    if(v == j) continue;
                    vector<int> vec;
                    vec.push_back(nums[i]);
                    vec.push_back(nums[j]);
                    vec.push_back(nums[v]);
                    sort(vec.begin(), vec.end());
                    S.insert(vec);
                }
                
            }
        }
        
        vector<vector<int>> ret;
        
        for(auto &x : S) {
            ret.push_back(x);
        }
        return ret;
        
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000
364116954,cpp,1 month,1594267547,Time Limit Exceeded,N/A,/submissions/detail/364116954/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int N = nums.size();
        map<int, set<int>> M;
        for(int i = 0 ; i < N ; ++i) {
            M[nums[i]].insert(i);
        }
        
        set< vector<int> > S;
        
        for(int i=0;i<N;++i) {
            for(int j=i+1;j<N;++j) {
                int target = -(nums[i] + nums[j]);
                
                if(M.count(target) == 0) continue;
                
                for(const auto &v : M[target]) {
                    if(v == i) continue;
                    if(v == j) continue;
                    vector<int> vec;
                    vec.push_back(nums[i]);
                    vec.push_back(nums[j]);
                    vec.push_back(nums[v]);
                    sort(vec.begin(), vec.end());
                    S.insert(vec);
                }
                
            }
        }
        
        vector<vector<int>> ret;
        
        for(auto &x : S) {
            ret.push_back(x);
        }
        return ret;
        
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000
363358027,rust,1 month,1594127732,Accepted,48 ms,/submissions/detail/363358027/,Not Pending,Island Perimeter,2.3 MB,"impl Solution {
    pub fn island_perimeter(grid: Vec<Vec<i32>>) -> i32 {
        let mut B = [ [ 0 ; 200 ] ; 200 ];
        let mut N = grid.len();
        let mut M = grid[0].len();
        let mut ret = 0i32;
        
        for i in 0..N {
            for j in 0..M {
                B[i+1][j+1] = grid[i][j];
            }
        }
        
        for i in 1..(N+1) {
            for j in 1..(M+1) {
                if B[i][j] == 1 {
                    ret += 1-B[i-1][j];
                    ret += 1-B[i+1][j];
                    ret += 1-B[i][j-1];
                    ret += 1-B[i][j+1];                    
                }
            }
        }
        return ret;
    }
}
362796944,rust,1 month,1594019488,Accepted,0 ms,/submissions/detail/362796944/,Not Pending,Plus One,2 MB,"impl Solution {
    pub fn plus_one(digits: Vec<i32>) -> Vec<i32> {
        let mut D : Vec<i32> = digits.clone();
        D.reverse();
        D[0] += 1;
        let mut N = D.len();
        for i in 0..(N-1) {
            D[i+1] += D[i] / 10;
            D[i] %= 10;
        }
        if D[N-1] >= 10 {
            D[N-1] %= 10;
            D.push(1);
        }
        D.reverse();
        return D;
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
362449954,rust,1 month,1593956105,Accepted,0 ms,/submissions/detail/362449954/,Not Pending,Hamming Distance,2.1 MB,"impl Solution {
    pub fn hamming_distance(x: i32, y: i32) -> i32 {
        let mut ret = 0i32;
        
        for i in 0..32 {
            if ((x>>i) & 1) != ((y>>i) & 1) {
                ret += 1;
            }
        }
        
        return ret;
    }
}",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
362004733,rust,1 month,1593874538,Accepted,32 ms,/submissions/detail/362004733/,Not Pending,Ugly Number II,2.1 MB,"impl Solution {
    pub fn nth_ugly_number(n: i32) -> i32 {
        use std::collections::BinaryHeap;
        let mut heap = BinaryHeap::new();
        heap.push(-1i64);

        let mut prev = 0i64;
        for i in 0..n {
            let mut top = 0i64;
            
            loop {
                top = heap.pop().unwrap();
                if top != prev {
                    break;
                }
            }
            
            // println!(""{}"", top);
            heap.push(top*2);
            heap.push(top*3);
            heap.push(top*5);
            prev = top;
        }
        return (prev * -1i64) as i32;
    }
}",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
362003995,rust,1 month,1593874400,Wrong Answer,N/A,/submissions/detail/362003995/,Not Pending,Ugly Number II,N/A,"impl Solution {
    pub fn nth_ugly_number(n: i32) -> i32 {
        use std::collections::BinaryHeap;
        let mut heap = BinaryHeap::new();
        heap.push(-1i64);

        let mut prev = 0i64;
        for i in 0..n {
            let mut top = 0i64;
            
            loop {
                let cur_top = heap.pop().unwrap();
                if cur_top != prev {
                    top = cur_top;
                    break;
                }
            }
            
            // println!(""{}"", top);
            heap.push(top*2);
            heap.push(top*3);
            heap.push(top*5);
            prev = top;
        }
        return (heap.pop().unwrap() * -1i64) as i32;
    }
}
361549548,cpp,"1 month, 1 week",1593784481,Accepted,408 ms,/submissions/detail/361549548/,Not Pending,4Sum,36.7 MB,"class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        map<int, vector<pair<int,int>> > comb;
        
        const int N = nums.size();
        sort(nums.begin(), nums.end());
        for(int i = 0 ; i < N; ++i) {
            for(int j = i+1 ; j < N ; ++j) {
                int s = nums[i] + nums[j];
                if(comb.count(s) == 0) comb[s].clear();
                comb[s].push_back(make_pair(i, j));
            }
        }
        
        set< vector<int> > cand;
        for(auto &[k, v]: comb) {
            int l = target-k;
            if(comb.count(l) == 0) continue;
            
            for(auto &x: comb[k]) {
                for(auto &y: comb[l]) {
                    if(x.first == y.first) continue;
                    if(x.first == y.second) continue;
                    if(x.second == y.first) continue;
                    if(x.second == y.second) continue;
                    
                    vector<int> v;
                    v.push_back(nums[x.first]);
                    v.push_back(nums[x.second]);
                    v.push_back(nums[y.first]);
                    v.push_back(nums[y.second]);
                    sort(v.begin(), v.end());
                    cand.insert(v);                    
                }
            }
        }
        
        vector<vector<int>> ret;
        
        for(auto &x: cand) {
            ret.push_back(x);
        }
        
        return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
361543730,python,"1 month, 1 week",1593783163,Accepted,48 ms,/submissions/detail/361543730/,Not Pending,Prison Cells After N Days,12.7 MB,"class Solution(object):
    def prisonAfterNDays(self, cells, N):
        """"""
        :type cells: List[int]
        :type N: int
        :rtype: List[int]
        """"""
        
        def next(C):
            return tuple([0] + [ int(C[i-1] == C[i+1]) for i in range(1,7)] + [0])
        

        C = tuple(cells[:])
        cache = {}
        i = 0
        while True:
            if i == N:
                return C
            if C in cache:
                break
            cache[C] = i
            C = next(C)
            i += 1
        
        for _ in range((N-i) % (i-cache[C])):
            # print(C)
            C = next(C)
        # print("""")
        return C
        
            
        ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
361301725,python,"1 month, 1 week",1593730796,Accepted,28 ms,/submissions/detail/361301725/,Not Pending,Binary Tree Level Order Traversal II,13.7 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def levelOrderBottom(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        from collections import  defaultdict
        B = defaultdict( list )
        
        def go(node, depth):
            if node is None: 
                return
            go(node.left, depth+1)
            go(node.right, depth+1)
            B[depth].append(node.val)
        
        go(root, 0)
        
        if len(B.keys()) == 0:
            return []
        
        maxi = max(B.keys())
        return [ B[i] for i in range(maxi+1) ][::-1]
        
        
        ",1111111111111111111111111111111111
361301469,python,"1 month, 1 week",1593730748,Runtime Error,N/A,/submissions/detail/361301469/,Not Pending,Binary Tree Level Order Traversal II,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def levelOrderBottom(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        from collections import  defaultdict
        B = defaultdict( list )
        
        def go(node, depth):
            if node is None: 
                return
            go(node.left, depth+1)
            go(node.right, depth+1)
            B[depth].append(node.val)
        
        go(root, 0)
        
        maxi = max(B.keys())
        return [ B[i] for i in range(maxi+1) ][::-1]
        
        
        ",1000000000000000000000000000000000
360686386,cpp,"1 month, 1 week",1593612220,Accepted,4 ms,/submissions/detail/360686386/,Not Pending,Arranging Coins,5.9 MB,"class Solution {
public:
    int arrangeCoins(int n) {
        long long tot = 0;
        for(int i = 1 ; ; ++i) {
            tot += i;
            if( tot > n) {
                return i-1;
            }
        }
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
360685201,cpp,"1 month, 1 week",1593611960,Accepted,36 ms,/submissions/detail/360685201/,Not Pending,Coin Change 2,17.4 MB,"int N;
int M;
int cache[510][5050];
vector<int> C;

int solve(int i, int amt) {
    if(amt>M) {
        return 0;
    }

    if( i == N ) {
        return amt == M;
    } 

    int &ret = cache[i][amt];
    if(ret != -1) return ret;
    
    ret = 0;
    
    ret += solve(i+1, amt);
    ret += solve(i, amt + C[i]);
    return ret;
}


class Solution {
public:
    int change(int amount, vector<int>& coins) {
        memset(cache, -1, sizeof cache);
        C = coins;
        N = coins.size();
        M = amount;
        return solve(0, 0);
    }
};",111111111111111111111111111
360683523,cpp,"1 month, 1 week",1593611590,Accepted,64 ms,/submissions/detail/360683523/,Not Pending,Queue Reconstruction by Height,12.7 MB,"class Solution {
public:
    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {
        int N = people.size();
        vector<vector<int>> ret(N);
        multiset<int> P;
        for(int i=0;i<N;++i) P.insert(i);
        for(int i=0;i<N;++i) people[i][1] *= -1;
        sort(people.begin(), people.end());   
        
        for(int i=0;i<N;++i) {
            int h = people[i][0];
            int k = -people[i][1];
            
            auto it = P.begin();
            advance(it, k);
           
            ret[*it] = people[i];
            ret[*it][1] *= -1;
            
            P.erase(it);
        }
        return ret;
    }
};",1111111111111111111111111111111111111
360679357,cpp,"1 month, 1 week",1593610710,Accepted,596 ms,/submissions/detail/360679357/,Not Pending,Random Pick with Weight,40.4 MB,"class Solution {
private:
    int tot = 0;
    vector<int> S;
public:
    Solution(vector<int>& w) {
        tot = 0;
        for(auto x : w) {
            tot += x;
            S.push_back(tot);
        }
    }
    
    int pickIndex() {
        int r = rand() % tot + 1;
        int i = 0;
        int sum = 0;
        while( i-1 < int(S.size()) && r > S[i]) i++;
        return i;        
   }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(w);
 * int param_1 = obj->pickIndex();
 */",111111111111111111111111111111111111111111111111111111111
360678189,cpp,"1 month, 1 week",1593610454,Wrong Answer,N/A,/submissions/detail/360678189/,Not Pending,Random Pick with Weight,N/A,"class Solution {
private:
    int tot = 0;
    vector<int> S;
public:
    Solution(vector<int>& w) {
        tot = 0;
        for(auto x : w) {
            tot += x;
            S.push_back(tot);
        }
    }
    
    int pickIndex() {
        int r = rand() % tot + 1;
        int i = 0;
        int sum = 0;
        while( i-1 < S.size() && r > S[i]) i++;
        return i;        
   }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(w);
 * int param_1 = obj->pickIndex();
 */",111100000001000000000000000010010100001010001101110011011
360676924,cpp,"1 month, 1 week",1593610170,Runtime Error,N/A,/submissions/detail/360676924/,Not Pending,Random Pick with Weight,N/A,"int tot = 0;
int cache[int(1e5)+100];

class Solution {
public:
    Solution(vector<int>& w) {
        tot = 0;
        for(int i = 0 ; i < w.size(); ++i) {
            for(int j=0;j<w[i];++j) {
                cache[tot++] = i; 
            }
        }
        random_shuffle(cache, cache+tot);
    }
   
    int pickIndex() {
        return cache[rand() % tot];
   }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(w);
 * int param_1 = obj->pickIndex();
 */",111111111111111111111111111111111111111111111111111111100
360675551,cpp,"1 month, 1 week",1593609867,Wrong Answer,N/A,/submissions/detail/360675551/,Not Pending,Random Pick with Weight,N/A,"class Solution {
private:
    int tot = 0;
    vector<int> S;
public:
    Solution(vector<int>& w) {
        tot = 0;
        for(auto x : w) {
            tot += x;
            S.push_back(tot);
        }
    }
    
    int pickIndex() {
        int r = rand() % tot + 1;
        int i = 0;
        int sum = 0;
        while( i < S.size() && S[i] <= r) i++;
        return i-1;
    }
};

/**
 * Your Solution object will be instantiated and called as such:
 * Solution* obj = new Solution(w);
 * int param_1 = obj->pickIndex();
 */",111000000000000000000000000000000000000000000000000000001
360673033,python,"1 month, 1 week",1593609328,Accepted,176 ms,/submissions/detail/360673033/,Not Pending,Reverse String,19.7 MB,"class Solution(object):
    def reverseString(self, s):
        """"""
        :type s: List[str]
        :rtype: None Do not return anything, modify s in-place instead.
        """"""
        i, j = 0, len(s)-1
        
        while i < j:
            s[i], s[j] = s[j], s[i]
            i += 1
            j -= 1
            
        return s",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
360672627,cpp,"1 month, 1 week",1593609248,Accepted,4 ms,/submissions/detail/360672627/,Not Pending,Two City Scheduling,8.4 MB,"int N;
vector<vector<int>> C;
int cache[110][110];

int solve(int a, int b) {
    if(a > N) return 987654321;
    if(b > N) return 987654321;
    if(a == N && b == N) return 0;
    
    int &ret = cache[a][b];
    if(ret != -1) return ret;
    
    ret = 98765431;
    ret = min(ret, solve(a+1, b) + C[a+b][0]);
    ret = min(ret, solve(a, b+1) + C[a+b][1]);
    return ret;
}
class Solution {
public:
    int twoCitySchedCost(vector<vector<int>>& costs) {
        N = costs.size() / 2;
        C = costs;
        memset(cache, -1, sizeof cache);
        return solve(0, 0);
    }
};",1111111111111111111111111111111111111111111111111
360670998,python,"1 month, 1 week",1593608891,Accepted,32 ms,/submissions/detail/360670998/,Not Pending,Delete Node in a Linked List,13.2 MB,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """"""
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """"""
        node.val = node.next.val
        node.next = node.next.next",11111111111111111111111111111111111111111
360670369,python,"1 month, 1 week",1593608746,Accepted,20 ms,/submissions/detail/360670369/,Not Pending,Invert Binary Tree,12.9 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def invertTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: TreeNode
        """"""
        
        def go(node):
            if node == None: return None
            node.left, node.right = go(node.right), go(node.left)
            return node
        
        return go(root)",11111111111111111111111111111111111111111111111111111111111111111111
360670100,python,"1 month, 1 week",1593608685,Wrong Answer,N/A,/submissions/detail/360670100/,Not Pending,Invert Binary Tree,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def invertTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: TreeNode
        """"""
        
        def go(node):
            if node == None: return None
            node.left, node.right = node.right, node.left
            return node
        
        return go(root)",01111010000000000000000000000000000000000000000000000000000000000000
359786843,rust,"1 month, 1 week",1593428375,Accepted,0 ms,/submissions/detail/359786843/,Not Pending,Destination City,2.1 MB,"impl Solution {
    pub fn dest_city(paths: Vec<Vec<String>>) -> String {
        use std::collections::HashSet;
        let mut in_city : HashSet<String> = HashSet::new();

        let mut out_city : Vec<String> = vec![];
        
        for v in paths.iter() {
            in_city.insert(v[0].to_string());
            out_city.push(v[1].to_string());
        }
        
        let mut ans : String = """".to_string();
        
        for c in out_city.iter() {
            if !in_city.contains(c) {
                ans = c.to_string();
            }
        } 
        
        ans
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
359784631,rust,"1 month, 1 week",1593427728,Accepted,0 ms,/submissions/detail/359784631/,Not Pending,Maximum 69 Number,2.1 MB,"impl Solution {
    pub fn maximum69_number (num: i32) -> i32 {
        let mut vec : Vec<i32> = vec![];
        let mut n = num;
        
        loop {
            vec.push(n%10);
            n /= 10;
            
            if n == 0 {
                break;
            }
        }
        
        vec.reverse();
        
        for i in 0..vec.len() {
            if vec[i] == 6 {
                vec[i] = 9;
                break
            }
        }
        
        let mut ret = 0i32;
        for v in &vec {
            ret *= 10;
            ret += v;
        }
        ret
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
359783084,rust,"1 month, 1 week",1593427299,Accepted,0 ms,/submissions/detail/359783084/,Not Pending,Cells with Odd Values in a Matrix,2.1 MB,"impl Solution {
    pub fn odd_cells(n: i32, m: i32, indices: Vec<Vec<i32>>) -> i32 {
        let mut D = [ [0i32 ; 100] ; 100 ];
        
        for v in &indices {
            let r = v[0] as usize;
            let c = v[1] as usize;
            
            for j in 0..m {
                D[r][j as usize] += 1;
            }
            
            for i in 0..n {
                D[i as usize][c] += 1;
            }
        }
        
        let mut ret = 0i32;
        for i in 0..n {
            for j in 0..m {
                if D[i as usize][j as usize] % 2 == 1 {
                    ret += 1;
                }
            }
        }
        
        ret
    }
}",11111111111111111111111111111111111111111111
359781987,rust,"1 month, 1 week",1593426981,Accepted,0 ms,/submissions/detail/359781987/,Not Pending,Convert Binary Number in a Linked List to Integer,2.1 MB,"// Definition for singly-linked list.
// #[derive(PartialEq, Eq, Clone, Debug)]
// pub struct ListNode {
//   pub val: i32,
//   pub next: Option<Box<ListNode>>
// }
// 
// impl ListNode {
//   #[inline]
//   fn new(val: i32) -> Self {
//     ListNode {
//       next: None,
//       val
//     }
//   }
// }
impl Solution {
    pub fn get_decimal_value(head: Option<Box<ListNode>>) -> i32 {
        
        
        let mut ret = 0i32;
        let mut next = head;
        
        while let Some(node) = next { 
            ret *= 2;
            ret += node.val;
            next = node.next;
        }
        
        ret        
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
359402012,rust,"1 month, 1 week",1593350650,Accepted,0 ms,/submissions/detail/359402012/,Not Pending,Minimum Time Visiting All Points,2 MB,"impl Solution {
    pub fn min_time_to_visit_all_points(P: Vec<Vec<i32>>) -> i32 {
        let N = P.len();
        
        let mut ret = 0i32;
        
        for i in 1..N {
            let mut dx = (P[i][0] - P[i-1][0]).abs();
            let mut dy = (P[i][1] - P[i-1][1]).abs();
            ret += dx.max(dy); 
        }
        
        return ret;
    }
}",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
359400903,python,"1 month, 1 week",1593350375,Accepted,276 ms,/submissions/detail/359400903/,Not Pending,Range Sum of BST,29.1 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def rangeSumBST(self, root, L, R):
        """"""
        :type root: TreeNode
        :type L: int
        :type R: int
        :rtype: int
        """"""
        
        def go(node, L, R):
            if node is None:
                return 0
            
            ret = 0
            if node.val > L: ret += go(node.left, L, R)
            if node.val < R: ret += go(node.right, L, R)
            if L <= node.val  and node.val <= R: ret += node.val
                
            return ret
        
    
        return go(root, L, R)",111111111111111111111111111111111111111111
359399582,cpp,"1 month, 1 week",1593350014,Accepted,428 ms,/submissions/detail/359399582/,Not Pending,Parallel Courses II,8.1 MB,"int N, K;

int G[17];
int cache[1<<17];

int solve(int status) {
    if(status == (1<<N)-1) {
        return 0;
    } 
    
    int &ret = cache[status];
    
    if(ret!=-1) {
        return ret;
    }
    ret = 987654321;
    int avail = 0;
    
    for(int i = 0 ; i < N ; ++i) {
        if( ((status >> i)&1) == 0) {
            avail |= (1<<i);
        }
    }

    int next = avail;
    
    while(next > 0) {
        if(__builtin_popcount(next) <= K) {

            bool ok = true;
            for(int i = 0 ; i < N ; ++i) {
                if(((next >> i) & 1) == 0) continue;
                if((status & G[i]) != G[i]) {
                    ok = false;
                    break;
                }
            }
            
            if(ok)
                ret = min(ret, solve(status|next)+1);
        }
        
        next = (next - 1) & avail;    
    }

    return ret;
}

class Solution {
public:
    int minNumberOfSemesters(int n, vector<vector<int>>& dependencies, int k) {
        N = n;
        K = k;
        memset(G, 0, sizeof G);
        
        for(int i=0;i<dependencies.size(); ++i) {
            G[dependencies[i][1]-1] |= (1 << (dependencies[i][0]-1));
        }
    
        memset(cache, -1, sizeof cache);
        
        return solve(0);
        
    }
};",11111111111111111111111111111111111111111111111111111
359398587,cpp,"1 month, 1 week",1593349763,Wrong Answer,N/A,/submissions/detail/359398587/,Not Pending,Parallel Courses II,N/A,"int N, K;

int G[17];
int cache[1<<17];

int solve(int status) {
    if(status == (1<<N)-1) {
        return 0;
    } 
    
    int &ret = cache[status];
    
    if(ret!=-1) {
        return ret;
    }
    ret = 987654321;
    int avail = 0;
    
    for(int i = 0 ; i < N ; ++i) {
        if( ((status >> i)&1) == 0) {
            avail |= (1<<i);
        }
    }

    int next = avail;
    
    while(next > 0) {
        if(__builtin_popcount(next) <= K) {

            bool ok = true;
            for(int i = 0 ; i < N ; ++i) {
                if(((next >> i) & 1) == 0) continue;
                if((status & G[i]) != G[i]) {
                    ok = false;
                    break;
                }
            }
            
            if(ok)
                ret = min(ret, solve(status|next)+1);
        }
        
        next = (next - 1) & avail;    
    }

    return ret;
}

class Solution {
public:
    int minNumberOfSemesters(int n, vector<vector<int>>& dependencies, int k) {
        N = n;
        K = k;
        memset(G, 0, sizeof G);
        
        for(int i=0;i<dependencies.size(); ++i) {
            G[dependencies[i][0]-1] = (1 << (dependencies[i][1]-1));
        }
    
        memset(cache, -1, sizeof cache);
        
        return solve(0);
        
    }
};",11111111101111111111110101111100101101111000100110100
359379472,rust,"1 month, 1 week",1593344599,Wrong Answer,N/A,/submissions/detail/359379472/,Not Pending,Parallel Courses II,N/A,"impl Solution {
    pub fn min_number_of_semesters(n: i32, D: Vec<Vec<i32>>, k: i32) -> i32 {

        let mut G : Vec<Vec<usize>> = Vec::with_capacity(200);
        
        let N = n as usize;
        let K = k as usize;

        for i in 0..(N+1) {
            G.push(vec!());
        }
        
        let mut indegree: [i32; 20] = [0; 20];
        
        for e in D {
            G[e[0] as usize].push(e[1] as usize);
            indegree[e[1] as usize] += 1;
        }
        
        let mut nsem = 0;
        let mut ntook = 0;
        
        
        loop {
            nsem += 1;
            
            let mut will_take : Vec<usize> = Vec::new();
            
            for i in 1..(N+1) {
                if indegree[i] == 0 {
                    will_take.push(i);
                }
                if will_take.len() >= K {
                    break;
                }
            }
            
            for v in &will_take {
                ntook += 1;
                indegree[*v] = -1;
                for t in &G[*v] {
                    indegree[*t] -= 1;
                }
            }
            if ntook == N {
                break;
            }
        }
        return nsem;
    }
}",11111111111111111111111011110111111111111111111111111
359373035,rust,"1 month, 1 week",1593342777,Accepted,4 ms,/submissions/detail/359373035/,Not Pending,Longest Subarray of 1's After Deleting One Element,3.7 MB,"impl Solution {
    pub fn longest_subarray(nums: Vec<i32>) -> i32 {
        let mut L: [i32; 100010] = [0; 100010];
        let mut R: [i32; 100010] = [0; 100010];
        let N = nums.len();
        
        let mut A: [i32; 100010] = [0; 100010];
        
        for i in 0..N {
            A[i+1] = nums[i];
        }
        
        for i in 1..(N+1) {
            if A[i] == 1 {
                L[i] += L[i-1] + A[i];
            }
        }
        
        for i in (1..(N+1)).rev() {
            if A[i] == 1 {
                R[i] += R[i+1] + A[i];            
            }
        }


        let mut maxi = 0i32;
        for i in 1..(N+1) {
            if maxi < L[i-1] + R[i+1] {
                maxi = L[i-1] + R[i+1];
            }
        }
        
        
        return maxi;   
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111111
359370150,rust,"1 month, 1 week",1593341919,Accepted,0 ms,/submissions/detail/359370150/,Not Pending,The kth Factor of n,2 MB,"impl Solution {
    pub fn kth_factor(n: i32, k: i32) -> i32 {
        let mut j = 0;
        for i in 1..(n+1) {
            if n % i == 0 {
                j += 1;
                if j == k {
                    return i;
                }
            }
        }
        return -1;
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
359369475,rust,"1 month, 1 week",1593341715,Accepted,0 ms,/submissions/detail/359369475/,Not Pending,Average Salary Excluding the Minimum and Maximum Salary,1.9 MB,"impl Solution {
    pub fn average(salary: Vec<i32>) -> f64 {
        let mut total = 0f64;
        let mut maxi = 0f64;
        let mut mini = 1e7f64;
        
        for x in &salary {
            total += (*x as f64);
            if maxi < *x  as f64 {
                maxi = *x as f64;
            }
            if mini > *x  as f64 {
                mini = *x as f64;
            }

        }
        
        return (total - maxi - mini) / ((salary.len()-2) as f64);
    }
}",1111111111111111111111111111111111111111111
357823366,python,"1 month, 2 weeks",1593012770,Accepted,76 ms,/submissions/detail/357823366/,Not Pending,Count Complete Tree Nodes,28.7 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def countNodes(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        
        def go(x):
            if x == None: return 0
            return 1 + go(x.left) + go(x.right)

        return go(root)",111111111111111111
357822727,python,"1 month, 2 weeks",1593012647,Accepted,20 ms,/submissions/detail/357822727/,Not Pending,Unique Binary Search Trees,12.8 MB,"class Solution(object):
    def numTrees(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""    
        def f(n):
            return 1 if n <= 0 else n * f(n-1)
        
        return f(2*n) // (f(n) * f(n+1))
    
    ",1111111111111111111
357249738,rust,"1 month, 2 weeks",1592887710,Accepted,0 ms,/submissions/detail/357249738/,Not Pending,To Lower Case,2.2 MB,"impl Solution {
    pub fn to_lower_case(str: String) -> String {
        str.to_lowercase()       
    }
}",11111111
357249431,rust,"1 month, 2 weeks",1592887654,Accepted,8 ms,/submissions/detail/357249431/,Not Pending,Ransom Note,2.1 MB,"impl Solution {
    pub fn can_construct(ransom_note: String, magazine: String) -> bool {
        use std::collections::HashMap;
        
        let mut map : HashMap<char,i32> = HashMap::new();
        let mut nz = 0i32;
        for c in ransom_note.chars() {
            if let Some(x) = map.get_mut(&c) {
                *x += 1;
            } else {
                map.insert(c, 1);
                nz += 1;
            }
        }
        
        for c in magazine.chars() {
            if let Some(x) = map.get_mut(&c) {
                *x -= 1;
                
                if *x == 0 {
                    nz -= 1;
                }
            }
        }
        return nz == 0i32;
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
357240726,rust,"1 month, 2 weeks",1592886046,Accepted,0 ms,/submissions/detail/357240726/,Not Pending,Defanging an IP Address,2 MB,"impl Solution {
    pub fn defang_i_paddr(address: String) -> String {
        address.replace(""."",""[.]"")   
    }
}",11111111111111111111111111111111111111111111111111111111111111
357239381,rust,"1 month, 2 weeks",1592885796,Accepted,0 ms,/submissions/detail/357239381/,Not Pending,Create Target Array in the Given Order,2.1 MB,"impl Solution {
    pub fn create_target_array(nums: Vec<i32>, index: Vec<i32>) -> Vec<i32> {
        let mut ret : Vec<i32> = Vec::new();
        
        for (&n,&i) in nums.iter().zip(index.iter()) {
            ret.insert(i as usize, n);
        }
        return ret;
    }
}",11111111111111111111111111111111111111111111
357236782,rust,"1 month, 2 weeks",1592885337,Accepted,0 ms,/submissions/detail/357236782/,Not Pending,Number of Steps to Reduce a Number to Zero,2.1 MB,"impl Solution {
    pub fn number_of_steps (num: i32) -> i32 {
        let mut n = num;
        let mut steps = 0i32;
        
        while n > 0 {
            n = match (n % 2 == 0) {
                true => n / 2,
                false => n - 1
            };
            steps += 1;
        }
        
        steps
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356989304,python,"1 month, 2 weeks",1592835675,Accepted,36 ms,/submissions/detail/356989304/,Not Pending,Single Number II,15.1 MB,"class Solution(object):
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        from collections import defaultdict
        D = defaultdict(int)
        for x in nums:
            D[x] += 1
        
        for x in nums:
            if D[x] == 1:
                return x",11111111111
356803706,rust,"1 month, 2 weeks",1592792910,Accepted,0 ms,/submissions/detail/356803706/,Not Pending,Fibonacci Number,2.1 MB,"impl Solution {
    pub fn fib(n: i32) -> i32 {
        let mut cache = vec![-1; 31 as usize];
        cache[0] = 0;
        cache[1] = 1;
        let mut N = n as usize;
        for i in 2..(N+1) {
            cache[i] = cache[i-1] + cache[i-2];
        }
        return cache[N];
    }
}",1111111111111111111111111111111
356803307,rust,"1 month, 2 weeks",1592792825,Runtime Error,N/A,/submissions/detail/356803307/,Not Pending,Fibonacci Number,N/A,"impl Solution {
    pub fn fib(n: i32) -> i32 {
        let mut cache = vec![-1; (n+1) as usize];
        cache[0] = 0;
        cache[1] = 1;
        
        let mut N = n as usize;
        for i in 2..(N+1) {
            cache[i] = cache[i-1] + cache[i-2];
        }
        return cache[N];
    }
}",1110000000000000000000000000000
356800939,rust,"1 month, 2 weeks",1592792358,Accepted,4 ms,/submissions/detail/356800939/,Not Pending,Binary Prefix Divisible By 5,2.4 MB,"impl Solution {
    pub fn prefixes_div_by5(a: Vec<i32>) -> Vec<bool> {
        let mut ret : Vec<bool> = Vec::new();
        
        let mut sum = 0i32;
        for v in a {
            sum *= 2;
            sum += v;
            sum %= 5;
            ret.push(sum%5==0);
        }
        return ret;
    }
}",111111111111111111111111
356800604,rust,"1 month, 2 weeks",1592792294,Wrong Answer,N/A,/submissions/detail/356800604/,Not Pending,Binary Prefix Divisible By 5,N/A,"impl Solution {
    pub fn prefixes_div_by5(a: Vec<i32>) -> Vec<bool> {
        let mut ret : Vec<bool> = Vec::new();
        
        let mut sum = 0i32;
        for v in a {
            sum *= 2;
            sum += v;
            ret.push(sum%5==0);
        }
        return ret;
    }
}",111111100000000000000000
356799270,rust,"1 month, 2 weeks",1592792016,Accepted,0 ms,/submissions/detail/356799270/,Not Pending,Maximum Product of Two Elements in an Array,2 MB,"impl Solution {
    pub fn max_product(nums: Vec<i32>) -> i32 {
        let mut A = nums;
        A.sort();
        let N = A.len();
        return (A[N-1]-1) * (A[N-2]-1);
    }
}",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356798286,rust,"1 month, 2 weeks",1592791823,Accepted,0 ms,/submissions/detail/356798286/,Not Pending,Is Subsequence,2.2 MB,"impl Solution {
    pub fn is_subsequence(s: String, t: String) -> bool {
        let mut i = 0;
        let mut j = 0;
        
        let vec_s: Vec<char> = s.chars().collect();
        let vec_t: Vec<char> = t.chars().collect();
        
        while i < vec_s.len() && j < vec_t.len() {
            if vec_s[i] == vec_t[j] {
                i += 1;
                j += 1;
            } else {
                j += 1;
            }
        }
        
        return i == s.len();
    }
}",111111111111111
356797254,rust,"1 month, 2 weeks",1592791610,Accepted,0 ms,/submissions/detail/356797254/,Not Pending,Play with Chips,2 MB,"impl Solution {
    pub fn min_cost_to_move_chips(chips: Vec<i32>) -> i32 {
        let mut ret = 2147483647i32;
        let N = chips.len();
        
        for i in 0..N {
            let mut nmoves = 0i32;
            for j in 0..N {
                nmoves += (chips[i]-chips[j]).abs() % 2;
            }
            if ret > nmoves {
                ret = nmoves;
            }
        }
        return ret;
    }
}",11111111111111111111111111111111111111111111111111
356793664,python,"1 month, 2 weeks",1592790832,Accepted,24 ms,/submissions/detail/356793664/,Not Pending,Largest Number At Least Twice of Others,12.7 MB,"class Solution(object):
    def dominantIndex(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        for i, v1 in enumerate(nums):
            ok = True
            for j, v2 in enumerate(nums):
                if i == j: continue
                if v1 < 2*v2: 
                    ok = False
                    break
                    
            if ok: return i
        return -1",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356792396,python,"1 month, 2 weeks",1592790540,Accepted,476 ms,/submissions/detail/356792396/,Not Pending,Monotonic Array,17.9 MB,"class Solution(object):
    def isMonotonic(self, A):
        """"""
        :type A: List[int]
        :rtype: bool
        """"""
        return sorted(A) == A or sorted(A)[::-1] == A",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356791919,python,"1 month, 2 weeks",1592790441,Accepted,20 ms,/submissions/detail/356791919/,Not Pending,Kids With the Greatest Number of Candies,12.6 MB,"class Solution(object):
    def kidsWithCandies(self, candies, extraCandies):
        """"""
        :type candies: List[int]
        :type extraCandies: int
        :rtype: List[bool]
        """"""
        maxi = max(candies)
        
        return [ x + extraCandies >= maxi for x in candies]",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356791294,python,"1 month, 2 weeks",1592790314,Accepted,336 ms,/submissions/detail/356791294/,Not Pending,Check If a String Contains All Binary Codes of Size K,91.9 MB,"class Solution(object):
    def hasAllCodes(self, s, k):
        """"""
        :type s: str
        :type k: int
        :rtype: bool
        """"""
        return len(set([s[i:i+k] for i in range(len(s)-k+1)])) == 2**k ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356789851,python,"1 month, 2 weeks",1592790015,Accepted,44 ms,/submissions/detail/356789851/,Not Pending,Shuffle the Array,13 MB,"class Solution(object):
    def shuffle(self, A, n):
        """"""
        :type nums: List[int]
        :type n: int
        :rtype: List[int]
        """"""
        
        return [ A[i//2] if i % 2 == 0 else A[i//2+n] for i in range(2*n) ]",11111111111111111111111111111111111111111111111111111
356710204,cpp,"1 month, 2 weeks",1592774227,Accepted,36 ms,/submissions/detail/356710204/,Not Pending,Max Chunks To Make Sorted II,15.9 MB,"class Solution {
public:
    int maxChunksToSorted(vector<int>& A) {
        vector< pair<int,int> > P;
        const int N = A.size();

        for(int i=0;i<N;++i) {
            P.push_back(make_pair(A[i],i));
        }
        
        sort(P.begin(), P.end());
        
        vector<int> B(N, 0);
        
        for(int i=0;i<N;++i) {
            B[P[i].second] = i;
        }
        
        set<int> S;
        
        int ret = 0;
        int p = 0;
        for(int i=0;i<N;++i) {
            S.insert(B[i]);
            if(*S.begin() == p && *S.rbegin() == i) {
                ret++;
                p = i+1;
                S.clear();
            }
       }
       return ret;
    
  }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
356706236,cpp,"1 month, 2 weeks",1592773507,Wrong Answer,N/A,/submissions/detail/356706236/,Not Pending,Max Chunks To Make Sorted II,N/A,"class Solution {
public:
    int maxChunksToSorted(vector<int>& A) {
       vector<int> sorted = A;
        sort(sorted.begin(), sorted.end());
        multiset<int> S;
        const int N = A.size();
        
        int ret = 0;
        int p = 0;
        for(int i=0;i<N;++i) {
            S.insert(A[i]);
            if(*S.begin() == sorted[p] && *S.rbegin() == sorted[i]) {
                ret++;
                p = i+1;
                S.clear();                
            }
       }
       return ret;
    
  }
};",1111101111111110011011011011111111111111111111111111111111111111111111111111111101100101101100101000101101111101101111110100100111111111101
356521212,cpp,"1 month, 2 weeks",1592734167,Accepted,796 ms,/submissions/detail/356521212/,Not Pending,Avoid Flood in The City,117.5 MB,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        set<int> Z; 
        
        vector<int> ret(R.size(),987654321);
        map<int,int> danger;
        
        for(int i = 0 ; i < R.size() ; ++i) {
            if(R[i] == 0) {
                Z.insert(i);
                continue;
            }
            
            ret[i] = -1;
            if(danger.count(R[i]) == 0) {
                danger[R[i]] = i;
                continue;
            }
            else {
                if(Z.empty()) {
                    ret.clear();
                    return ret;
                }
                auto it = Z.upper_bound(danger[R[i]]);
                
                if(it == Z.end()) {
                    ret.clear();
                    return ret;
                }
                ret[*it] = R[i];
                Z.erase(it);
                danger[R[i]] = i;
            }
        }
            
        return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111111111
356520525,cpp,"1 month, 2 weeks",1592733963,Wrong Answer,N/A,/submissions/detail/356520525/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        set<int> Z; 
        
        vector<int> ret(R.size(),987654321);
        map<int,int> danger;
        
        for(int i = 0 ; i < R.size() ; ++i) {
            if(R[i] == 0) {
                Z.insert(i);
                continue;
            }
            
            ret[i] = -1;
            if(danger.count(R[i]) == 0) {
                danger[R[i]] = i;
                continue;
            }
            else {
                if(Z.empty()) {
                    ret.clear();
                    return ret;
                }
                auto it = Z.upper_bound(danger[R[i]]);
                
                if(it == Z.end()) {
                    ret.clear();
                    return ret;
                }
                ret[*it] = R[i];
                Z.erase(it);
                danger.erase(R[i]);
            }
        }
            
        return ret;
    }
};",111111111111110111111111111111111111111111111111111111111111111111111111111111
356519769,cpp,"1 month, 2 weeks",1592733738,Wrong Answer,N/A,/submissions/detail/356519769/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        deque<int> Z; 
        
        vector<int> ret(R.size(),987654321);
        map<int,int> danger;
        
        for(int i = 0 ; i < R.size() ; ++i) {
            if(R[i] == 0) {
                Z.push_back(i);
                continue;
            }
            
            ret[i] = -1;
            if(danger.count(R[i]) == 0) {
                danger[R[i]] = i;
                continue;
            }
            else {
                if(Z.empty()) {
                    ret.clear();
                    return ret;
                }
                if(Z.front() < danger[R[i]]) {
                    ret.clear();
                    return ret;
                }
                ret[Z.front()] = R[i];
                Z.pop_front();
                danger.erase(R[i]);
            }
        }
            
        return ret;
    }
};",111111111001011111111111110111111101111101110111111001101111011111111111111101
356518875,cpp,"1 month, 2 weeks",1592733474,Wrong Answer,N/A,/submissions/detail/356518875/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        deque<int> Z; 
        
        vector<int> ret(R.size(),987654321);
        set<int> danger;
        
        for(int i = 0 ; i < R.size() ; ++i) {
            if(R[i] == 0) {
                Z.push_back(i);
                continue;
            }
            
            ret[i] = -1;
            if(danger.find(R[i]) == danger.end()) {
                danger.insert(R[i]);
                continue;
            }
            else {
                if(Z.empty()) {
                    ret.clear();
                    return ret;
                }
                
                ret[Z.front()] = R[i];
                Z.pop_front();
            }
        }
            
        return ret;
    }
};",111111110001010011101111010101111100101101100101011001101101000000100110111101
356515102,cpp,"1 month, 2 weeks",1592732347,Time Limit Exceeded,N/A,/submissions/detail/356515102/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, vector<int> > where;
        
        for(int i = int(R.size())-1 ; i >= 0; --i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].push_back(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        
        for(int i = 0 ; i < R.size(); ++i) {
            // cout << i << endl;
            if(R[i]==0) { 
                int closest = -1;
                // cout << D.size() << endl;
                for(const int &x : D) {
                    if(where[x].empty()) continue;
                    int a = where[x].back();
                    if(closest == -1 ) {
                        closest = x;
                    } else {
                        int b = where[closest].back();
                        if(a < b) {
                            closest = x;
                        }
                    }
                    // cout << i << "" and "" << x << "" "" << closest << endl;
                    // cout << closest << endl;
                }
                if(closest == -1) closest = 1;
                // cout << ""closest"" << "" "" << closest << endl;
                ret.push_back(closest);
                if(D.find(closest) != D.end()) D.erase(closest);
            }
            else {
                if(!where[R[i]].empty()) where[R[i]].pop_back();
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111110000
356512150,cpp,"1 month, 2 weeks",1592731509,Wrong Answer,N/A,/submissions/detail/356512150/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        vector<int> stk;
        
        vector<int> V = rains;
        reverse(V.begin(), V.end());
        for(const int &x : V) {
            if(x!=0) stk.push_back(x);
        }
            
        reverse(V.begin(), V.end());
        
        vector<int> ret;
        unordered_set<int> filled;
        for(const int &x: V) {
            //cout << x << endl;
            if(x != 0) {
                if(filled.find(x) != filled.end()) {
                    ret.clear();
                    return ret;
                }
                if(!stk.empty()) stk.pop_back();
                ret.push_back(-1);
                filled.insert(x);
            } else {
                // cout << stk.size() << "" "" << stk.top() << endl;
                // stk.pop_back();
                int y = stk.back();
                ret.push_back(y);
                if(filled.find(y) != filled.end()) {
                    filled.erase(y);
                }                
            }
            //cout << ""vec ""; for(const int &i : ret) cout << i << "" ""; cout  << endl;
            //cout << ""set ""; for(const int &i : filled) cout << i << "" ""; cout  << endl;
            //cout << ""stk ""; for(const int &i : stk) cout << i << "" ""; cout  << endl;
        }
        return ret;
    }
};",101110000000000000000000000000000000000000000000000000000000000000000000000000
356511962,cpp,"1 month, 2 weeks",1592731454,Wrong Answer,N/A,/submissions/detail/356511962/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        vector<int> stk;
        
        vector<int> V = rains;
        reverse(V.begin(), V.end());
        for(const int &x : V) {
            stk.push_back(x);
        }
            
        reverse(V.begin(), V.end());
        
        vector<int> ret;
        unordered_set<int> filled;
        for(const int &x: V) {
            //cout << x << endl;
            if(x != 0) {
                if(filled.find(x) != filled.end()) {
                    ret.clear();
                    return ret;
                }
                if(!stk.empty()) stk.pop_back();
                ret.push_back(-1);
                filled.insert(x);
            } else {
                // cout << stk.size() << "" "" << stk.top() << endl;
                stk.pop_back();
                int y = stk.back();
                ret.push_back(y);
                if(filled.find(y) != filled.end()) {
                    filled.erase(y);
                }                
            }
            //cout << ""vec ""; for(const int &i : ret) cout << i << "" ""; cout  << endl;
            //cout << ""set ""; for(const int &i : filled) cout << i << "" ""; cout  << endl;
            //cout << ""stk ""; for(const int &i : stk) cout << i << "" ""; cout  << endl;
        }
        return ret;
    }
};",101010000000000000000000000000000000000000000000000000000000000000000000000000
356511469,cpp,"1 month, 2 weeks",1592731302,Wrong Answer,N/A,/submissions/detail/356511469/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        vector<int> stk;
        
        vector<int> V = rains;
        reverse(V.begin(), V.end());
        for(const int &x : V) {
            if(x!=0) stk.push_back(x);
        }
            
        reverse(V.begin(), V.end());
        
        vector<int> ret;
        unordered_set<int> filled;
        for(const int &x: V) {
            cout << x << endl;
            if(x != 0) {
                if(filled.find(x) != filled.end()) {
                    ret.clear();
                    return ret;
                }
                if(!stk.empty()) stk.pop_back();
                ret.push_back(-1);
                filled.insert(x);
            } else {
                // cout << stk.size() << "" "" << stk.top() << endl;
                if(!stk.empty()) {
                    int y = stk.back();
                    ret.push_back(y);
                    if(filled.find(y) != filled.end()) {
                        filled.erase(y);
                    }
                    stk.pop_back();
                } else {
                    ret.push_back(1);
                }
                
            }
            cout << ""vec ""; for(const int &i : ret) cout << i << "" ""; cout  << endl;
            cout << ""set ""; for(const int &i : filled) cout << i << "" ""; cout  << endl;
            cout << ""stk ""; for(const int &i : stk) cout << i << "" ""; cout  << endl;
        }
        return ret;
    }
};",111111101000001111110111110111111101111101110111110000000000000000000000000000
356510027,cpp,"1 month, 2 weeks",1592730911,Wrong Answer,N/A,/submissions/detail/356510027/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        stack<int> stk;
        
        vector<int> V = rains;
        reverse(V.begin(), V.end());
        for(const int &x : V) {
            if(x!=0) stk.push(x);
        }
            
        reverse(V.begin(), V.end());
        
        vector<int> ret;
        unordered_set<int> filled;
        for(const int &x: V) {
            // cout << x << endl;
            if(x != 0) {
                if(filled.find(x) != filled.end()) {
                    ret.clear();
                    return ret;
                }
                if(!stk.empty()) stk.pop();
                ret.push_back(-1);
                filled.insert(x);
            } else {
                // cout << stk.size() << "" "" << stk.top() << endl;
                if(!stk.empty()) {
                    int y = stk.top();
                    ret.push_back(y);
                    if(filled.find(y) != filled.end()) {
                        filled.erase(y);
                    }
                    stk.pop();
                } else {
                    ret.push_back(1);
                }
                
            }
        }
        return ret;
    }
};",111111101000001111110111110111111101111101110111111001101111011111111111111101
356509447,cpp,"1 month, 2 weeks",1592730748,Runtime Error,N/A,/submissions/detail/356509447/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& rains) {
        stack<int> stk;
        
        vector<int> V = rains;
        reverse(V.begin(), V.end());
        for(const int &x : V) {
            if(x!=0) stk.push(x);
        }
            
        reverse(V.begin(), V.end());
        
        vector<int> ret;
        unordered_set<int> filled;
        for(const int &x: V) {
            if(x != 0) {
                if(filled.find(x) != filled.end()) {
                    ret.clear();
                    return ret;
                }
                stk.pop();
                ret.push_back(-1);
                filled.insert(x);
            } else {
                // cout << stk.size() << "" "" << stk.top() << endl;
                int y = 1;
                if(!stk.empty()) y = stk.top();
                ret.push_back(y);
                if(filled.find(y) != filled.end()) {
                    filled.erase(y);
                }
                if(!stk.empty()) stk.pop();
                
            }
        }
        return ret;
    }
};",111110000000000000000000000000000000000000000000000000000000000000000000000000
356505730,cpp,"1 month, 2 weeks",1592729734,Time Limit Exceeded,N/A,/submissions/detail/356505730/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, set<int> > where;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].insert(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==0) { 
                int closest = -1;
                for(const int &x : D) {
                    // cout << i << "" "" << x << "" "" << (where[x].upper_bound(i) == where[x].end()) << endl;
                    auto it = where[x].upper_bound(i);
                    if(it == where[x].end()) continue;
                    if(closest == -1 ) {
                        closest = x;
                    } else {
                        auto it2 = where[closest].upper_bound(i);
                        if(*it < *it2) {
                            closest = x;
                        }
                    }
                    // cout << closest << endl;
                }
                if(closest == -1) closest = 1;
                // cout << ""closest"" << "" "" << closest << endl;
                ret.push_back(closest);
                D.erase(closest);
            }
            else {
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111110000
356505680,cpp,"1 month, 2 weeks",1592729722,Time Limit Exceeded,N/A,/submissions/detail/356505680/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, set<int> > where;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].insert(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==0) { 
                int closest = -1;
                for(const int &x : D) {
                    // cout << i << "" "" << x << "" "" << (where[x].upper_bound(i) == where[x].end()) << endl;
                    auto it = where[x].upper_bound(i);
                    if(it == where[x].end()) continue;
                    if(closest == -1 ) {
                        closest = x;
                    } else {
                        auto it2 = where[closest].upper_bound(i);
                        if(*it < *it2) {
                            closest = x;
                        }
                    }
                    // cout << closest << endl;
                }
                if(closest == -1) closest = 1;
                cout << ""closest"" << "" "" << closest << endl;
                ret.push_back(closest);
                D.erase(closest);
            }
            else {
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111110000
356505631,cpp,"1 month, 2 weeks",1592729712,Time Limit Exceeded,N/A,/submissions/detail/356505631/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, set<int> > where;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].insert(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==0) { 
                int closest = -1;
                for(const int &x : D) {
                    // cout << i << "" "" << x << "" "" << (where[x].upper_bound(i) == where[x].end()) << endl;
                    auto it = where[x].upper_bound(i);
                    if(it == where[x].end()) continue;
                    if(closest == -1 ) {
                        closest = x;
                    } else {
                        auto it2 = where[closest].upper_bound(i);
                        if(*it < *it2) {
                            closest = x;
                        }
                    }
                    cout << closest << endl;
                }
                if(closest == -1) closest = 1;
                cout << ""closest"" << "" "" << closest << endl;
                ret.push_back(closest);
                D.erase(closest);
            }
            else {
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111110000
356505061,cpp,"1 month, 2 weeks",1592729561,Wrong Answer,N/A,/submissions/detail/356505061/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, set<int> > where;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].insert(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==0) { 
                int closest = -1;
                for(const int &x : D) {
                    // cout << i << "" "" << x << "" "" << (where[x].upper_bound(i) == where[x].end()) << endl;
                    if(closest == -1 ) {
                        closest = x;
                    } else {
                        auto it = where[x].upper_bound(i);
                        if(it != where[x].end()) {
                            auto it2 = where[closest].upper_bound(i);
                            if(*it < *it2) {
                                closest = x;
                            }
                        }
                    }
                }
                if(closest == -1) closest = 1;
                // cout << ""closest"" << "" "" << closest << endl;
                ret.push_back(closest);
                D.erase(closest);
            }
            else {
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111111111011111111111111111111101111111110111111101101111111111111111110000
356502906,cpp,"1 month, 2 weeks",1592729014,Wrong Answer,N/A,/submissions/detail/356502906/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, set<int> > where;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].insert(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==0) { 
                int closest = -1;
                for(const int &x : D) {
                    if(closest == -1 || *where[x].upper_bound(i) < *where[closest].upper_bound(i)) {
                        closest = x;
                    }
                }
                if(closest == -1) closest = 1;
                ret.push_back(closest);
                D.erase(closest);
            }
            else {
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111101110001111111111110111111101111111110111111001101111111111111111110000
356502313,cpp,"1 month, 2 weeks",1592728865,Wrong Answer,N/A,/submissions/detail/356502313/,Not Pending,Avoid Flood in The City,N/A,"class Solution {
public:
    vector<int> avoidFlood(vector<int>& R) {
        unordered_map< int, set<int> > where;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==-1) continue;
            if(where.count(R[i]) == 0) {
                where[R[i]].clear();
            }
            where[R[i]].insert(i);
        }
        
        
        vector<int> ret;
        set<int> D;
        
        for(int i = 0 ; i < R.size(); ++i) {
            if(R[i]==0) { 
                int closest = -1;
                for(const int &x : D) {
                    if(closest == -1 || *where[x].upper_bound(i) > *where[closest].upper_bound(i)) {
                        closest = x;
                    }
                }
                if(closest == -1) closest = 1;
                ret.push_back(closest);
                D.erase(closest);
            }
            else {
                if(D.find(R[i]) != D.end()) {
                    ret.clear();
                    return ret;
                }
                D.insert(R[i]);
                ret.push_back(-1);
            }
        }
        
        return ret;
    }
};",111111101111101111111111111111111111111101110111111001101111011111111111110000
356496412,cpp,"1 month, 2 weeks",1592727450,Accepted,292 ms,/submissions/detail/356496412/,Not Pending,Making File Names Unique,59 MB,"class Solution {
public:
    vector<string> getFolderNames(vector<string>& names) {
        unordered_map<string,int> D;
        vector<string> ret;
        ret.reserve(names.size());
        for(int i = 0 ; i < names.size() ; ++i) {
            if(D.count(names[i]) == 0) {
                D[names[i]] = 1;
                ret.push_back(names[i]);
            } else {
                while(1) {
                    char buf[50];
                    sprintf(buf, ""%s(%d)"", names[i].c_str(), D[names[i]]++);
                    if(D.count(buf)>0) continue;
                    ret.push_back(buf); 
                    D[buf] = 1;
                    break;
                }
            }
        }
        
        return ret;
    }
};",111111111111111111111111111111111
356496137,cpp,"1 month, 2 weeks",1592727388,Wrong Answer,N/A,/submissions/detail/356496137/,Not Pending,Making File Names Unique,N/A,"class Solution {
public:
    vector<string> getFolderNames(vector<string>& names) {
        unordered_map<string,int> D;
        vector<string> ret;
        ret.reserve(names.size());
        for(int i = 0 ; i < names.size() ; ++i) {
            if(D.count(names[i]) == 0) {
                D[names[i]] = 1;
                ret.push_back(names[i]);
            } else {
                while(1) {
                    char buf[50];
                    sprintf(buf, ""%s(%d)"", names[i].c_str(), D[names[i]]++);
                    if(D.count(buf)>0) continue;
                    ret.push_back(buf); 
                    break;
                }
            }
        }
        
        return ret;
    }
};",111110111111110000000000000000000
356495452,cpp,"1 month, 2 weeks",1592727234,Wrong Answer,N/A,/submissions/detail/356495452/,Not Pending,Making File Names Unique,N/A,"class Solution {
public:
    vector<string> getFolderNames(vector<string>& names) {
        map<string,int> D;
        vector<string> ret;
        ret.reserve(names.size());
        for(int i = 0 ; i < names.size() ; ++i) {
            if(D.count(names[i]) == 0) {
                D[names[i]] = 1;
                ret.push_back(names[i]);
            } else {
                char buf[50];
                sprintf(buf, ""%s(%d)"", names[i].c_str(), D[names[i]]);
                ret.push_back(buf);
            }
        }
        
        return ret;
    }
};",100000110100000000000000000000000
356494357,python,"1 month, 2 weeks",1592726993,Time Limit Exceeded,N/A,/submissions/detail/356494357/,Not Pending,Making File Names Unique,N/A,"class Solution(object):
    def getFolderNames(self, names):
        """"""
        :type names: List[str]
        :rtype: List[str]
        """"""
        
        D = set()
        ret = []
        for x in names:
            if not x in D:
                ret.append(x)
                D.add(x)
            else:
                num = 0
                while True:
                    num += 1
                    new_x = ""{}({})"".format(x, num)
                    if not new_x in D:
                        ret.append(new_x)
                        D.add(new_x)
                        break
        return ret
        ",111111111111111111111111111111110
356490181,rust,"1 month, 2 weeks",1592726075,Accepted,0 ms,/submissions/detail/356490181/,Not Pending,XOR Operation in an Array,2 MB,"impl Solution {
    pub fn xor_operation(n: i32, start: i32) -> i32 {
        let mut ret = 0;
        for i in 0..n {
            let value = 2*i + start;
            ret ^= value;
        }
        return ret;
    }
}",111111111111111111111111111111111111111111111111111111
355474591,rust,"1 month, 3 weeks",1592512817,Accepted,0 ms,/submissions/detail/355474591/,Not Pending,Subtract the Product and Sum of Digits of an Integer,2 MB,"impl Solution {
    pub fn subtract_product_and_sum(n: i32) -> i32 {
        let mut mul = 1 as i32;
        let mut sub = 0 as i32;
        let mut num = n;
        loop {
            
            mul *= num % 10;
            sub += num % 10;
            
            num /= 10;
            if num == 0 {
                break;
            }
        }
        return mul - sub;
    }
}",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
355195779,rust,"1 month, 3 weeks",1592457617,Accepted,0 ms,/submissions/detail/355195779/,Not Pending,Count Negative Numbers in a Sorted Matrix,2.2 MB,"impl Solution {
    pub fn count_negatives(grid: Vec<Vec<i32>>) -> i32 {
        let mut ret = 0;
        
        
        let N = grid.len();
        let M = grid[0].len();
        
        for i in 0..N {
            let mut st = 0;
            let mut ed = M;
            while st < ed {
                let mid = st + (ed-st) / 2;
                if grid[i][mid] < 0 {
                    ed = mid;
                } else {
                    st = mid+1;
                }
            }
            ret += (M-st);
        }
        return ret as i32;
    }
}",11111111111111111111111111111111111111111111
354664082,rust,"1 month, 3 weeks",1592354870,Accepted,0 ms,/submissions/detail/354664082/,Not Pending,String Compression,2.2 MB,"use std::cmp;

impl Solution {
    pub fn compress(chars: &mut Vec<char>) -> i32 {
        let mut prev = ' ';
        let mut cnt = 0;
        let mut ret = 0;
        let mut j = 0;
        for i in 0..(chars.len()) {
            if prev == chars[i] {
                cnt += 1;
            } else {
                let next = chars[i];
                if cnt > 0 {
                    if j < chars.len() {
                        chars[j] = prev;
                    }
                    j += 1;
                    if cnt > 1 {
                        let s: String = cnt.to_string();
                        for c in s.chars() {
                            if j < chars.len() {
                                chars[j] = c;
                            }
                            j += 1;                    
                        }                            
                    } 
                }
                prev = next;
                cnt = 1;
            }
        }
        
        if j < chars.len() {
            chars[j] = prev;
        }
        j += 1;
        let s: String = cnt.to_string();
        if cnt > 1 {
            for c in s.chars() {
                if j < chars.len() {
                    chars[j] = c;
                }
                j += 1;
            }                
        }
        
        return cmp::min(chars.len(), j) as i32;
    }
}",1111111111111111111111111111111111111111111111111111111111111111111111
354651447,cpp,"1 month, 3 weeks",1592352351,Accepted,4 ms,/submissions/detail/354651447/,Not Pending,Decompress Run-Length Encoded List,10.1 MB,"class Solution {
public:
    vector<int> decompressRLElist(vector<int>& nums) {
        vector<int> ret;
        
        for(int i=0;i<nums.size();i+=2) {
            for(int j=0;j<nums[i];++j) {
                ret.push_back(nums[i+1]);
            }
        }
        return ret;
    }
};",11111111111111111111111111111111111111111111111111111
354578584,cpp,"1 month, 3 weeks",1592338357,Accepted,8 ms,/submissions/detail/354578584/,Not Pending,Split a String in Balanced Strings,6.7 MB,"class Solution {
public:
    int balancedStringSplit(string S) {
        int N = S.size();
        vector<int> sum(N+1,0);      
        
        for(int i=1;i<=N;++i) {
            sum[i] = sum[i-1] + int(S[i-1] == 'R');
        }
        
        vector<int> M(N+1, -987654321);
        
        M[0] = 0;
        
        for(int i=2;i<=N;i+=2) {
            for(int j=i-2;j>=0;j-=2) {
                int NR = sum[i] - sum[j];
                int NL = (i-j) - NR;
                if(NR == NL) {
                    M[i] = max(M[i], M[j]+1);
                }
            }
        }
        
        
        return M[N];
    }
};",1111111111111111111111111111111111111111
354574566,python,"1 month, 3 weeks",1592337627,Accepted,24 ms,/submissions/detail/354574566/,Not Pending,Height Checker,12.9 MB,"class Solution(object):
    def heightChecker(self, H):
        """"""
        :type heights: List[int]
        :rtype: int
        """"""
        S = sorted(H)
        return sum([ s != h for s, h in zip(S, H) ])",111111111111111111111111111111111111111111111111111111111111111111111111111111111
354573250,cpp,"1 month, 3 weeks",1592337393,Accepted,20 ms,/submissions/detail/354573250/,Not Pending,Long Pressed Name,10.6 MB,"int cache[1010][1010];

string A, B;
class Solution {
public:
    
    int solve(int i, int j) {
        if(i==A.size() && j==B.size()) {
            return true;
        }
        if(i==A.size() || j==B.size()) {
            return false;
        }
        
        int &ret = cache[i][j];
        if(ret!=-1) return ret;
        cache[i][j] = 0;
        
        if(A[i]==B[j]) {
            ret |= solve(i+1, j+1);
            ret |= solve(i, j+1);
        } 
        return ret;
    }
    bool isLongPressedName(string name, string typed) {
        A = name;
        B = typed;
        memset(cache, -1, sizeof cache);
        
        return solve(0, 0) == 1;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111111
354388126,cpp,"1 month, 3 weeks",1592301402,Accepted,16 ms,/submissions/detail/354388126/,Not Pending,How Many Numbers Are Smaller Than the Current Number,10.2 MB,"class Solution {
public:
    vector<int> smallerNumbersThanCurrent(vector<int>& A) {
        vector<int> S = A;
        sort(S.begin(), S.end());
        
        vector<int> R;
        
        for(int i = 0 ; i < A.size(); ++i) {
            R.push_back(distance(S.begin(), lower_bound(S.begin(), S.end(), A[i])));
        }
        
        return R;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
354323079,python,"1 month, 3 weeks",1592288360,Accepted,1572 ms,/submissions/detail/354323079/,Not Pending,Network Delay Time,14.8 MB,"class Solution(object):
    def networkDelayTime(self, times, N, K):
        """"""
        :type times: List[List[int]]
        :type N: int
        :type K: int
        :rtype: int
        """"""
        
        D = [ [ 987654321 for j in range(N) ] for i in range(N) ]
        
        for i in range(N):
            D[i][i] = 0
            
        for u, v, w in times:
            D[u-1][v-1] = w
            
        for k in range(N):
            for i in range(N):
                for j in range(N):
                    D[i][j] = min(D[i][j], D[i][k]+D[k][j])
                    
        ret = max(D[K-1])
       
        return ret if ret < 987654321 else -1
            
            
                    ",111111111111111111111111111111111111111111111111111
354320362,python,"1 month, 3 weeks",1592287901,Accepted,20 ms,/submissions/detail/354320362/,Not Pending,Student Attendance Record I,12.7 MB,"class Solution(object):
    def checkRecord(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        return s.count(""A"") <= 1 and s.count(""LLL"") < 1
        ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
354144648,python,"1 month, 3 weeks",1592254514,Accepted,108 ms,/submissions/detail/354144648/,Not Pending,Container With Most Water,13.9 MB,"class Solution(object):
    def maxArea(self, H):
        """"""
        :type height: List[int]
        :rtype: int
        """"""
        
        maxi = 0
        l, r = 0, len(H)-1
        while l < r:
            maxi = max(maxi, (r-l) * min(H[l], H[r]))
            if H[l] < H[r]:
                l += 1
            else:
                r -= 1
                
        return maxi
            ",11111111111111111111111111111111111111111111111111
354135337,python,"1 month, 3 weeks",1592252756,Wrong Answer,N/A,/submissions/detail/354135337/,Not Pending,Container With Most Water,N/A,"class Solution(object):
    def maxArea(self, H):
        """"""
        :type height: List[int]
        :rtype: int
        """"""
        def get_size(H, s, e):
            return abs(e-s) * min(H[e], H[s])
        
        if len(H) <= 1:
            return 0
        
        s, e = 0, len(H)-1
        
        maxi = (e-s) * min(H[s], H[e])
        
        while True:
            a = None
            i = s+1
            while i < e:
                if H[i] > H[s]:
                    a = i
                    break
                i += 1
                
            b = None
            i = e-1
            while i > s:
                if H[i] > H[e]:
                    b = i
                    break
                i -= 1
                    
                    
            if a == None and b == None:
                break

            os, oe = s, e
            

            if get_size(H, os, oe) > maxi:
                maxi = get_size(H, os, oe)

            if b != None and get_size(H, os, b) > maxi:
                maxi = get_size(H, os, b)
                
            if a != None and get_size(H, a, oe) > maxi:
                maxi = get_size(H, a, oe)
                
            if a != None and b != None and get_size(H, a, b) > maxi:
                maxi = get_size(H, a, b)

            if a != None and get_size(H, os, a) > maxi:
                maxi = get_size(H, os, a)

            if b != None and get_size(H, b, oe) > maxi:
                maxi = get_size(H, b, oe)
                
            if a != None: s = a
            if b != None: e = b
                
                
        return maxi
            ",11111111111111111111111111101110111101110110000110
354133434,python,"1 month, 3 weeks",1592252376,Wrong Answer,N/A,/submissions/detail/354133434/,Not Pending,Container With Most Water,N/A,"class Solution(object):
    def maxArea(self, H):
        """"""
        :type height: List[int]
        :rtype: int
        """"""
        def get_size(H, s, e):
            return abs(e-s) * min(H[e], H[s])
        
        if len(H) <= 1:
            return 0
        
        s, e = 0, len(H)-1
        
        maxi = (e-s) * min(H[s], H[e])
        
        while True:
            
            a = None
            i = s+1
            while i < e:
                if H[i] > H[s]:
                    a = i
                    break
                i += 1
                
            b = None
            i = e-1
            while i > s:
                if H[i] > H[e]:
                    b = i
                    break
                i -= 1
                    
                    
            if a == None and b == None:
                break

            os, oe = s, e
            

            if get_size(H, os, oe) > maxi:
                maxi = get_size(H, os, oe)

            if b != None and get_size(H, os, b) > maxi:
                maxi = get_size(H, os, b)
                
            if a != None and get_size(H, a, oe) > maxi:
                maxi = get_size(H, a, oe)
                
            if a != None and b != None and get_size(H, a, b) > maxi:
                maxi = get_size(H, a, b)

            if a != None: s = a
            if b != None: e = b
                
                
        return maxi
            ",11111111110000111111111111101110111101110110000110
354125644,python,"1 month, 3 weeks",1592250897,Runtime Error,N/A,/submissions/detail/354125644/,Not Pending,Container With Most Water,N/A,"class Solution(object):
    def maxArea(self, H):
        """"""
        :type height: List[int]
        :rtype: int
        """"""
        def get_size(H, s, e):
            return abs(e-s) * min(H[e], H[s])
        
        if len(H) <= 1:
            return 0
        
        s, e = 0, len(H)-1
        
        maxi = (e-s) * min(H[s], H[e])
        
        while True:
            
            found = False
            for a in range(s+1,e):
                if H[a] > H[s]:
                    break
                                    
            for b in range(e-1, s, -1):
                if H[b] > H[e]:
                    break
                    
            if a >= b: break                    
            
            os, oe = s, e
            
            if get_size(H, os, oe) > maxi:
                maxi = get_size(H, os, oe)
                s, e = os, oe
                
            if get_size(H, os, b) > maxi:
                maxi = get_size(H, os, b)
                s, e = os, b
                
            if get_size(H, a, oe) > maxi:
                maxi = get_size(H, a, oe)
                s, e = a, oe
                
            if get_size(H, a, b) > maxi:
                maxi = get_size(H, a, b)
                s, e = a, b
                
        return maxi
            ",10000000000000000000000000000000000000000000000000
354100511,cpp,"1 month, 3 weeks",1592246355,Time Limit Exceeded,N/A,/submissions/detail/354100511/,Not Pending,Container With Most Water,N/A,"class Solution {
public:
    int maxArea(vector<int>& A) {
        const int N = A.size();
        int ret = 0;
        for(int i = 0 ; i < N ; ++i) {
            for(int j = i+1 ; j < N ; ++j) {
                ret = max(ret, (j-i) * min(A[i],A[j]));
            }
        }
        return ret;
    }
};",11111111111111111111111111111111111111111111111100
353936526,python,"1 month, 3 weeks",1592211474,Accepted,64 ms,/submissions/detail/353936526/,Not Pending,Remove Duplicates from Sorted Array,14.5 MB,"class Solution(object):
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        cnt = 0
        for i in range(1, n):
            if nums[i] == nums[i-1]: cnt += 1
            else: nums[i-cnt] = nums[i]
        return n-cnt",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353935022,cpp,"1 month, 3 weeks",1592211107,Accepted,1420 ms,/submissions/detail/353935022/,Not Pending,Remove Duplicates from Sorted Array,13.8 MB,"
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        for(int k = 0 ; k < nums.size() ; ++k) {
            int cnt = 0;
            int retain = 0;
            for(int i = k+1 ; i < nums.size() ; ++i) {
                if(nums[i] == nums[k]) {
                    ++cnt;
                } else {
                    ++retain;
                }
            }
            for(int i = 0; i < retain ; ++i) {
                nums[k+i+1] = nums[k+i+1+cnt];
            }
            for(int i = 0 ; i < cnt ; ++i) nums.pop_back();
        }
        return nums.size();
    }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353934315,python,"1 month, 3 weeks",1592210932,Time Limit Exceeded,N/A,/submissions/detail/353934315/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution(object):
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        

        i = 0
        k = 0 
        
        while k < len(nums):
            i = k+1
            cnt = 0
            retain = 0
            for i in range(k+1, len(nums)):
                if nums[k] == nums[i]:
                    cnt += 1
                else:
                    retain += 1
            
            for i in range(retain):
                nums[k+i+1] = nums[k+i+1+cnt]
            
            for i in range(cnt):
                nums.pop()

            k += 1

        return len(nums)",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
353932737,python,"1 month, 3 weeks",1592210549,Wrong Answer,N/A,/submissions/detail/353932737/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution(object):
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        

        i = 0
        k = 0 
        
        while k < len(nums):
            i = k+1
            while i < len(nums):
                if nums[i] == nums[k]:
                    nums[i] = None
                i += 1
                
            i = k+1
            p = -1
            while i < len(nums)-1:
                if nums[i] == None:
                    nums[i], nums[p] = nums[p], nums[i]
                    p -= 1
                i += 1
            
            while nums[-1] == None:
                nums.pop()

            k += 1

        return len(nums)",10111111111110111111110111010000000010000000000000101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
353930630,python,"1 month, 3 weeks",1592210053,Time Limit Exceeded,N/A,/submissions/detail/353930630/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution(object):
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        

        i = 0
        k = 0 
        
        while k < len(nums):
            i = k+1
            while i < len(nums):
                if nums[i] == nums[k]:
                    for j in range(i, len(nums)-1):
                        nums[j] = nums[j+1]
                    nums.pop()
                else: i += 1
            k += 1

        return len(nums)",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
353930031,python,"1 month, 3 weeks",1592209912,Wrong Answer,N/A,/submissions/detail/353930031/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution(object):
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        

        i = 0
        k = 0 
        
        while k < len(nums):
            i = k+1
            while i < len(nums):
                if nums[i] == nums[k]:
                    for j in range(i, len(nums)-1):
                        nums[j] = nums[j+1]
                    nums.pop()
                else: i += 1
            k += 1

            return len(nums)",10111110110011001100010000010000000000000000000100111001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
353929547,python,"1 month, 3 weeks",1592209798,Accepted,28 ms,/submissions/detail/353929547/,Not Pending,Remove Element,12.7 MB,"class Solution(object):
    def removeElement(self, nums, val):
        """"""
        :type nums: List[int]
        :type val: int
        :rtype: int
        """"""
        i = 0
        while i < len(nums):
            if nums[i] == val:
                for j in range(i, len(nums)-1):
                    nums[j] = nums[j+1]
                nums.pop()
            else: i += 1
                
        return len(nums)",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353929157,python,"1 month, 3 weeks",1592209713,Wrong Answer,N/A,/submissions/detail/353929157/,Not Pending,Remove Element,N/A,"class Solution(object):
    def removeElement(self, nums, val):
        """"""
        :type nums: List[int]
        :type val: int
        :rtype: int
        """"""
        i = 0
        while i < len(nums):
            if nums[i] == val:
                for j in range(i, len(nums)-1):
                    nums[j] = nums[j+1]
                nums.pop()
            i += 1
                
        return len(nums)",10111101111100110111111110110101111010111010111011110110011000110110011110100011101111111111111111111111111111101
353928433,python,"1 month, 3 weeks",1592209541,Accepted,24 ms,/submissions/detail/353928433/,Not Pending,Merge Sorted Array,12.7 MB,"class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """"""
        
        p = len(nums1)-1
        for i in range(m-1,-1,-1):
            nums1[p] = nums1[i]
            p -= 1
            
        k = 0
        i = 0
        j = 0
        
        
        i = len(nums1) - m
        while i < len(nums1) and j < n:
            if nums1[i] < nums2[j]:
                nums1[k] = nums1[i]
                i += 1
            else:
                nums1[k] = nums2[j]
                j += 1
            k += 1

        while i < len(nums1):
            nums1[k] = nums1[i]
            k += 1
            i += 1
            
        while j < n:
            nums1[k] = nums2[j]
            k += 1
            j += 1
            ",11111111111111111111111111111111111111111111111111111111111
353927589,python,"1 month, 3 weeks",1592209345,Wrong Answer,N/A,/submissions/detail/353927589/,Not Pending,Merge Sorted Array,N/A,"class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """"""
        
        p = len(nums1) - m
        for i in range(m):
            nums1[p] = nums1[i]
            p += 1
            
        k = 0
        i = 0
        j = 0
        
        i = len(nums1) - m
        while i < len(nums1) and j < n:
            if nums1[i] < nums2[j]:
                nums1[k] = nums1[i]
                i += 1
            else:
                nums1[k] = nums2[j]
                j += 1
            k += 1
        while i < len(nums1):
            nums1[k] = nums1[i]
            k += 1
            i += 1
            
        while j < n:
            nums1[k] = nums2[j]
            k += 1
            j += 1
            ",11111111110100101111011011011100010000001011000001011101110
353926659,python,"1 month, 3 weeks",1592209152,Wrong Answer,N/A,/submissions/detail/353926659/,Not Pending,Merge Sorted Array,N/A,"class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """"""
        
        p = len(nums1) - 1
        for i in range(m):
            nums1[p] = nums1[i]
            p -= 1
            
        k = 0
        i = 0
        j = 0
        
        p = len(nums1) - 1
        while i < m and j < n:
            if nums1[p-i] < nums2[j]:
                nums1[k] = nums1[p-i]
                i += 1
            else:
                nums1[k] = nums2[j]
                j += 1
            k += 1
        while i < m:
            nums1[k] = nums1[p-i]
            k += 1
            i += 1
        while j < n:
            nums1[k] = nums2[j]
            k += 1
            j += 1
            ",11111101010100001110011001000000000000000000000000000101010
353925396,python,"1 month, 3 weeks",1592208882,Runtime Error,N/A,/submissions/detail/353925396/,Not Pending,Merge Sorted Array,N/A,"class Solution(object):
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: None Do not return anything, modify nums1 in-place instead.
        """"""
        for i in range(m):
            nums1[m+i] = nums1[i]
            
        k = 0
        i = m
        j = 0
        while i < len(nums1) and j < n:
            if nums1[i] < nums2[j]:
                nums1[k] = nums1[i]
                i += 1
            else:
                nums1[k] = nums2[j]
                j += 1
            k += 1
        while i < len(nums1):
            nums1[k] = nums1[i]
            k += 1
            i += 1
        while j < n:
            nums1[k] = nums2[j]
            k += 1
            j += 1
            ",10000000000000000000000000000000000000000000000000000000000
353924088,python,"1 month, 3 weeks",1592208616,Accepted,1960 ms,/submissions/detail/353924088/,Not Pending,Duplicate Zeros,12.8 MB,"class Solution(object):
    def duplicateZeros(self, arr):
        """"""
        :type arr: List[int]
        :rtype: None Do not return anything, modify arr in-place instead.
        """"""
        i = 0
        N = len(arr)
        while i < N:
            if arr[i] == 0:
                arr[-1] = 0            
                j = N-1
                while i+1 < j:
                    arr[j-1], arr[j] = arr[j], arr[j-1]
                    j -= 1
                i += 1
            i += 1
            
            ",111111111111111111111111111111
353923427,python,"1 month, 3 weeks",1592208470,Accepted,2276 ms,/submissions/detail/353923427/,Not Pending,Duplicate Zeros,13.1 MB,"class Solution(object):
    def duplicateZeros(self, arr):
        """"""
        :type arr: List[int]
        :rtype: None Do not return anything, modify arr in-place instead.
        """"""
        i = 0
        N = len(arr)
        while i < len(arr):
            if arr[i] == 0:
                arr.append(0)            
                j = len(arr)-1

                while i+1 < j:
                    arr[j-1], arr[j] = arr[j], arr[j-1]
                    j -= 1
                i += 1
            i += 1
                
        while len(arr) > N:
            arr.pop()
            
            ",111111111111111111111111111111
353921575,python,"1 month, 3 weeks",1592208084,Accepted,256 ms,/submissions/detail/353921575/,Not Pending,Squares of a Sorted Array,14.8 MB,"class Solution(object):
    def sortedSquares(self, A):
        """"""
        :type A: List[int]
        :rtype: List[int]
        """"""
        return sorted([x**2 for x in A])",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353921321,python,"1 month, 3 weeks",1592208034,Accepted,56 ms,/submissions/detail/353921321/,Not Pending,Find Numbers with Even Number of Digits,12.7 MB,"class Solution(object):
    def findNumbers(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        return sum([len(str(x)) % 2 == 0 for x in nums])",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353921030,python,"1 month, 3 weeks",1592207975,Accepted,416 ms,/submissions/detail/353921030/,Not Pending,Max Consecutive Ones,12.9 MB,"class Solution(object):
    def findMaxConsecutiveOnes(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        max_runs = 0
        runs = 0
        
        for x in nums:
            runs = runs+1 if x else 0
            max_runs = max(runs, max_runs)
        return max_runs",11111111111111111111111111111111111111111
353883658,python,"1 month, 3 weeks",1592201639,Accepted,28 ms,/submissions/detail/353883658/,Not Pending,Swap Nodes in Pairs,12.6 MB,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def swapPairs(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        
        cur = head
        prev = None
        first = None
        while cur != None and cur.next != None:
            a, b = cur, cur.next
            a.next, b.next = b.next, a
            cur = a.next
            if not prev is None:
                prev.next = b
            prev = a
            
            if first is None:
                first = b
        
        if prev == None and first == None:
            return head
        
        return first",1111111111111111111111111111111111111111111111111111111
353883160,python,"1 month, 3 weeks",1592201547,Runtime Error,N/A,/submissions/detail/353883160/,Not Pending,Swap Nodes in Pairs,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def swapPairs(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        
        cur = head
        prev = None
        first = None
        while cur != None:
            a, b = cur, cur.next
            a.next, b.next = b.next, a
            cur = a.next
            if not prev is None:
                prev.next = b
            prev = a
            
            if first is None:
                first = b
                        
        return first",1100000000000000000000000000000000000000000000000000000
353876595,python,"1 month, 3 weeks",1592200379,Accepted,44 ms,/submissions/detail/353876595/,Not Pending,Divide Two Integers,12.7 MB,"class Solution(object):
    def divide(self, N, D):
        """"""
        :type dividend: int
        :type divisor: int
        :rtype: int
        """"""
        def sign(n):
            if n > 0: return 1
            if n == 0: return 0
            return -1
        
        if N == 0 or D == 0: return 0
        s = -1 if sign(N) != sign(D) else 1
        
        R, Q = 0, 0
        N, D = abs(N), abs(D)
        for i in range(31,-1,-1):
            R <<= 1
            R |= ((N>>i) & 1)
            
            if R >= D:
                R -= D
                Q |= (1<<i)
                
        
        ret = s * Q
        
        if ret > 2147483647 or ret < -2147483648:
            return 2147483647
        else:
            return ret

353876488,python,"1 month, 3 weeks",1592200361,Wrong Answer,N/A,/submissions/detail/353876488/,Not Pending,Divide Two Integers,N/A,"class Solution(object):
    def divide(self, N, D):
        """"""
        :type dividend: int
        :type divisor: int
        :rtype: int
        """"""
        def sign(n):
            if n > 0: return 1
            if n == 0: return 0
            return -1
        
        if N == 0 or D == 0: return 0
        s = -1 if sign(N) != sign(D) else 1
        
        R, Q = 0, 0
        N, D = abs(N), abs(D)
        for i in range(31,-1,-1):
            R <<= 1
            R |= ((N>>i) & 1)
            
            if R >= D:
                R -= D
                Q |= (1<<i)
                
        
        ret = s * Q
        
        if ret >= 2147483647 or ret <= -2147483648:
            return 2147483647
        else:
            return ret
            ",11111111111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353876428,python,"1 month, 3 weeks",1592200351,Wrong Answer,N/A,/submissions/detail/353876428/,Not Pending,Divide Two Integers,N/A,"class Solution(object):
    def divide(self, N, D):
        """"""
        :type dividend: int
        :type divisor: int
        :rtype: int
        """"""
        def sign(n):
            if n > 0: return 1
            if n == 0: return 0
            return -1
        
        if N == 0 or D == 0: return 0
        s = -1 if sign(N) != sign(D) else 1
        
        R, Q = 0, 0
        N, D = abs(N), abs(D)
        for i in range(31,-1,-1):
            R <<= 1
            R |= ((N>>i) & 1)
            
            if R >= D:
                R -= D
                Q |= (1<<i)
                
        
        ret = s * Q
        
        if ret >= 2147483647 or ret >= -2147483648:
            return 2147483647
        else:
            return ret

353875747,python,"1 month, 3 weeks",1592200241,Wrong Answer,N/A,/submissions/detail/353875747/,Not Pending,Divide Two Integers,N/A,"class Solution(object):
    def divide(self, N, D):
        """"""
        :type dividend: int
        :type divisor: int
        :rtype: int
        """"""
        def sign(n):
            if n > 0: return 1
            if n == 0: return 0
            return -1
        
        if N == 0 or D == 0: return 0
        s = -1 if sign(N) != sign(D) else 1
        
        R, Q = 0, 0
        N, D = abs(N), abs(D)
        for i in range(31,-1,-1):
            R <<= 1
            R |= ((N>>i) & 1)
            
            if R >= D:
                R -= D
                Q |= (1<<i)
        return s * Q

353490192,cpp,"1 month, 3 weeks",1592126512,Accepted,112 ms,/submissions/detail/353490192/,Not Pending,Longest Substring Without Repeating Characters,6.9 MB,"class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int best = 0;
        for(int i = 0 ; i < s.size() ; ++i) {
            int f[128] = {0};
            int k = 0;
            for(int j = i, k = 1 ; j < s.size() ; ++j, ++k) {
                int c = (int)(s[j]);
                if(f[c] >= 1) {
                    break;
                }
                f[c]++;
                best = max(best, k);
            }
        }
        return best;
    }
}
353489865,cpp,"1 month, 3 weeks",1592126417,Runtime Error,N/A,/submissions/detail/353489865/,Not Pending,Longest Substring Without Repeating Characters,N/A,"class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int best = 0;
        for(int i = 0 ; i < s.size() ; ++i) {
            int f[30] = {0};
            int k = 0;
            for(int j = i, k = 1 ; j < s.size() ; ++j, ++k) {
                int c = (int)(s[j]-'a');
                if(f[c] >= 1) {
                    break;
                }
                f[c]++;
                best = max(best, k);
            }
        }
        return best;
    }
}
353474865,bash,"1 month, 3 weeks",1592122955,Accepted,0 ms,/submissions/detail/353474865/,Not Pending,Word Frequency,3.3 MB," cat  words.txt | sed -e's/ +/ /g' | tr ' ' '\n' | sed '/^$/d' | sort | uniq -c | awk '{print $2, $1}' | sort -k 2 -g -r",11111111111111
353474568,bash,"1 month, 3 weeks",1592122893,Wrong Answer,N/A,/submissions/detail/353474568/,Not Pending,Word Frequency,N/A," cat  words.txt | sed -e's/ */ /g' | tr ' ' '\n' | sed '/^$/d' | sort | uniq -c | awk '{print $2, $1}' | sort -k 2 -g -r",10111010000000
353472170,bash,"1 month, 3 weeks",1592122426,Wrong Answer,N/A,/submissions/detail/353472170/,Not Pending,Word Frequency,N/A,"# Read from the file words.txt and output the word frequency list to stdout.

tr ' ' '\n' < words.txt | sort | uniq -c | awk '{print $2, $1}' | sort -k 2 -g -r",11110001011110
353470548,python,"1 month, 3 weeks",1592122096,Accepted,32 ms,/submissions/detail/353470548/,Not Pending,Delete Node in a Linked List,13.1 MB,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """"""
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """"""
        
        if node.next == None:
            return None
        
        while True:
            node.val = node.next.val
            if node.next.next == None:
                node.next = None
                break 
            node = node.next",11111111111111111111111111111111111111111
353464862,python,"1 month, 3 weeks",1592120978,Accepted,44 ms,/submissions/detail/353464862/,Not Pending,Invert Binary Tree,13 MB,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def invertTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: TreeNode
        """"""
        if root == None:
            return None
        
        root.left, root.right = self.invertTree(root.right), self.invertTree(root.left)
        return root",11111111111111111111111111111111111111111111111111111111111111111111
353438901,python,"1 month, 3 weeks",1592116567,Accepted,20 ms,/submissions/detail/353438901/,Not Pending,Print in Order,12.8 MB,"import threading 

class Foo(object):
    def __init__(self):
        self.lock = threading.Lock()

    def first(self, printFirst):
        """"""
        :type printFirst: method
        :rtype: void
        """"""
        self.lock.acquire()
        # printFirst() outputs ""first"". Do not change or remove this line.
        printFirst()
        self.lock.release()


    def second(self, printSecond):
        """"""
        :type printSecond: method
        :rtype: void
        """"""
        
        # printSecond() outputs ""second"". Do not change or remove this line.
        self.lock.acquire()
        printSecond()
        self.lock.release()
            
            
    def third(self, printThird):
        """"""
        :type printThird: method
        :rtype: void
        """"""
        
        # printThird() outputs ""third"". Do not change or remove this line.
        self.lock.acquire()        
        printThird()
        self.lock.release()
        
        ",111111111111111111111111111111111111
353433011,python,"1 month, 3 weeks",1592115610,Wrong Answer,N/A,/submissions/detail/353433011/,Not Pending,Print in Order,N/A,"class Foo(object):
    def __init__(self):
        print(dir(self))
        pass

    def first(self, printFirst):
        print(dir(self))
        """"""
        :type printFirst: method
        :rtype: void
        """"""
        # printFirst() outputs ""first"". Do not change or remove this line.
        printFirst()


    def second(self, printSecond):
        """"""
        :type printSecond: method
        :rtype: void
        """"""
        
        # printSecond() outputs ""second"". Do not change or remove this line.
        printSecond()
            
            
    def third(self, printThird):
        """"""
        :type printThird: method
        :rtype: void
        """"""
        
        # printThird() outputs ""third"". Do not change or remove this line.
        printThird()",000100000010000000000000000000010000
353430203,python3,"1 month, 3 weeks",1592115165,Accepted,36 ms,/submissions/detail/353430203/,Not Pending,Hamming Distance,13.9 MB,"class Solution:
    def hammingDistance(self, x, y):
        ret = 0
        for i in range(32):
            ret += (x % 2 != y % 2)
            x //= 2
            y //= 2
        return ret",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353429523,python3,"1 month, 3 weeks",1592115055,Accepted,28 ms,/submissions/detail/353429523/,Not Pending,Nim Game,14 MB,"class Solution:    
    def canWinNim(self, n):
        return n % 4 != 0        
        ",111111111111111111111111111111111111111111111111111111111111
353396726,java,"1 month, 3 weeks",1592109611,Accepted,1810 ms,/submissions/detail/353396726/,Not Pending,Kth Ancestor of a Tree Node,78.8 MB,"class TreeAncestor {
    private int[] cache = null;
    private int total = 0;
    public TreeAncestor(int n, int[] parent) {
        total = n;
        cache = parent;
    }
    
    public int getKthAncestor(int node, int k) {
        if(k > node) return -1;
        int ans = node;
        while(k != 0 && ans != -1){
            ans = cache[ans];
            k--;
        }
        
        return ans;
    }
}",1111111111
353370255,cpp,"1 month, 3 weeks",1592106305,Accepted,936 ms,/submissions/detail/353370255/,Not Pending,Kth Ancestor of a Tree Node,108 MB,"
int A[int(1e5)][20];

class TreeAncestor {
public:
    int N;
    vector<int> P;
    
    int call_cnt = 0;
    TreeAncestor(int n, vector<int>& P) {
        N = n;
        memset(A, -1, sizeof A);      
        for(int i = 0 ; i < N ; ++i) {
            A[i][0] = P[i];
        }
        
        for(int h = 1 ; h <= 20 ; ++h) {
           for(int i = 0 ; i < N ; ++i) {
               if(A[i][h-1]==-1) 
                   continue;
               A[i][h] = A[A[i][h-1]][h-1];
           }
        }
    }
    
    int getKthAncestor(int node, int k) {
        int cur = node;
        for(int i = 0; i < 20 ;++i) {
            if( k & (1<<i) ) {
                cur = A[cur][i];
                if(cur == -1) {
                    return -1;
                }
            }
        }
        return cur;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */",1111111111
353364885,cpp,"1 month, 3 weeks",1592105756,Time Limit Exceeded,N/A,/submissions/detail/353364885/,Not Pending,Kth Ancestor of a Tree Node,N/A,"
int A[int(1e5)][20];

class TreeAncestor {
public:
    int N;
    vector<int> P;
    
    int call_cnt = 0;
    TreeAncestor(int n, vector<int>& parent) {
        N = n;
        P = parent;
        memset(A, -1, sizeof A);      
        for(int i = 0 ; i < n ; ++i) {
            int cur = i;
            int target = 1;
            
            int k = 0;
            for(int j = 1; ; ++j) {
                cur = parent[cur];
                if(cur == -1) break;
                if(j == target) {
                    A[i][k++] = cur;
                    target *= 2;
                }
            }
        }
    }
    
    int getKthAncestor(int node, int k) {
        int cur = node;
        for(int i = 0; i < 20 ;++i) {
            if( k & (1<<i) ) {
                cur = A[cur][i];
                if(cur == -1) {
                    return -1;
                }
            }
        }
        return cur;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */",1111111110
353363668,cpp,"1 month, 3 weeks",1592105633,Time Limit Exceeded,N/A,/submissions/detail/353363668/,Not Pending,Kth Ancestor of a Tree Node,N/A,"class TreeAncestor {
public:
    int N;
    vector<int> P;
    vector< vector<int> > A;
    
    int call_cnt = 0;
    TreeAncestor(int n, vector<int>& parent) {
        N = n;
        P = parent;
        
        A.clear();
        A.resize(n);
        
        for(int i = 0 ; i < n ; ++i) {
            A[i].resize(30, -1);
            int cur = i;
            int target = 1;
            
            int k = 0;
            for(int j = 1 ; ; ++j) {
                cur = parent[cur];
                if(cur == -1) break;
                if(j == target) {
                    A[i][k++] = cur;
                    target *= 2;
                }
            }
        }
    }
    
    int getKthAncestor(int node, int k) {
        int cur = node;
        for(int i = 0; i < 30 ;++i) {
            if( k & (1<<i) ) {
                cur = A[cur][i];
                if(cur == -1) {
                    return -1;
                }
            }
        }
        return cur;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */",1111111110
353352094,cpp,"1 month, 3 weeks",1592104474,Time Limit Exceeded,N/A,/submissions/detail/353352094/,Not Pending,Kth Ancestor of a Tree Node,N/A,"class TreeAncestor {
public:
    int N;
    vector<int> P;
    TreeAncestor(int n, vector<int>& parent) {
        N = n;
        P = parent;
    }
    
    int getKthAncestor(int node, int k) {
        while(k-- && node != -1) {
            node = P[node];
        }
        return node;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */",1111111110
353351571,cpp,"1 month, 3 weeks",1592104424,Runtime Error,N/A,/submissions/detail/353351571/,Not Pending,Kth Ancestor of a Tree Node,N/A,"class TreeAncestor {
public:
    int N;
    vector<int> P;
    TreeAncestor(int n, vector<int>& parent) {
        N = n;
        P = parent;
    }
    
    int getKthAncestor(int node, int k) {
        while(k--) {
            node = P[node];
        }
        return node;
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */",1000000000
353351052,cpp,"1 month, 3 weeks",1592104378,Runtime Error,N/A,/submissions/detail/353351052/,Not Pending,Kth Ancestor of a Tree Node,N/A,"class TreeAncestor {
public:
    int N;
    vector<int> P;
    TreeAncestor(int n, vector<int>& parent) {
        N = n;
        P = parent;
    }
    
    int getKthAncestor(int node, int k) {
        if(k == 0) {
            return node;
        } else {
            return getKthAncestor(P[node], k-1);
        }
    }
};

/**
 * Your TreeAncestor object will be instantiated and called as such:
 * TreeAncestor* obj = new TreeAncestor(n, parent);
 * int param_1 = obj->getKthAncestor(node,k);
 */",1000000000
353349168,cpp,"1 month, 3 weeks",1592104202,Accepted,776 ms,/submissions/detail/353349168/,Not Pending,Minimum Number of Days to Make m Bouquets,63.5 MB,"typedef long long ll;

class Solution {
public:
    int minDays(vector<int>& B, int m, int k) {
        if(B.size() < ll(m) * ll(k)) return -1;
        const int N = (int)B.size();
        double lo = 0;
        double high = 1e10;
        
        for(int i=0;i<=100;++i) {
            double limit = (lo+high) / 2;
            
            int nb = 0;
            int ns = 0;
            for(int j=0;j<N;++j) {
                if(B[j] > limit) ns = 0;
                else {
                    ns += 1;
                    if(ns==k) {
                        nb++;
                        ns = 0;
                    }
                }
            }
            if(nb >= m) {
                high = limit-1;
            }
            else {
                lo = limit+1;
            }
        }
        
        return (int)((lo+high)*0.5);
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
353346407,python,"1 month, 3 weeks",1592103934,Time Limit Exceeded,N/A,/submissions/detail/353346407/,Not Pending,Minimum Number of Days to Make m Bouquets,N/A,"class Solution(object):
    def minDays(self, bloomDay, m, k):
        """"""
        :type bloomDay: List[int]
        :type m: int
        :type k: int
        :rtype: int
        """"""
        
        if len(bloomDay) < m * k: return -1
        
        lo, high = 0, 1e10
        for i in range(200):
            limit = (lo+high) / 2
            nbouquet = 0
            nstraight = 0
            for j in bloomDay:
                if j > limit:
                    nstraight = 0
                else:
                    nstraight += 1
                    if nstraight == k:
                        nbouquet += 1
                        nstraight = 0
            if nbouquet >= m:
                high = limit-1
            else:
                lo = limit+1
                
                
        return int((lo+high)/2)
                        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
353344545,python,"1 month, 3 weeks",1592103766,Time Limit Exceeded,N/A,/submissions/detail/353344545/,Not Pending,Minimum Number of Days to Make m Bouquets,N/A,"class Solution(object):
    def minDays(self, bloomDay, m, k):
        """"""
        :type bloomDay: List[int]
        :type m: int
        :type k: int
        :rtype: int
        """"""
        
        if len(bloomDay) < m * k: return -1
        
        lo, high = 0, 1e20
        for i in range(1000):
            limit = (lo+high) / 2
            nbouquet = 0
            nstraight = 0
            for j in bloomDay:
                if j > limit:
                    nstraight = 0
                else:
                    nstraight += 1
                    if nstraight == k:
                        nbouquet += 1
                        nstraight = 0
            if nbouquet >= m:
                high = limit-1
            else:
                lo = limit+1
                
                
        return int((lo+high)/2)
                        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000
353331095,python,"1 month, 3 weeks",1592102591,Accepted,760 ms,/submissions/detail/353331095/,Not Pending,Least Number of Unique Integers after K Removals,33.9 MB,"class Solution(object):
    def findLeastNumOfUniqueInts(self, arr, k):
        """"""
        :type arr: List[int]
        :type k: int
        :rtype: int
        """"""
        from collections import defaultdict
        
        d = defaultdict(int)
        for i in arr:
            d[i] += 1
            
        dd = sorted([v for _, v in d.items()])
        
        n_used = 0
        ret = len(dd)
        
        for v in dd:
            
            if v + n_used > k:
                break
            ret -= 1
            
            n_used += v
            if n_used >= k:
                break
            
        return ret
                
            
            
            
            
            
        
        
        
        
            
        ",1111111111111111111111111111111111111111111
353318343,python,"1 month, 3 weeks",1592101858,Accepted,36 ms,/submissions/detail/353318343/,Not Pending,Running Sum of 1d Array,12.8 MB,"class Solution(object):
    def runningSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        
        ret = []
        tot = 0
        for i in nums:
            tot += i
            ret.append(tot)
        return ret
    
        ",11111111111111111111111111111111111111111111111111111
321996579,python,4 months,1586412790,Time Limit Exceeded,N/A,/submissions/detail/321996579/,Not Pending,Maximum Subarray,N/A,"class Solution(object):
    def maxSubArray(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        largest = sum(nums)
        for i in range(n):
            cur_sum = 0
            for j in range(i,n):
                cur_sum += nums[j]
                largest = max(largest, cur_sum)
        return largest
    ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
153666158,python3,"2 years, 3 months",1525981886,Accepted,60 ms,/submissions/detail/153666158/,Not Pending,Min Cost Climbing Stairs,N/A,"class Solution:
    def minCostClimbingStairs(self, cost):
        """"""
        :type cost: List[int]
        :rtype: int
        """"""
        cost += [0]
        for i in range(2,len(cost)):
            c = cost[i]
            cost[i] = 987654321
            if i-1>=0: cost[i] = min(cost[i], cost[i-1]+c)
            if i-2>=0: cost[i] = min(cost[i], cost[i-2]+c)
        return cost[-1]
            
            ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
153665689,python3,"2 years, 3 months",1525981546,Accepted,44 ms,/submissions/detail/153665689/,Not Pending,Longest Palindrome,N/A,"class Solution:
    def longestPalindrome(self, s):
        from collections import Counter
        return sum([2*(v // 2) for k,v in Counter(s).items()]) + int(sum([v%2 for k,v in Counter(s).items()])>0)
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
153665609,python3,"2 years, 3 months",1525981488,Accepted,40 ms,/submissions/detail/153665609/,Not Pending,Longest Palindrome,N/A,"class Solution:
    def longestPalindrome(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        from collections import Counter
        return sum([2*(v // 2) for k,v in Counter(s).items()]) + int(sum([v%2 for k,v in Counter(s).items()])>0)
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
153315096,python3,"2 years, 3 months",1525767919,Accepted,40 ms,/submissions/detail/153315096/,Not Pending,Reverse String II,N/A,"class Solution:
    def reverseStr(self, s, k):
        """"""
        :type s: str
        :type k: int
        :rtype: str
        """"""
        s = list(s)
        for i in range(0, len(s), 2*k):
            s[i:i+k] = s[i:i+k][::-1]
        return """".join(s)
        ",111111111111111111111111111111111111111111111111111111111111
153165598,mysql,"2 years, 3 months",1525680681,Accepted,165 ms,/submissions/detail/153165598/,Not Pending,Duplicate Emails,N/A,"# Write your MySQL query statement below
SELECT DISTINCT Email
    FROM Person
    GROUP BY Email
    HAVING count(*) > 1;",111111111111111
153163564,python3,"2 years, 3 months",1525679445,Accepted,280 ms,/submissions/detail/153163564/,Not Pending,Word Search,N/A,"class Solution:
    def exist(self, board, word):
        """"""
        :type board: List[List[str]]
        :type word: str
        :rtype: bool
        """"""
        
        N = len(board)
        if N == 0: return False
        M = len(board[0])
        if len(word) == 0: return False
        visited = [[False for j in range(M)] for i in range(N)]
        
        def match(i, j, k):
            if k == len(word):
                return True
            if i < 0 or i >= N: return False
            if j < 0 or j >= M: return False
            if visited[i][j]: return False
            if word[k] != board[i][j]: return False
            visited[i][j] = True
            for di, dj in zip([0,0,-1,1],[-1,1,0,0]):
                if di == 0 and dj == 0: continue
                if match(i+di, j+dj, k+1):
                    return True
            visited[i][j] = False
            return False
            
        for i in range(N):
            for j in range(M):
                if match(i,j,0):
                    return True
        return False",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
153162669,python3,"2 years, 3 months",1525678883,Accepted,1104 ms,/submissions/detail/153162669/,Not Pending,Surrounded Regions,N/A,"class Solution:
    def solve(self, board):
        """"""
        :type board: List[List[str]]
        :rtype: void Do not return anything, modify board in-place instead.
        """"""
        N = len(board)
        if N == 0: return
        M = len(board[0])
        
        def bfs(si, sj):
            q = [(si,sj)]
            zp = [(si,sj)]
            visited = [[False for j in range(M)] for i in range(N)]
            visited[si][sj] = True
            while len(q) > 0:
                p = []
                for c in q:
                    ci, cj = c
                    for disp in [(-1,0), (1,0), (0,-1), (0,1)]:
                        di = ci + disp[0]
                        dj = cj + disp[1]
                        if di == -1 or di == N: return
                        if dj == -1 or dj == M: return
                        if board[di][dj] != 'O': continue
                        if visited[di][dj]: continue
                        visited[di][dj] = True
                        p.append((di,dj))
                        zp.append((di,dj))
                q = p[:]
            for c in zp:
                ci, cj = c
                board[ci][cj] = 'X'
                
                
        for i in range(N):
            for j in range(M):
                if board[i][j] == 'O':
                    bfs(i, j)
        
        ",11111111111111111111111111111111111111111111111111111111111
153162598,python3,"2 years, 3 months",1525678837,Wrong Answer,N/A,/submissions/detail/153162598/,Not Pending,Surrounded Regions,N/A,"class Solution:
    def solve(self, board):
        """"""
        :type board: List[List[str]]
        :rtype: void Do not return anything, modify board in-place instead.
        """"""
        N = len(board)
        if N == 0: return board
        M = len(board[0])
        
        def bfs(si, sj):
            q = [(si,sj)]
            zp = [(si,sj)]
            visited = [[False for j in range(M)] for i in range(N)]
            visited[si][sj] = True
            while len(q) > 0:
                p = []
                for c in q:
                    ci, cj = c
                    for disp in [(-1,0), (1,0), (0,-1), (0,1)]:
                        di = ci + disp[0]
                        dj = cj + disp[1]
                        if di == -1 or di == N: return
                        if dj == -1 or dj == M: return
                        if board[di][dj] != 'O': continue
                        if visited[di][dj]: continue
                        visited[di][dj] = True
                        p.append((di,dj))
                        zp.append((di,dj))
                q = p[:]
            for c in zp:
                ci, cj = c
                board[ci][cj] = 'X'
                
                
        for i in range(N):
            for j in range(M):
                if board[i][j] == 'O':
                    bfs(i, j)
        
        ",10111111111111111111111111111111111111111111111111111111111
152967875,cpp,"2 years, 3 months",1525573064,Accepted,144 ms,/submissions/detail/152967875/,Not Pending,Count Unique Characters of All Substrings of a Given String,N/A,"class Solution {
public:
    int uniqueLetterString(string S) {
        long long ret = 0;
        string T = S;
        sort(T.begin(), T.end());
        int X = distance(T.begin(), unique(T.begin(), T.end()));
        for(int i = 0 ; i < S.size() ; ++i) {
            int v[26] = {0};
            int C = 0;
            int P = 0;
            for(int j = i ; j < S.size() ;++j ) {
                v[S[j]-'A']++;
                if(v[S[j]-'A']==1) {
                    C++;
                    ret += C;
                } else {
                    if(v[S[j]-'A']==2) {
                        C--;
                        P++;
                    }
                    ret += C;
                }
                if(P >= X) {
                    break;
                }        
            }
        }
        return (int)(ret % 1000000007LL);
    }
};",111111111111111111111111111111111111111111111111111
152966528,cpp,"2 years, 3 months",1525572683,Wrong Answer,N/A,/submissions/detail/152966528/,Not Pending,Count Unique Characters of All Substrings of a Given String,N/A,"class Solution {
public:
    int uniqueLetterString(string S) {
        long long ret = 0;
        
        for(int i = 0 ; i < S.size() ; ++i) {
            int v[26] = {0};
            int C = 0;
            int P = 0;
            for(int j = i ; j < S.size() ;++j ) {
                v[S[j]-'A']++;
                if(v[S[j]-'A']==1) {
                    C++;
                    ret += C;
                } else {
                    if(v[S[j]-'A']==2) {
                        C--;
                        P++;
                    }
                    ret += C;
                }
                if(P >= 25) {
                    break;
                }        
            }
        }
        return (int)(ret % 1000000007LL);
    }
};",111111111111111111111111000011100000000000000000000
152966138,cpp,"2 years, 3 months",1525572565,Wrong Answer,N/A,/submissions/detail/152966138/,Not Pending,Count Unique Characters of All Substrings of a Given String,N/A,"class Solution {
public:
    int uniqueLetterString(string S) {
        long long ret = 0;
        
        for(int i = 0 ; i < S.size() ; ++i) {
            int v[26] = {0};
            int C = 0;
            int P = 0;
            for(int j = i ; j < S.size() ;++j ) {
                v[S[j]-'A']++;
                if(v[S[j]-'A']==1) {
                    C++;
                    ret += C;
                } else {
                    if(v[S[j]-'A']==2) C--;
                    P++;
                    ret += C;
                }
                if(P >= 25) {
                    break;
                }        
            }
        }
        return (int)(ret % 1000000007LL);
    }
};",111111111111111111111000000000000000000000000000000
152963293,cpp,"2 years, 3 months",1525571788,Accepted,18 ms,/submissions/detail/152963293/,Not Pending,Consecutive Numbers Sum,N/A,"class Solution {
public:
    int consecutiveNumbersSum(int N) {
        int ret = 0;
        for(long long i = 2 ; ; ++i) {
            long long sum = i*(i-1) / 2;
            if( N <= sum ) break;
            if( (N-sum)%i == 0) {
                ++ret;
            }
        }
        return ret+1;
    }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152960470,python3,"2 years, 3 months",1525570992,Accepted,36 ms,/submissions/detail/152960470/,Not Pending,Masking Personal Information,N/A,"class Solution:
    def maskPII(self, S):
        """"""
        :type S: str
        :rtype: str
        """"""
        if ""@"" in S:
            S = S.lower()
            S = S.split(""@"")
            return S[0][0] + ""*****"" + S[0][-1] + ""@"" + S[1]
        else:
            S = [d for d in S if d.isdigit()]
            if len(S) == 10:
                return ""***-***-"" + """".join(S[-4:])
            else:
                return ""+"" + ""*"" * (len(S)-10) + ""-"" + ""***-***-"" + """".join(S[-4:])",111111111111111111111111111111111111111111111111111111111111111111
152958597,python3,"2 years, 3 months",1525570466,Accepted,80 ms,/submissions/detail/152958597/,Not Pending,Positions of Large Groups,N/A,"class Solution:
    def largeGroupPositions(self, S):
        """"""
        :type S: str
        :rtype: List[List[int]]
        """"""
        L = 0
        st = 0
        A = None
        ret = []
        for i, c in enumerate(S):
            if A == c:
                L += 1
            else:
                if L >= 3:
                    ret.append([st, i-1])    
                A = c
                st = i
                L = 1
        if L >= 3:
            ret.append([st, len(S)-1])
        return ret",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152624967,python3,"2 years, 3 months",1525342287,Accepted,88 ms,/submissions/detail/152624967/,Not Pending,Spiral Matrix,N/A,"class Solution:
    def spiralOrder(self, matrix):
        import numpy as np
        mat = np.array(matrix)
        ret = []
        while mat.shape[0] > 0:
            ret += mat[0,:].tolist()
            mat = np.rot90(mat[1:,:])
        return ret",1111111111111111111111
152624591,python3,"2 years, 3 months",1525341878,Accepted,36 ms,/submissions/detail/152624591/,Not Pending,Spiral Matrix,N/A,"class Solution:
    def spiralOrder(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: List[int]
        """"""
        if len(matrix) == 0: return []
        
        N, M = len(matrix), len(matrix[0])
        ret = []
        i, j = 0, -1
        while True:
            if M <= 0: break
            for k in range(M):
                j += 1
                ret.append(matrix[i][j])
            if N-1 <= 0: break
            for k in range(N-1):
                i += 1
                ret.append(matrix[i][j])
            if M-1 <= 0: break
            for k in range(M-1):
                j -= 1
                ret.append(matrix[i][j])
            if N-2 <= 0: break
            for k in range(N-2):
                i -= 1
                ret.append(matrix[i][j])
            N -= 2
            M -= 2
        return ret
    ",1111111111111111111111
152624372,python3,"2 years, 3 months",1525341629,Wrong Answer,N/A,/submissions/detail/152624372/,Not Pending,Spiral Matrix,N/A,"class Solution:
    def spiralOrder(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: List[int]
        """"""
        if len(matrix) == 0: return []
        
        N, M = len(matrix), len(matrix[0])
        ret = []
        i, j = 0, -1
        while N > 0 and M > 0:
            for k in range(M):
                j += 1
                ret.append(matrix[i][j])
            for k in range(N-1):
                i += 1
                ret.append(matrix[i][j])
            for k in range(M-1):
                j -= 1
                ret.append(matrix[i][j])
            for k in range(N-2):
                i -= 1
                ret.append(matrix[i][j])
            N -= 2
            M -= 2
        return ret
    ",1011010011100111010111
152624352,python3,"2 years, 3 months",1525341609,Runtime Error,N/A,/submissions/detail/152624352/,Not Pending,Spiral Matrix,N/A,"class Solution:
    def spiralOrder(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: List[int]
        """"""
        N, M = len(matrix), len(matrix[0])
        ret = []
        i, j = 0, -1
        while N > 0 and M > 0:
            for k in range(M):
                j += 1
                ret.append(matrix[i][j])
            for k in range(N-1):
                i += 1
                ret.append(matrix[i][j])
            for k in range(M-1):
                j -= 1
                ret.append(matrix[i][j])
            for k in range(N-2):
                i -= 1
                ret.append(matrix[i][j])
            N -= 2
            M -= 2
        return ret
    ",
152623981,python3,"2 years, 3 months",1525341239,Accepted,136 ms,/submissions/detail/152623981/,Not Pending,Minimum Moves to Equal Array Elements,N/A,"class Solution:
    def minMoves(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums = sorted(nums)
        mini = nums[0]
        ret = 0
        for i in range(len(nums)-1, 0, -1):
            nums[i] += ret
            diff = nums[i] - mini
            ret += diff
            mini += diff
        return ret
            ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152623572,python3,"2 years, 3 months",1525340813,Time Limit Exceeded,N/A,/submissions/detail/152623572/,Not Pending,Minimum Moves to Equal Array Elements,N/A,"class Solution:
    def minMoves(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        print(len(nums))
        ret = 0
        print(max(nums))
        print(min(nums))
        while True:
            if nums.count(nums[0]) == len(nums):
                break
            best = None
            for i in range(len(nums)):
                if best == None or nums[i] > nums[best]:
                    best = i
            needed = nums[best]-min(nums)
            for i in range(len(nums)):
                if best != i:
                    nums[i] += needed
            ret += needed
        return ret",111111111111111111111111111111111111111111110000000000000000000000000000000000000000
152622900,cpp,"2 years, 3 months",1525340195,Time Limit Exceeded,N/A,/submissions/detail/152622900/,Not Pending,Minimum Moves to Equal Array Elements,N/A,"class Solution {
public:
    int minMoves(vector<int>& nums) {
        int ret = 0;
        const int N = (int)nums.size();
        while(1) {
            bool found = true;
            for(int i = 0 ; i < N ; ++i) {
                if(nums[i] != nums[0]) {
                    found = false;
                    break;
                }
            }
            if(found) break;
            
            int p = 0;
            for(int i = 1 ; i < N ; ++i ) {
                if(nums[i] > nums[p]) p = i;
            }
            
            int mini = nums[0];
            for(int i = 1 ; i < N ; ++i ) {
                mini = min(mini, nums[i]);
            }
            
            int needed = nums[p] - mini;
            
            for(int i = 0 ; i < N ; ++i) if(p!=i) {
                nums[i] += needed;
            }
            
            ret += needed;
        }
        return ret;
    }
};",111111111111111111111111111111111111111111111000000000000000000000000000000000000000
152622470,python3,"2 years, 3 months",1525339788,Time Limit Exceeded,N/A,/submissions/detail/152622470/,Not Pending,Minimum Moves to Equal Array Elements,N/A,"class Solution:
    def minMoves(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        ret = 0
        while True:
            if nums.count(nums[0]) == len(nums):
                break
            best = None
            for i, x in enumerate(nums):
                if best == None or nums[i] > nums[best]:
                    best = i
            needed = nums[best]-min(nums)
            for i in range(len(nums)):
                if best != i:
                    nums[i] += needed
            ret += needed
        return ret",111111111111111111111111111111111111111111100000000000000000000000000000000000000000
152622194,python3,"2 years, 3 months",1525339581,Time Limit Exceeded,N/A,/submissions/detail/152622194/,Not Pending,Minimum Moves to Equal Array Elements,N/A,"class Solution:
    def minMoves(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        ret = 0
        while True:
            if nums.count(nums[0]) == len(nums):
                break
            best = None
            for i, x in enumerate(nums):
                if best == None or nums[i] > nums[best]:
                    best = i
            for i in range(len(nums)):
                if i != best: nums[i] += 1
            ret += 1
        return ret",111111000000000000000000000000000000000000000000000000000000000000000000000000000000
152621871,python3,"2 years, 3 months",1525339350,Accepted,100 ms,/submissions/detail/152621871/,Not Pending,Minimum Index Sum of Two Lists,N/A,"class Solution:
    def findRestaurant(self, list1, list2):
        """"""
        :type list1: List[str]
        :type list2: List[str]
        :rtype: List[str]
        """"""
        p = dict()
        q = dict()
        
        for x in set(list1) | set(list2):
            p[x] = 987654321
            q[x] = 987654321
            
        for i,x in enumerate(list1):
            p[x] = i
        for i,x in enumerate(list2):
            q[x] = i
        
        mini = 987654321
        
        for x in p:
            if mini > p[x] + q[x]:
                mini = p[x] + q[x]
        return [x for x in p if p[x] + q[x] == mini]
                
            ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152478325,python3,"2 years, 3 months",1525252584,Accepted,40 ms,/submissions/detail/152478325/,Not Pending,Range Addition II,N/A,"class Solution:
    def maxCount(self, m, n, ops):
        """"""
        :type m: int
        :type n: int
        :type ops: List[List[int]]
        :rtype: int
        """"""
        if len(ops) == 0: return m*n
        
        r = [o[0] for o in ops]
        c = [o[1] for o in ops]
        rm = min(r)
        cm = min(c)
        
        return ( rm * cm )",111111111111111111111111111111111111111111111111111111111111111111111
152478306,python3,"2 years, 3 months",1525252569,Wrong Answer,N/A,/submissions/detail/152478306/,Not Pending,Range Addition II,N/A,"class Solution:
    def maxCount(self, m, n, ops):
        """"""
        :type m: int
        :type n: int
        :type ops: List[List[int]]
        :rtype: int
        """"""
        if len(ops) == 0: return 0
        
        r = [o[0] for o in ops]
        c = [o[1] for o in ops]
        rm = min(r)
        cm = min(c)
        
        return ( rm * cm )",110011011111111111111111111111111111111111111111111111111111111111111
152478278,python3,"2 years, 3 months",1525252555,Runtime Error,N/A,/submissions/detail/152478278/,Not Pending,Range Addition II,N/A,"class Solution:
    def maxCount(self, m, n, ops):
        """"""
        :type m: int
        :type n: int
        :type ops: List[List[int]]
        :rtype: int
        """"""
        r = [o[0] for o in ops]
        c = [o[1] for o in ops]
        rm = min(r)
        cm = min(c)
        
        return ( rm * cm )",
152477881,python3,"2 years, 3 months",1525252268,Accepted,40 ms,/submissions/detail/152477881/,Not Pending,1-bit and 2-bit Characters,N/A,"class Solution:
    def isOneBitCharacter(self, bits):
        """"""
        :type bits: List[int]
        :rtype: bool
        """"""
        i = 0
        ret = []
        while i < len(bits):
            if bits[i] == 1:
                i += 2
                ret.append(2)
            else:
                i += 1
                ret.append(1)
        return ret[-1] == 1",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152477542,python3,"2 years, 3 months",1525252054,Wrong Answer,N/A,/submissions/detail/152477542/,Not Pending,1-bit and 2-bit Characters,N/A,"class Solution:
    def isOneBitCharacter(self, bits):
        """"""
        :type bits: List[int]
        :rtype: bool
        """"""
        bits = """".join(map(str, bits))
        return not bits.endswith(""10"") and not bits.endswith(""11"")",111111110111011111110111111101110101001111011011110111111011110110110111111011111111111111111
152477159,python3,"2 years, 3 months",1525251809,Accepted,36 ms,/submissions/detail/152477159/,Not Pending,Construct the Rectangle,N/A,"class Solution:
    def constructRectangle(self, area):
        """"""
        :type area: int
        :rtype: List[int]
        """"""
        from math import sqrt
        for w in range(int(sqrt(area)),0,-1):
            if area % w == 0:
                return [area // w, w]",11111111111111111111111111111111111111111111111111
152326280,python3,"2 years, 3 months",1525156845,Accepted,40 ms,/submissions/detail/152326280/,Not Pending,Search in Rotated Sorted Array,N/A,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        def tsearch(l, r):
            if l == r:
                return l if nums[l] == target else -1
            m = (l+r) // 2
            if (nums[0] > target) ^ (nums[0] > nums[m]) ^ (target > nums[m]):
                l = m+1
                return tsearch(m+1, r)
            else:
                return tsearch(l, m)
        
        return -1 if len(nums) == 0 else tsearch(0, len(nums)-1)",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152326124,python3,"2 years, 3 months",1525156763,Runtime Error,N/A,/submissions/detail/152326124/,Not Pending,Search in Rotated Sorted Array,N/A,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        def tsearch(l, r):
            if l == r:
                return l if nums[l] == target else -1
            m = (l+r) // 2
            if (nums[0] > target) ^ (nums[0] > nums[m]) ^ (target > nums[m]):
                l = m+1
                return tsearch(m+1, r)
            else:
                return tsearch(l, m)
        
        return tsearch(0, len(nums)-1)",
152324504,python3,"2 years, 3 months",1525155988,Wrong Answer,N/A,/submissions/detail/152324504/,Not Pending,Search in Rotated Sorted Array,N/A,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        def tsearch(l, r):
            if r >= l:
                m1 = l+(r-l) // 3
                m2 = r-(r-l) // 3
                if nums[m1] == target: return m1
                if nums[m2] == target: return m2
                if target < nums[m1]:
                    return tsearch(l, m1-1)
                elif target > nums[m2]:
                    return tsearch(m2+1, r)
                else:
                    return tsearch(m1+1,m2-1)
            return -1
    
        return tsearch(0, len(nums)-1)",1111111111111111111111111111011011111001110110101111001111111110101111101111111111011101101101111100101110111111111101111111111111101101101011110111011101111110111011011110000111111111111011111111
152324465,python3,"2 years, 3 months",1525155968,Runtime Error,N/A,/submissions/detail/152324465/,Not Pending,Search in Rotated Sorted Array,N/A,"class Solution:
    def search(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: int
        """"""
        def tsearch(l, r):
            if r >= l:
                m1 = l+(r-l) // 3
                m2 = r-(r-l) // 3
                if nums[m1] == target: return m1
                if nums[m2] == target: return m2
                if target < ar[m1]:
                    return tsearch(l, m1-1)
                elif target > ar[m2]:
                    return tsearch(m2+1, r)
                else:
                    return tsearch(m1+1,m2-1)
            return -1
    
        return tsearch(0, len(nums)-1)",
152323631,python3,"2 years, 3 months",1525155570,Accepted,36 ms,/submissions/detail/152323631/,Not Pending,Find Peak Element,N/A,"class Solution:
    def findPeakElement(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        
        n = len(nums)
        for i in range(n-1):
            if nums[i] > nums[i+1]:
                return i
        return (n-1)",1111111111111111111111111111111111111111111111111111111111
152323570,python3,"2 years, 3 months",1525155542,Wrong Answer,N/A,/submissions/detail/152323570/,Not Pending,Find Peak Element,N/A,"class Solution:
    def findPeakElement(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        
        n = len(nums)
        for i in range(n-1):
            if nums[i] > nums[i-1]:
                return i
        return (n-1)",0111111110101101000100000111000001111010010000000000000000
152211466,python3,"2 years, 3 months",1525083667,Accepted,92 ms,/submissions/detail/152211466/,Not Pending,Repeated DNA Sequences,N/A,"class Solution:
    def findRepeatedDnaSequences(self, s):
        """"""
        :type s: str
        :rtype: List[str]
        """"""
        from collections import Counter
        c = Counter([ s[i:i+10] for i in range(len(s)-9)])
        return [x for x in c if c[x] > 1]
                ",11111111111111111111111111111111
152211372,python3,"2 years, 3 months",1525083522,Accepted,44 ms,/submissions/detail/152211372/,Not Pending,Binary Number with Alternating Bits,N/A,"class Solution:
    def hasAlternatingBits(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        def go(n, p):
            if n == 0:
                return True
            if n % 2 == p:
                return False
            return go(n//2, n % 2)
            
        return go(n, None)",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152211234,python3,"2 years, 3 months",1525083327,Accepted,120 ms,/submissions/detail/152211234/,Not Pending,Distribute Candies,N/A,"class Solution:
    def distributeCandies(self, candies):
        """"""
        :type candies: List[int]
        :rtype: int
        """"""
        kinds = set(candies)
        return min(len(kinds), len(candies)//2)",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
152210881,python3,"2 years, 3 months",1525082823,Accepted,56 ms,/submissions/detail/152210881/,Not Pending,Power of Four,N/A,"class Solution:
    def isPowerOfFour(self, n):
        """"""
        :type num: int
        :rtype: bool
        """"""
        return n ^ (n-1) == ((n<<1)-1) and 1431655765 & n > 0

152210515,python3,"2 years, 3 months",1525082286,Accepted,116 ms,/submissions/detail/152210515/,Not Pending,Wiggle Sort II,N/A,"class Solution:
    def wiggleSort(self, nums):
        """"""
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        nums.sort()
        half = len(nums[::2])
        nums[::2], nums[1::2] = nums[:half][::-1], nums[half:][::-1]
    ",11111111111111111111111111111111111111111111
151874920,python3,"2 years, 3 months",1524863087,Accepted,88 ms,/submissions/detail/151874920/,Not Pending,Find Pivot Index,N/A,"class Solution:
    def pivotIndex(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        N = len(nums)
        L = [0] * N
        R = [0] * N
        
        s = 0
        for i in range(N):
            L[i] = s
            s += nums[i]
            
        s = 0
        for i in range(N-1,-1,-1):
            R[i] = s
            s += nums[i]
            
        for i in range(N):
            if L[i] == R[i]:
                return i
        return
151874742,python3,"2 years, 3 months",1524862950,Accepted,76 ms,/submissions/detail/151874742/,Not Pending,Set Mismatch,N/A,"class Solution:
    def findErrorNums(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        N = len(nums)
        from collections import Counter
        q = dict(Counter(nums))
        
        missing = None
        duplicates = None
        for i in range(1,N+1):
            if not i in q:
                missing = i
            elif q[i] == 2:
                duplicates = i
                
        if missing is None:
            return []
        else: return [duplicates, missing]",1111111111111111111111111111111111111111111111111
151874317,python3,"2 years, 3 months",1524862670,Wrong Answer,N/A,/submissions/detail/151874317/,Not Pending,Set Mismatch,N/A,"class Solution:
    def findErrorNums(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        nums = sorted(nums)
        for i in range(len(nums)):
            if i+1 != nums[i]:
                return [nums[i], i+1]
        return []",1111111111011100111100000100000000000000000000000
151873698,python3,"2 years, 3 months",1524862278,Accepted,64 ms,/submissions/detail/151873698/,Not Pending,Reverse Vowels of a String,N/A,"class Solution:
    def reverseVowels(self, s):
        """"""
        :type s: str
        :rtype: str
        """"""
        s = list(s)
        q = set(""aeiouAEIOU"")
        v = [c for c in s if c in q][::-1]
        j = 0
        for i, c in enumerate(s):
            if c in q:
                s[i] = v[j]
                j += 1
        return """".join(s)
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151873665,python3,"2 years, 3 months",1524862263,Wrong Answer,N/A,/submissions/detail/151873665/,Not Pending,Reverse Vowels of a String,N/A,"class Solution:
    def reverseVowels(self, s):
        """"""
        :type s: str
        :rtype: str
        """"""
        s = list(s)
        q = set(""aeiou"")
        v = [c for c in s if c in q][::-1]
        j = 0
        for i, c in enumerate(s):
            if c in q:
                s[i] = v[j]
                j += 1
        return """".join(s)
        ",1111111100011101111111111111110110010011001100111000001101011000111001101111010110100001001110010010001110010010100110000000101000111001000100101111111110000101011010001101101100100000111111010110000101000010101110111000111100001011001011011000011001000110011000011000100111110011000001110101100111110011010000001101011000110011010010111000011001111001100111110011101000111001111111111111111111111111111111111101111111110111111111111111111111011111111111001111111111111100111111110
151873348,python3,"2 years, 3 months",1524862078,Accepted,48 ms,/submissions/detail/151873348/,Not Pending,Third Maximum Number,N/A,"class Solution:
    def thirdMax(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        maxi = []
        for i in range(3):
            p = None
            for j, x in enumerate(nums):
                if x is None: continue
                if p is None or nums[p] < x:
                    p = j
            if p != None:
                y = nums[p]
                for j, x in enumerate(nums):
                    if x == y:
                        nums[j] = None
                maxi.append(y)
                nums[p] = None
            else:
                maxi.append(None)
                
        return maxi[2] if maxi[2] != None else maxi[0]
            
                    
                ",11111111111111111111111111
151872219,python3,"2 years, 3 months",1524861354,Accepted,40 ms,/submissions/detail/151872219/,Not Pending,Base 7,N/A,"class Solution:
    def convertToBase7(self, num):
        """"""
        :type num: int
        :rtype: str
        """"""
        def convert(num):
            if num == 0:
                return """"
            return convert(num//7) + str(num % 7) 
        sign = ""-"" if num < 0 else """"
        return sign + convert(abs(num)) if num != 0 else ""0""",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151872126,python3,"2 years, 3 months",1524861301,Wrong Answer,N/A,/submissions/detail/151872126/,Not Pending,Base 7,N/A,"class Solution:
    def convertToBase7(self, num):
        """"""
        :type num: int
        :rtype: str
        """"""
        def convert(num):
            if num == 0:
                return """"
            return convert(num//7) + str(num % 7) 
        sign = ""-"" if num < 0 else """"
        return sign + convert(abs(num))",1101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151818554,python3,"2 years, 3 months",1524815558,Accepted,1752 ms,/submissions/detail/151818554/,Not Pending,Prime Number of Set Bits in Binary Representation,N/A,"class Solution:
    def countPrimeSetBits(self, L, R):
        """"""
        :type L: int
        :type R: int
        :rtype: int
        """"""
        
        def count(n):
            if n == 0: return 0
            return n % 2 + count(n//2)
                
        S = set([2,3,5,7,11,13,17,19])
        return sum([ count(i) in S for i in range(L,R+1) ])
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151818460,python3,"2 years, 3 months",1524815495,Time Limit Exceeded,N/A,/submissions/detail/151818460/,Not Pending,Prime Number of Set Bits in Binary Representation,N/A,"class Solution:
    def countPrimeSetBits(self, L, R):
        """"""
        :type L: int
        :type R: int
        :rtype: int
        """"""
        
        def count(n):
            if n == 0: return 0
            return n % 2 + count(n//2)
                
        return sum([ [2,3,5,7,11,13,17,19].count(count(i)) > 0 for i in range(L,R+1) ])
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151803355,python3,"2 years, 3 months",1524807796,Accepted,44 ms,/submissions/detail/151803355/,Not Pending,Longest Common Prefix,N/A,"class Solution:
    def longestCommonPrefix(self, strs):
        """"""
        :type strs: List[str]
        :rtype: str
        """"""
        if len(strs) == 0: return """"
        s = min(strs, key= lambda x : len(x))
        return ([s[:i] for i in range(0,len(s)+1) if len(strs) == sum([w.startswith(s[:i]) for w in strs])])[-1]
            
            
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151803284,python3,"2 years, 3 months",1524807769,Runtime Error,N/A,/submissions/detail/151803284/,Not Pending,Longest Common Prefix,N/A,"class Solution:
    def longestCommonPrefix(self, strs):
        """"""
        :type strs: List[str]
        :rtype: str
        """"""
        s = min(strs, key= lambda x : len(x))
        return ([s[:i] for i in range(0,len(s)+1) if len(strs) == sum([w.startswith(s[:i]) for w in strs])])[-1]
            
            
        ",
151743431,python3,"2 years, 3 months",1524774130,Accepted,48 ms,/submissions/detail/151743431/,Not Pending,Binary Watch,N/A,"class Solution:
    def readBinaryWatch(self, num):
        """"""
        :type num: int
        :rtype: List[str]
        """"""
        
        def count_bits(n):
            if n == 0: return 0
            return count_bits(n//2) + n % 2
        
        ret = []
        for hh in range(12):
            for mm in range(60):
                if count_bits(hh) + count_bits(mm) == num:
                    ret.append(""%d:%02d"" % (hh, mm))
        return ret",1111111111
151740954,python3,"2 years, 3 months",1524772351,Runtime Error,N/A,/submissions/detail/151740954/,Not Pending,Spiral Matrix,N/A,"class Solution:
    def spiralOrder(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: List[int]
        """"""
        
        ret = []
        
        
        x, y = 0, 0
        m, n = len(matrix), len(matrix[0])
        
        while m > 0 and n > 0:
            for i in range(m):
                ret.append(matrix[y][x])
                x += 1
            x -= 1
            y += 1

            for i in range(n-1):
                ret.append(matrix[y][x])
                y += 1

            y -= 1
            x -= 1

            for i in range(m-1):
                ret.append(matrix[y][x])
                x -= 1
            x += 1
            y -= 1
            for i in range(n-2):
                ret.append(matrix[y][x])
                y -= 1
            y += 1
            x += 1
            m -= 2
            n -= 2
        return ret
    ",
151676380,python3,"2 years, 3 months",1524724227,Accepted,36 ms,/submissions/detail/151676380/,Not Pending,Reach a Number,N/A,"class Solution:
    def reachNumber(self, target):
        """"""
        :type target: int
        :rtype: int
        """"""
        target = abs(target)
        k = int((-1 + math.sqrt(1+8*target)) / 2)
        while True:
            delta = (k * (k+1) // 2 - target) 
            if delta >= 0 and delta % 2 == 0: break
            k += 1
        return k",1111111111111111111111111111111111111111111111111111111111111111111111111
151666486,python3,"2 years, 3 months",1524719875,Accepted,988 ms,/submissions/detail/151666486/,Not Pending,Course Schedule,N/A,"class Solution:
    def canFinish(self, NC, P):
        """"""
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """"""
        adj = [[] for i in range(NC)]
        
        for f, t in P:
            adj[f].append(t)
            
        
        def take(v):
            if visited[v]:
                return False
            visited[v] = True
            for x in adj[v]:
                if not take(x):
                    return False
            visited[v] = False
            return True
        
        for i in range(NC):
            visited = [False for i in range(NC)]
            if not take(i):
                return False
        return True
            ",111111111111111111111111111111111111111111
151666325,python3,"2 years, 3 months",1524719795,Wrong Answer,N/A,/submissions/detail/151666325/,Not Pending,Course Schedule,N/A,"class Solution:
    def canFinish(self, NC, P):
        """"""
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """"""
        adj = [[] for i in range(NC)]
        
        for f, t in P:
            adj[f].append(t)
            
        
        def take(v):
            if visited[v]:
                return False
            visited[v] = True
            for x in adj[v]:
                if not take(x):
                    return False
            return True
        
        for i in range(NC):
            visited = [False for i in range(NC)]
            
            if not take(i):
                return False
        return True
            ",111111111111101111111111110110111111010011
151666104,python3,"2 years, 3 months",1524719687,Runtime Error,N/A,/submissions/detail/151666104/,Not Pending,Course Schedule,N/A,"class Solution:
    def canFinish(self, NC, P):
        """"""
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """"""
        adj = [[] for i in range(NC)]
        
        for f, t in P:
            adj[f].append(t)
            
        
        def take(v, start):
            if visited[v] and v == start:
                return False
            visited[v] = True
            for x in adj[v]:
                if not take(x, start):
                    return False
            return True
        
        for i in range(NC):
            visited = [False for i in range(NC)]
            
            if not take(i, i):
                return False
        return True
            ",
151665937,python3,"2 years, 3 months",1524719620,Wrong Answer,N/A,/submissions/detail/151665937/,Not Pending,Course Schedule,N/A,"class Solution:
    def canFinish(self, NC, P):
        """"""
        :type numCourses: int
        :type prerequisites: List[List[int]]
        :rtype: bool
        """"""
        adj = [[] for i in range(NC)]
        
        for f, t in P:
            adj[f].append(t)
            
        
        def take(v, start):
            if visited[v] and v == start:
                return False
            visited[v] = True
            for x in adj[v]:
                if not visited[x] and not take(x, start):
                    return False
            return True
        
        for i in range(NC):
            visited = [False for i in range(NC)]
            
            if not take(i, i):
                return False
        return True
            ",111100111111010000000000101001011000101110
151612580,python3,"2 years, 3 months",1524692240,Accepted,36 ms,/submissions/detail/151612580/,Not Pending,Same Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSameTree(self, p, q):
        """"""
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """"""
        if p == None and q == None:
            return True
        if p == None or q == None:
            return False
        if p.val != q.val: 
            return False
        return self.isSameTree(p.left, q.left) and self.isSameTree(p.right, q.right)
            
        ",111111111111111111111111111111111111111111111111111111111
151612362,python3,"2 years, 3 months",1524692091,Accepted,132 ms,/submissions/detail/151612362/,Not Pending,Two Sum IV - Input is a BST,N/A,"class Solution:
    def findTarget(self, root, k):
        """"""
        :type root: TreeNode
        :type k: int
        :rtype: bool
        """"""
        def find(v, x):
            if v == None: return False
            if v.val == x and not v.flag: 
                return True
            if x > v.val: return find(v.right, x)
            else: return find(v.left, x)

        def trip(v):
            if v == None: return False
            v.flag = True
            if find(root, k-v.val): return True
            v.flag = False
            if trip(v.left): return True
            if trip(v.right): return True
            return False
    
        def set_flag(v):
            if v == None: return False
            v.flag = False
            set_flag(v.left)  
            set_flag(v.right)
        
        set_flag(root)
        return trip(root)
    
        
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151610352,python3,"2 years, 3 months",1524690811,Wrong Answer,N/A,/submissions/detail/151610352/,Not Pending,Two Sum IV - Input is a BST,N/A,"class Solution:
    def findTarget(self, root, k):
        """"""
        :type root: TreeNode
        :type k: int
        :rtype: bool
        """"""
        def find(v, x):
            if v == None: return False
            if v.val == x: return True
            if x > v.val: return find(v.right, x)
            else: return find(v.left, x)

        def trip(v):
            if v == None: return False
            if find(root, k-v.val): return True
            if trip(v.left): return True
            if trip(v.right): return True
            return False
        return trip(root)
        
        ",1111110111111111111111111110111011111011111110111111110110111111111100111110101111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110111111111111111111111111111111111111101111111111111111111
151558585,python3,"2 years, 3 months",1524654018,Accepted,244 ms,/submissions/detail/151558585/,Not Pending,Validate Binary Search Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isValidBST(self, root):
        """"""
        :type root: TreeNode
        :rtype: bool
        """"""
        if root == None:
            return True
        
        def get(v, func):
            if v == None:
                return None
            ret = v.val
            l = get(v.left, func)
            if l != None: ret = func(ret, l)
            r = get(v.right, func)
            if r != None: ret = func(ret, r)
            return ret
        
        if root.left != None and get(root.left, max) >= root.val: return False
        if root.right != None and get(root.right, min) <= root.val: return False
        return self.isValidBST(root.left) and self.isValidBST(root.right)",111111111111111111111111111111111111111111111111111111111111111111111111111
151558259,python3,"2 years, 3 months",1524653620,Wrong Answer,N/A,/submissions/detail/151558259/,Not Pending,Validate Binary Search Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isValidBST(self, root):
        """"""
        :type root: TreeNode
        :rtype: bool
        """"""
        if root == None:
            return True
        if root.left != None and root.left.val >= root.val: return False
        if root.right != None and root.right.val <= root.val: return False
        return self.isValidBST(root.left) and self.isValidBST(root.right)",111111111111010011111111111111111111111111111111111111111111111111111011110
151558232,python3,"2 years, 3 months",1524653598,Wrong Answer,N/A,/submissions/detail/151558232/,Not Pending,Validate Binary Search Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isValidBST(self, root):
        """"""
        :type root: TreeNode
        :rtype: bool
        """"""
        if root == None:
            return True
        if root.left != None and root.left.val > root.val: return False
        if root.right != None and root.right.val < root.val: return False
        return self.isValidBST(root.left) and self.isValidBST(root.right)",111110011111010011111111111111111111101111111111111111011110000111111011110
151558023,python3,"2 years, 3 months",1524653349,Accepted,128 ms,/submissions/detail/151558023/,Not Pending,Sort List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def sortList(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        cur = head
        L = []
        while cur != None:
            L.append(cur.val)
            cur = cur.next
        head = ListNode(None)
        cur = head
        for x in sorted(L):
            cur.next = ListNode(x)
            cur = cur.next        
        return head.next
        ",1111111111111111
151558003,python3,"2 years, 3 months",1524653329,Wrong Answer,N/A,/submissions/detail/151558003/,Not Pending,Sort List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def sortList(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        cur = head
        L = []
        while cur != None:
            L.append(cur.val)
            cur = cur.next
        head = ListNode(None)
        cur = head
        for x in L:
            cur.next = ListNode(x)
            cur = cur.next        
        return head.next
        ",0011000010000000
151557985,python3,"2 years, 3 months",1524653313,Runtime Error,N/A,/submissions/detail/151557985/,Not Pending,Sort List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def sortList(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        cur = head
        L = []
        while cur != None:
            L.append(cur.val)
            cur = cur.next
        head = TreeNode(None)
        cur = head
        for x in L:
            cur.next = ListNode(x)
            cur = cur.next        
        return head.next
        ",
151557228,python3,"2 years, 3 months",1524652472,Wrong Answer,N/A,/submissions/detail/151557228/,Not Pending,Sort List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def sortList(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        if head == None or head.next == None:
            return head
        
        left = None
        right = None
        
        mid = head
        cur = head.next
        while cur != None:
            print(cur.val, )
            if mid.val > cur.val:
                if left != None: left.next = cur
                left = cur
            else:
                if right != None: right.next = cur
                right = cur
            cur = cur.next
        print()
        
        print(mid.val)
        def printList(x):
            while x != None:
                print(x.val, )
                x = x.next
            print()
        
        print(printList(left))
        print(printList(right))
        left = self.sortList(left)
        right = self.sortList(right)
        
        def addNodes(cur, inp):
            cur.next = inp
            while cur.next != None:
                cur = cur.next
            return cur
                
        cur = TreeNode(None)
        tail = addNodes(cur, left)
        tail = addNodes(cur, mid)
        tail = addNodes(cur, right)
        
        return cur.next
            
        
        ",0011000000000000
151556612,python3,"2 years, 3 months",1524651649,Accepted,104 ms,/submissions/detail/151556612/,Not Pending,Maximum Product of Three Numbers,N/A,"class Solution:
    def maximumProduct(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums = sorted(nums)
        ret = nums[-3] * nums[-2] * nums[-1]
        ret = max(ret, nums[-1] * nums[0] * nums[1])
        return ret
        ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111
151556464,python3,"2 years, 3 months",1524651473,Accepted,52 ms,/submissions/detail/151556464/,Not Pending,Maximum Product Subarray,N/A,"class Solution:
    def maxProduct(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        best = max(nums)
        mini, maxi = 0, 0
        
        if nums[0] < 0:
            mini = nums[0]
        if nums[0] > 0:
            maxi = nums[0]

        for x in nums[1:]:
            if x == 0:
                mini2, maxi2 = 0, 0
            else:                
                maxi2 = max(0,max(mini*x, maxi*x))
                mini2 = min(0,min(mini*x, maxi*x))
            
            if maxi2 == 0 and x > 0:
                maxi2 = x
            if mini2 == 0 and x < 0:
                mini2 = x
    
            best = max(best, maxi2)
            maxi, mini = maxi2, mini2
        return best",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151555177,python3,"2 years, 3 months",1524650008,Wrong Answer,N/A,/submissions/detail/151555177/,Not Pending,Maximum Product Subarray,N/A,"class Solution:
    def maxProduct(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        best = max(nums)
        mini, maxi = 1, 1
        for x in nums:
            if x == 0:
                mini, maxi = 1, 1
                continue
            else:
                maxi *= x
                mini *= x
                if maxi < mini:
                    maxi, mini = mini, maxi
                best = max(best, maxi)
        return best",1111111111111111110001111111011111111111111011111111111011111111111111111111111111110111111011101110101111111111111111111101111111111100111011111111111110111111111111111111100011101111
151555142,python3,"2 years, 3 months",1524649966,Wrong Answer,N/A,/submissions/detail/151555142/,Not Pending,Maximum Product Subarray,N/A,"class Solution:
    def maxProduct(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        best = max(nums)
        mini, maxi = 1, 1
        for x in nums:
            if x == 0:
                best = max(best, maxi)
                mini, maxi = 1, 1
                continue
            else:
                maxi *= x
                mini *= x
                if maxi < mini:
                    maxi, mini = mini, maxi
                best = max(best, maxi)
        return best",1101111111111111110001111111011111111111111011111111111011111111111111110111111111110111111011101110101111111111101111111101111111111100111011111111111110111111111111111111100011101111
151554462,python3,"2 years, 3 months",1524649163,Accepted,36 ms,/submissions/detail/151554462/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = ""-"" if nume * deno < 0 else """"
        nume, deno = abs(nume), abs(deno)
        ret += str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            nume *= 10
            div, mod = nume//deno, nume % deno
            k = (div, mod)
            if k in memo:
                p = memo[k]
                return ret + """".join(nums[:p]) + ""(%s)"" % """".join(nums[p:])
            
            memo[k] = len(nums)
            nums.append(str(div))
            nume = mod
            
        ret += """".join(nums)
        return ret
            ",11111111111111111111111111111111111
151554274,python3,"2 years, 3 months",1524648964,Accepted,36 ms,/submissions/detail/151554274/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = """"
        if nume * deno < 0:
            ret = ""-""
        nume = abs(nume)
        deno = abs(deno)            
        ret += str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            nume *= 10
            if (nume//deno, nume%deno) in memo:
                p = memo[(nume//deno, nume%deno)]
                ret += """".join(nums[:p]) 
                ret += ""(%s)"" % """".join(nums[p:])
                return ret
            
            memo[(nume//deno, nume%deno)] = len(nums)
            nums.append(str(nume//deno))
            nume %= deno
            
        ret += """".join(nums)
        return ret
            ",11111111111111111111111111111111111
151554209,python3,"2 years, 3 months",1524648889,Accepted,36 ms,/submissions/detail/151554209/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = """"
        if nume * deno < 0:
            ret = ""-""
        nume = abs(nume)
        deno = abs(deno)            
        ret += str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            nume *= 10
            if (nume//deno, nume%deno) in memo:
                p = memo[(nume//deno, nume%deno)]
                ret += """".join(nums[:p]) 
                ret += ""(%s)"" % """".join(nums[p:])
                return ret
            
            if nume < deno:
                nums.append(""0"")
                memo[(nume//deno, nume%deno)] = len(nums)-1
            else:
                memo[(nume//deno, nume%deno)] = len(nums)
                nums.append(str(nume//deno))
                nume %= deno
        ret += """".join(nums)
        return ret
            ",11111111111111111111111111111111111
151554153,python3,"2 years, 3 months",1524648832,Wrong Answer,N/A,/submissions/detail/151554153/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = """"
        if nume < 0:
            ret = ""-""
            nume = abs(nume)
        ret += str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            nume *= 10
            if (nume//deno, nume%deno) in memo:
                p = memo[(nume//deno, nume%deno)]
                ret += """".join(nums[:p]) 
                ret += ""(%s)"" % """".join(nums[p:])
                return ret
            
            if nume < deno:
                nums.append(""0"")
                memo[(nume//deno, nume%deno)] = len(nums)-1
            else:
                memo[(nume//deno, nume%deno)] = len(nums)
                nums.append(str(nume//deno))
                nume %= deno
        ret += """".join(nums)
        return ret
            ",11111111111111111111111000000000000
151554063,python3,"2 years, 3 months",1524648763,Wrong Answer,N/A,/submissions/detail/151554063/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            nume *= 10
            if (nume//deno, nume%deno) in memo:
                p = memo[(nume//deno, nume%deno)]
                ret += """".join(nums[:p]) 
                ret += ""(%s)"" % """".join(nums[p:])
                return ret
            
            if nume < deno:
                nums.append(""0"")
                memo[(nume//deno, nume%deno)] = len(nums)-1
            else:
                memo[(nume//deno, nume%deno)] = len(nums)
                nums.append(str(nume//deno))
                nume %= deno
        ret += """".join(nums)
        return ret
            ",11111111111111111111110100000000000
151554040,python3,"2 years, 3 months",1524648742,Wrong Answer,N/A,/submissions/detail/151554040/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            if len(nums) >= 10:
                break
            nume *= 10
            if (nume//deno, nume%deno) in memo:
                p = memo[(nume//deno, nume%deno)]
                ret += """".join(nums[:p]) 
                ret += ""(%s)"" % """".join(nums[p:])
                return ret
            
            if nume < deno:
                nums.append(""0"")
                memo[(nume//deno, nume%deno)] = len(nums)-1
            else:
                memo[(nume//deno, nume%deno)] = len(nums)
                nums.append(str(nume//deno))
                nume %= deno
        ret += """".join(nums)
        return ret
            ",11111111111001111111110101001111100
151553976,python3,"2 years, 3 months",1524648690,Wrong Answer,N/A,/submissions/detail/151553976/,Not Pending,Fraction to Recurring Decimal,N/A,"class Solution:
    def fractionToDecimal(self, nume, deno):
        """"""
        :type numerator: int
        :type denominator: int
        :rtype: str
        """"""
        
        if nume == 0: return ""0""
        ret = str(nume // deno)
        nume %= deno
            
        nums = []
        memo = {}
        while nume % deno != 0:
            if len(nums) == 0:
                ret += "".""
            if len(nums) >= 10:
                break
            nume *= 10
            if (nume//deno, nume%deno) in memo:
                p = memo[(nume//deno, nume%deno)]
                ret += """".join(nums[:p]) 
                ret += ""(%s)"" % """".join(nums[p:])
                return ret
            
            if nume < deno:
                nums.append(""0"")
                memo[(nume, 0)] = len(nums)-1
            else:
                memo[(nume//deno, nume%deno)] = len(nums)
                nums.append(str(nume//deno))
                nume %= deno
        ret += """".join(nums)
        return ret
            ",11111111000001101111110101001111100
151391354,python3,"2 years, 3 months",1524551938,Accepted,60 ms,/submissions/detail/151391354/,Not Pending,License Key Formatting,N/A,"class Solution:
    def licenseKeyFormatting(self, S, K):
        """"""
        :type S: str
        :type K: int
        :rtype: str
        """"""
        S = """".join([c.upper() for c in S[::-1] if c.isalnum()])
        N = len(S)
        return ""-"".join([S[i:i+K] for i in range(0, N, K)])[::-1]
            
        ",11111111111111111111111111111111111111
151390774,python3,"2 years, 3 months",1524551702,Accepted,52 ms,/submissions/detail/151390774/,Not Pending,Card Flipping Game,N/A,"class Solution:
    def flipgame(self, fronts, backs):
        """"""
        :type fronts: List[int]
        :type backs: List[int]
        :rtype: int
        """"""
        impossible = set()
        for f, b in zip(fronts, backs):
            if f == b:
                impossible.add(f)
        
        ret = 0
        for x in set(fronts + backs):
            if x in impossible: continue
            if ret == 0 or ret > x: ret = x
        return ret
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151389563,python3,"2 years, 3 months",1524551197,Accepted,80 ms,/submissions/detail/151389563/,Not Pending,Short Encoding of Words,N/A,"class Solution:
    def minimumLengthEncoding(self, words):
        """"""
        :type words: List[str]
        :rtype: int
        """"""
        words = list(set(words))
        N = len(words)
        C = { w : len(w) for w in words }
        N = len(C)
        for w in words:
            for i in range(1, len(w)):
                if w[i:] in C and C[w[i:]] > 0:
                    C[w[i:]] = 0
                    N -= 1
        return sum(C.values()) + N
            
",111111111111111111111111111111
151389404,python3,"2 years, 3 months",1524551134,Wrong Answer,N/A,/submissions/detail/151389404/,Not Pending,Short Encoding of Words,N/A,"class Solution:
    def minimumLengthEncoding(self, words):
        """"""
        :type words: List[str]
        :rtype: int
        """"""
        words = list(set(words))
        N = len(words)
        C = { w : len(w) for w in words }
        N = len(C)
        for w in words:
            for i in range(1, len(w)):
                if w[i:] in C:
                    C[w[i:]] = 0
                    N -= 1
        return sum(C.values()) + N
            
",111111000111111111111111111111
151388645,python3,"2 years, 3 months",1524550808,Time Limit Exceeded,N/A,/submissions/detail/151388645/,Not Pending,Short Encoding of Words,N/A,"class Solution:
    def minimumLengthEncoding(self, words):
        """"""
        :type words: List[str]
        :rtype: int
        """"""
        words = list(set(words))
        N = len(words)
        has_dep = [False for i in range(N)]
        for i in range(N):
            for j in range(N):
                if i != j:
                    if words[i].endswith(words[j]):
                        has_dep[j] = True
        return len(""#"".join([w for i, w in enumerate(words) if not has_dep[i]]) + ""#"")",111111111111000000000000000000
151388541,python3,"2 years, 3 months",1524550769,Wrong Answer,N/A,/submissions/detail/151388541/,Not Pending,Short Encoding of Words,N/A,"class Solution:
    def minimumLengthEncoding(self, words):
        """"""
        :type words: List[str]
        :rtype: int
        """"""
        N = len(words)
        has_dep = [False for i in range(N)]
        for i in range(N):
            for j in range(N):
                if i != j:
                    if words[i].endswith(words[j]):
                        has_dep[j] = True
        return len(""#"".join([w for i, w in enumerate(words) if not has_dep[i]]) + ""#"")",111110111111000000000000000000
151386959,python3,"2 years, 3 months",1524550115,Accepted,960 ms,/submissions/detail/151386959/,Not Pending,Binary Trees With Factors,N/A,"class Solution:
    def numFactoredBinaryTrees(self, A):
        """"""
        :type A: List[int]
        :rtype: int
        """"""
        C = { x : 1 for x in A }
        A = sorted(A)
        
        for i, x in enumerate(A):
            t = 0
            mods = [x % y for y in A[:i]]
            divs = [x // y for y in A[:i]]

            for a, m, d in zip(A[:i], mods, divs):
                if m == 0 and d in C:
                    t += C[a] * C[d] 
            C[x] += t
        return sum(C.values()) % (10**9 + 7)
                
",11111111111111111111111111111111111111111111111
151386865,python3,"2 years, 3 months",1524550076,Wrong Answer,N/A,/submissions/detail/151386865/,Not Pending,Binary Trees With Factors,N/A,"class Solution:
    def numFactoredBinaryTrees(self, A):
        """"""
        :type A: List[int]
        :rtype: int
        """"""
        C = { x : 1 for x in A }
        A = sorted(A)
        
        for i, x in enumerate(A):
            t = 0
            mods = [x % y for y in A[:i]]
            divs = [x // y for y in A[:i]]

            for a, m, d in zip(A[:i], mods, divs):
                if m == 0 and d in C:
                    t += C[a] * C[d] 
            C[x] += t
        return sum(C.values())
                
",11111111111111111111111111111111011111111100000
151097742,python3,"2 years, 3 months",1524381449,Accepted,48 ms,/submissions/detail/151097742/,Not Pending,Shortest Distance to a Character,N/A,"class Solution:
    def shortestToChar(self, S, C):
        """"""
        :type S: str
        :type C: str
        :rtype: List[int]
        """"""
        ret = [987654321] * len(S)
        
        latest = -987654321
        N = len(S)
        for i in range(N):
            if S[i] == C:
                latest = i
            ret[i] = min(ret[i], i-latest)
            
        latest = 987654321    
        for i in range(N-1,-1,-1):
            if S[i] == C:
                latest = i
            ret[i] = min(ret[i], latest-i)
        return ret    ",1111111111111111111111111111111111111111111111111111111111111111111111111111
151097123,python3,"2 years, 3 months",1524381114,Accepted,40 ms,/submissions/detail/151097123/,Not Pending,Two Sum II - Input array is sorted,N/A,"class Solution(object):
    def twoSum(self, numbers, target):
        """"""
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """"""
            
        N = len(numbers)
        
        P = { x : i for i, x in enumerate(numbers) }
        
        for i, x in enumerate(numbers):
            if target-x in P:
                return [i+1, P[target-x]+1]
         
      ",11111111111111111
151096680,python,"2 years, 3 months",1524380889,Time Limit Exceeded,N/A,/submissions/detail/151096680/,Not Pending,Two Sum II - Input array is sorted,N/A,"class Solution(object):
    def twoSum(self, numbers, target):
        """"""
        :type numbers: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        
        from bisect import bisect_left
        def search(alist, item):
            'Locate the leftmost value exactly equal to item'
            i = bisect_left(alist, item)
            if i != len(alist) and alist[i] == item:
                return i
            else:
                return -1
            
        N = len(numbers)
        for i, x in enumerate(numbers):
            p = search(numbers[i+1:], target-x)
            if p != -1:
                return [i+1,i+p+2]
            
            ",11111111111111110
151095225,python,"2 years, 3 months",1524380126,Accepted,64 ms,/submissions/detail/151095225/,Not Pending,Non-decreasing Array,N/A,"class Solution(object):
    def checkPossibility(self, nums):
        """"""
        :type nums: List[int]
        :rtype: bool
        """"""
        N = len(nums)
        if N <= 2: return True
        
        N += 1
        nums = [-987654321] + nums
        p = None
        for i in range(1,N):
            if nums[i-1] > nums[i]:
                p = i
                break
                
        if p is None: return True
        
        t = nums[p-1]
        nums[p-1] = nums[i]
        
        is_sorted = True
        for i in range(1,N):
            if nums[i-1] > nums[i]:
                is_sorted = False
                break
                
        if is_sorted: return True
        
        nums[p-1] = t
        nums[p] = nums[p-1]

        is_sorted = True
        for i in range(1,N):
            if nums[i-1] > nums[i]:
                is_sorted = False
                break
        if is_sorted: return True

        return False        
                ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151089222,python,"2 years, 3 months",1524377037,Wrong Answer,N/A,/submissions/detail/151089222/,Not Pending,Non-decreasing Array,N/A,"class Solution(object):
    def checkPossibility(self, nums):
        """"""
        :type nums: List[int]
        :rtype: bool
        """"""
        nums = [-987654321] + nums + [987654321]
        N = len(nums)
        cnt = 0 
        for i in range(1,N-1):
            if nums[i-1] <= nums[i] and nums[i] <= nums[i+1]:
                continue
            else:
                nums[i] = nums[i-1]
                cnt += 1
        return cnt <= 1
            
        ",1111111111111111111111111111111011111011110011111111111111111111010011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101011111111110111101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
151088265,python,"2 years, 3 months",1524376535,Accepted,33 ms,/submissions/detail/151088265/,Not Pending,Number of Lines To Write String,N/A,"class Solution(object):
    def numberOfLines(self, W, S):
        """"""
        :type widths: List[int]
        :type S: str
        :rtype: List[int]
        """"""
        num_line = 1
        cur_line_width = 0
        for c in S:
            w = W[ord(c)-ord('a')]
            if cur_line_width + w > 100:
                num_line += 1
                cur_line_width = w
            else:
                cur_line_width += w
        return [num_line, cur_line_width]
            ",11111111111111111111111111
150956161,python,"2 years, 3 months",1524295826,Accepted,93 ms,/submissions/detail/150956161/,Not Pending,Encode and Decode TinyURL,N/A,"class Codec:
        
    def encode(self, longUrl):
        """"""Encodes a URL to a shortened URL.
        
        :type longUrl: str
        :rtype: str
        """"""
        ret = 0
        for u in longUrl:
            ret *= 128
            ret += ord(u)
        return str(ret)

    def decode(self, shortUrl):
        """"""Decodes a shortened URL to its original URL.
        
        :type shortUrl: str
        :rtype: str
        """"""
        ret = """"
        y = int(shortUrl)
        while True:
            x = y % 128
            if x == 0: break
            y //= 128
            ret = chr(x) + ret
        return ret

# Your Codec object will be instantiated and called as such:
# codec = Codec()
# codec.decode(codec.encode(url
150822827,python3,"2 years, 3 months",1524200836,Accepted,40 ms,/submissions/detail/150822827/,Not Pending,Longest Substring with At Least K Repeating Characters,N/A,"class Solution:
    def longestSubstring(self, s, k):
        """"""
        :type s: str
        :type k: int
        :rtype: int
        """"""
        if len(s) < k: return 0
        m = min(set(s), key=s.count)
        if s.count(m) >= k: return len(s)
        return max([self.longestSubstring(t, k) for t in s.split(m)])",1111111111111111111111111111
150818210,cpp,"2 years, 3 months",1524198704,Time Limit Exceeded,N/A,/submissions/detail/150818210/,Not Pending,Longest Substring with At Least K Repeating Characters,N/A,"class Solution {
public:
    int longestSubstring(string s, int k) {
        int C[int(s.size()+1) ][26] = {0};
        const int N = int(s.size());
        for(int i = 0 ; i < N ; ++i) {
            for(int j = 0 ; j < 26 ; ++j) {
                C[i+1][j] = C[i][j];
            }
            C[i+1][s[i]-'a']++;
        }
        int best = 0;
        for(int i = 1 ; i <= N ; ++i ) {
            for(int j = i ; j <= N ; ++j ) {
                int min_c = -1;
                for(int l = 0 ; l < 26 ; ++l) {
                    int x = C[j][l] - C[i-1][l];
                    if( x == 0 ) continue;
                    if( min_c == -1 || min_c > x ) min_c = x;
                }
                if( min_c != -1 && min_c >= k ) {
                    best = max(best, j-i+1);
                }
            }
        }
        return best;
    }
};",1111111111111111111111111110
150812425,python3,"2 years, 3 months",1524196070,Time Limit Exceeded,N/A,/submissions/detail/150812425/,Not Pending,Longest Substring with At Least K Repeating Characters,N/A,"class Solution:
    def longestSubstring(self, s, k):
        """"""
        :type s: str
        :type k: int
        :rtype: int
        """"""
        csum = [[0 for i in range(26)]]
        for c in s:
            cur = csum[-1][:]
            cur[ord(c)-ord('a')] += 1
            csum.append(cur)
        
        N = len(s)
        ret = 0
        for i in range(1,N+1):
            for j in range(i, N+1):
                min_c = None
                for l in range(26):
                    x = csum[j][l] - csum[i-1][l] 
                    if x == 0: continue
                    if min_c == None or min_c > x: min_c = x
                if min_c != None and min_c >= k:
                    ret = max(ret, j-i+1)
        return ret",1111111111111111111111111000
150811636,python3,"2 years, 3 months",1524195759,Output Limit Exceeded,N/A,/submissions/detail/150811636/,Not Pending,Longest Substring with At Least K Repeating Characters,N/A,"class Solution:
    def longestSubstring(self, s, k):
        """"""
        :type s: str
        :type k: int
        :rtype: int
        """"""
        csum = [[0 for i in range(26)]]
        for c in s:
            cur = csum[-1][:]
            cur[ord(c)-ord('a')] += 1
            csum.append(cur)
        
        N = len(s)
        ret = 0
        for i in range(1,N+1):
            for j in range(i, N+1):
                min_c = None
                for l in range(26):
                    x = csum[j][l] - csum[i-1][l] 
                    if x == 0: continue
                    if min_c == None or min_c > x: min_c = x
                if min_c >= k:
                    print(i, j)
                if min_c != None and min_c >= k:
                    ret = max(ret, j-i+1)
        return ret",1111111111111111111111110000
150809119,python3,"2 years, 3 months",1524194730,Accepted,40 ms,/submissions/detail/150809119/,Not Pending,Unique Morse Code Words,N/A,"class Solution:
    def uniqueMorseRepresentations(self, words):
        """"""
        :type words: List[str]
        :rtype: int
        """"""
        mc = ["".-"",""-..."",""-.-."",""-.."",""."",""..-."",""--."",""...."","".."","".---"",""-.-"","".-.."",""--"",""-."",""---"","".--."",""--.-"","".-."",""..."",""-"",""..-"",""...-"","".--"",""-..-"",""-.--"",""--..""]
        return len(set([ """".join([mc[ord(c)-ord('a')]for c in w]) for w in words ]))
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111
150544253,python,"2 years, 3 months",1524032499,Accepted,45 ms,/submissions/detail/150544253/,Not Pending,Decode Ways,N/A,"class Solution(object):
    def numDecodings(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        C = [-1] * (1+len(s))
        def dp(i):
            if i == len(s): return 1
            if C[i] != -1: return C[i]
            C[i] = 0
            if s[i] != '0':
                C[i] += dp(i+1)
            if s[i] != '0' and i+2 <= len(s) and int(s[i:i+2]) <= 26:
                C[i] += dp(i+2)
            return C[i]
        return 0 if s == """" else dp(0)
            ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150544131,python,"2 years, 3 months",1524032442,Wrong Answer,N/A,/submissions/detail/150544131/,Not Pending,Decode Ways,N/A,"class Solution(object):
    def numDecodings(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        C = [-1] * (1+len(s))
        def dp(i):
            if i == len(s): return 1
            if C[i] != -1: return C[i]
            C[i] = 0
            if s[i] != '0':
                C[i] += dp(i+1)
            if s[i] != '0' and i+2 <= len(s) and int(s[i:i+2]) <= 26:
                C[i] += dp(i+2)
            return C[i]
        return dp(0)
            ",1011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150542507,python,"2 years, 3 months",1524031758,Accepted,877 ms,/submissions/detail/150542507/,Not Pending,Word Ladder,N/A,"class Solution(object):
    def ladderLength(self, beginWord, endWord, wordList):
        """"""
        :type beginWord: str
        :type endWord: str
        :type wordList: List[str]
        :rtype: int
        """"""
        visited = set()
        ans = 1
        q1 = [beginWord]
        q2 = []
        visited.add(beginWord)
        S = set(wordList)
        while len(q1) > 0:
            for w in q1:
                if w == endWord:
                    return ans
                for i in range(len(w)):
                    p = list(w)
                    for a in string.ascii_lowercase:
                        p[i] = a
                        t = """".join(p)
                        if not t in S: continue
                        if t in visited: continue
                        q2.append(t)
                        visited.add(t)
            ans += 1
            q1 = q2
            q2 = []
                
        return 0",111111111111111111111111111111111111111
150541215,python,"2 years, 3 months",1524031205,Accepted,386 ms,/submissions/detail/150541215/,Not Pending,Implement Trie (Prefix Tree),N/A,"class Node(object):
    def __init__(self):
        self.next = dict()
        self.endpoint = False

class Trie(object):
    def __init__(self, x = None):
        """"""
        Initialize your data structure here.
        """"""
        self.root = Node()

    def insert(self, word):
        """"""
        Inserts a word into the trie.
        :type word: str
        :rtype: void
        """"""
        cur = self.root
        for c in word:
            if c in cur.next:
                cur = cur.next[c]
            else:
                cur.next[c] = Node()
                cur = cur.next[c]
        cur.endpoint = True           
        

    def search(self, word):
        """"""
        Returns if the word is in the trie.
        :type word: str
        :rtype: bool
        """"""
        cur = self.root
        for c in word:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return cur.endpoint

    def startsWith(self, prefix):
        """"""
        Returns if there is any word in the trie that starts with the given prefix.
        :type prefix: str
        :rtype: bool
        """"""
        cur = self.root
        for c in prefix:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return True
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)",11111111111111
150541063,python,"2 years, 3 months",1524031143,Accepted,328 ms,/submissions/detail/150541063/,Not Pending,Implement Trie (Prefix Tree),N/A,"class Node(object):
    def __init__(self, x = None):
        self.char = x
        self.next = dict()
        self.endpoint = False

class Trie(object):
    def __init__(self, x = None):
        """"""
        Initialize your data structure here.
        """"""
        self.root = Node()

    def insert(self, word):
        """"""
        Inserts a word into the trie.
        :type word: str
        :rtype: void
        """"""
        cur = self.root
        for c in word:
            if c in cur.next:
                cur = cur.next[c]
            else:
                cur.next[c] = Node(c)
                cur = cur.next[c]
        cur.endpoint = True           
        

    def search(self, word):
        """"""
        Returns if the word is in the trie.
        :type word: str
        :rtype: bool
        """"""
        cur = self.root
        for c in word:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return cur.endpoint

    def startsWith(self, prefix):
        """"""
        Returns if there is any word in the trie that starts with the given prefix.
        :type prefix: str
        :rtype: bool
        """"""
        cur = self.root
        for c in prefix:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return True
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)",11111111111111
150541013,python,"2 years, 3 months",1524031126,Compile Error,N/A,/submissions/detail/150541013/,Not Pending,Implement Trie (Prefix Tree),N/A,"class Node(object):
    def __init__(self, x = None):
        self.char = x
        self.next = dict()
        self.endpoint = False

class Trie(object):
    def __init__(self, x = None):
        """"""
        Initialize your data structure here.
        """"""
        self.root = Node()

    def insert(self, word):
        """"""
        Inserts a word into the trie.
        :type word: str
        :rtype: void
        """"""
        cur = self.root
        for c in word:
            if c in cur.next:
                cur = cur.next[c]
            else:
                cur.next[c] = Node(c)
                cur = cur.next[c]
         cur.endpoint = True           
        

    def search(self, word):
        """"""
        Returns if the word is in the trie.
        :type word: str
        :rtype: bool
        """"""
        cur = self.root
        for c in word:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return cur.endpoint

    def startsWith(self, prefix):
        """"""
        Returns if there is any word in the trie that starts with the given prefix.
        :type prefix: str
        :rtype: bool
        """"""
        cur = self.root
        for c in prefix:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return True
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)",
150540775,python,"2 years, 3 months",1524031038,Wrong Answer,N/A,/submissions/detail/150540775/,Not Pending,Implement Trie (Prefix Tree),N/A,"class Node(object):
    def __init__(self, x = None):
        self.char = x
        self.next = dict()

class Trie(object):
    def __init__(self, x = None):
        """"""
        Initialize your data structure here.
        """"""
        self.root = Node()

    def insert(self, word):
        """"""
        Inserts a word into the trie.
        :type word: str
        :rtype: void
        """"""
        cur = self.root
        for c in word:
            if c in cur.next:
                cur = cur.next[c]
            else:
                cur.next[c] = Node(c)
                cur = cur.next[c]
                    
        

    def search(self, word):
        """"""
        Returns if the word is in the trie.
        :type word: str
        :rtype: bool
        """"""
        cur = self.root
        for c in word:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return len(cur.next) == 0

    def startsWith(self, prefix):
        """"""
        Returns if there is any word in the trie that starts with the given prefix.
        :type prefix: str
        :rtype: bool
        """"""
        cur = self.root
        for c in prefix:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return True
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)",11111110110000
150540735,python,"2 years, 3 months",1524031022,Runtime Error,N/A,/submissions/detail/150540735/,Not Pending,Implement Trie (Prefix Tree),N/A,"class Node(object):
    def __init__(self, x = None):
        self.char = x
        self.next = dict()

class Trie(object):
    def __init__(self, x = None):
        """"""
        Initialize your data structure here.
        """"""
        self.root = Node()

    def insert(self, word):
        """"""
        Inserts a word into the trie.
        :type word: str
        :rtype: void
        """"""
        cur = self.root
        for c in word:
            if c in cur.next:
                cur = cur.next[c]
            else:
                cur.next[c] = Node(c)
                cur = cur.next[c]
                    
        

    def search(self, word):
        """"""
        Returns if the word is in the trie.
        :type word: str
        :rtype: bool
        """"""
        cur = self.root
        for c in word:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return len(cur.next) == 0

    def startsWith(self, prefix):
        """"""
        Returns if there is any word in the trie that starts with the given prefix.
        :type prefix: str
        :rtype: bool
        """"""
        cur = self.root
        for c in word:
            if not c in cur.next:
                return False
            cur = cur.next[c]
        return True
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)",
150537697,python,"2 years, 3 months",1524029791,Accepted,85 ms,/submissions/detail/150537697/,Not Pending,Populating Next Right Pointers in Each Node,N/A,"# Definition for binary tree with next pointer.
# class TreeLinkNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#         self.next = None

class Solution:
    # @param root, a tree link node
    # @return nothing
    def connect(self, root):
        if root == None: 
            return None
        q1 = [root]
        q2 = []
        while len(q1) > 0:
            N = len(q1)
            for i in range(N-1):
                q1[i].next = q1[i+1]
            for v in q1:
                if v.left != None: q2.append(v.left)
                if v.right != None: q2.append(v.right)
            q1 = q2
            q2 = []",11111111111111
150537643,python,"2 years, 3 months",1524029766,Wrong Answer,N/A,/submissions/detail/150537643/,Not Pending,Populating Next Right Pointers in Each Node,N/A,"# Definition for binary tree with next pointer.
# class TreeLinkNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#         self.next = None

class Solution:
    # @param root, a tree link node
    # @return nothing
    def connect(self, root):
        if root == None: 
            return None
        q1 = [root]
        q2 = []
        while len(q1) > 0:
            N = len(q1)
            for i in range(N-1):
                q1[i].next = q1[i+1]
            for v in q1:
                if v.left != None: q2.append(v.left)
                if v.right != None: q2.append(v.right)
            q1 = q2
            q2 = []
            
        return root ",10000000000000
150537529,python,"2 years, 3 months",1524029723,Runtime Error,N/A,/submissions/detail/150537529/,Not Pending,Populating Next Right Pointers in Each Node,N/A,"# Definition for binary tree with next pointer.
# class TreeLinkNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None
#         self.next = None

class Solution:
    # @param root, a tree link node
    # @return nothing
    def connect(self, root):
        q1 = [root]
        q2 = []
        while len(q1) > 0:
            N = len(q1)
            for i in range(N-1):
                q1[i].right = q1[i+1]
            for v in q1:
                if v.left != None: q2.append(v.left)
                if v.right != None: q2.append(v.right)
            q1 = q2
            q2 = []
            
        return root ",
150410221,python3,"2 years, 3 months",1523955378,Accepted,1160 ms,/submissions/detail/150410221/,Not Pending,Coin Change,N/A,"class Solution:
    def coinChange(self, coins, amount):
        """"""
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """"""
        coins.append(0)
        cache = [0] + [987654321] * amount 
        for i in range(1,amount+1):
            cache[i] = 1+min([cache[i-v] for v in coins if i-v >= 0])
        return -1 if cache[-1] >= 987654321 else cache[-1]
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150409552,python3,"2 years, 3 months",1523954963,Accepted,1476 ms,/submissions/detail/150409552/,Not Pending,Coin Change,N/A,"class Solution:
    def coinChange(self, coins, amount):
        """"""
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """"""
        cache = [987654321] * (amount+1) 
        cache[0] = 0
        for i in range(amount+1):
            for v in coins:
                if i-v >= 0:
                    cache[i] = min(cache[i], 1+cache[i-v])
        return -1 if cache[-1] >= 987654321 else cache[-1]
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150409306,python3,"2 years, 3 months",1523954815,Time Limit Exceeded,N/A,/submissions/detail/150409306/,Not Pending,Coin Change,N/A,"class Solution:
    def coinChange(self, coins, amount):
        """"""
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """"""
        cache = [-1] * (amount+1) 
        def dp(i):
            if i > amount:
                return 987654321
            if i == amount:
                return 0
            if cache[i] != -1:
                return cache[i]
            cache[i] = 987654321
            for v in coins:
                if i+v <= amount:
                    cache[i] = min(cache[i], 1+dp(i+v))
            return cache[i]
        ret = dp(0)
        return -1 if ret >= 987654321 else ret
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000
150409125,python3,"2 years, 3 months",1523954702,Time Limit Exceeded,N/A,/submissions/detail/150409125/,Not Pending,Coin Change,N/A,"class Solution:
    def coinChange(self, coins, amount):
        """"""
        :type coins: List[int]
        :type amount: int
        :rtype: int
        """"""
        cache = {}
        def dp(i):
            if i > amount:
                return 987654321
            if i == amount:
                return 0
            if i in cache:
                return cache[i]
            cache[i] = 987654321
            for v in coins:
                cache[i] = min(cache[i], 1+dp(i+v))
            return cache[i]
        ret = dp(0)
        return -1 if ret >= 987654321 else ret
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000
150408575,python3,"2 years, 3 months",1523954312,Accepted,168 ms,/submissions/detail/150408575/,Not Pending,Construct Binary Tree from Preorder and Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, P, O):
        """"""
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """"""
        if len(O) > 0:
            i = O.index(P.pop(0))
            cur = TreeNode(O[i])
            cur.left = self.buildTree(P, O[:i])
            cur.right = self.buildTree(P, O[i+1:])
            return cur",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150408519,python3,"2 years, 3 months",1523954268,Accepted,172 ms,/submissions/detail/150408519/,Not Pending,Construct Binary Tree from Preorder and Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, P, O):
        """"""
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """"""
        if len(O) == 0: return None
        i = O.index(P.pop(0))
        cur = TreeNode(O[i])
        cur.left = self.buildTree(P, O[:i])
        cur.right = self.buildTree(P, O[i+1:])
        return cur",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150408417,python3,"2 years, 3 months",1523954201,Runtime Error,N/A,/submissions/detail/150408417/,Not Pending,Construct Binary Tree from Preorder and Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, P, O):
        """"""
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """"""
        if len(P) == 0: return None
        i = O.index(P.pop(0))
        cur = TreeNode(O[i])
        cur.left = self.buildTree(P, O[:i])
        cur.right = self.buildTree(P, O[i+1:])
        return cur",
150408028,python3,"2 years, 3 months",1523953972,Accepted,220 ms,/submissions/detail/150408028/,Not Pending,Construct Binary Tree from Preorder and Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, P, O):
        """"""
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """"""
        if len(P) == 0: return None
        cur = TreeNode(P[0])
        i = O.index(P[0])
        cur.left = self.buildTree(P[1:i+1], O[:i])
        cur.right = self.buildTree(P[i+1:], O[i+1:])
        return cur",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150407915,python3,"2 years, 3 months",1523953892,Accepted,320 ms,/submissions/detail/150407915/,Not Pending,Construct Binary Tree from Preorder and Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, P, O):
        """"""
        :type preorder: List[int]
        :type inorder: List[int]
        :rtype: TreeNode
        """"""
        if len(P) == 0: return None
        cur = TreeNode(P[0])
        i = O.index(P[0])
        j = 1+i
        cur.left = self.buildTree(P[1:j], O[:i])
        cur.right = self.buildTree(P[j:], O[i+1:])
        return cur",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150407204,python3,"2 years, 3 months",1523953435,Accepted,52 ms,/submissions/detail/150407204/,Not Pending,Jump Game,N/A,"class Solution:
    def canJump(self, nums):
        """"""
        :type nums: List[int]
        :rtype: bool
        """"""
        N = len(nums)
        max_pos = 0
        for i in range(N):
            if i > max_pos:
                return False
            max_pos = max(max_pos, i+nums[i])
        return True
        ",111111111111111111111111111111111111111111111111111111111111111111111111111
150406695,python3,"2 years, 3 months",1523953146,Time Limit Exceeded,N/A,/submissions/detail/150406695/,Not Pending,Jump Game,N/A,"class Solution:
    def canJump(self, nums):
        """"""
        :type nums: List[int]
        :rtype: bool
        """"""
        N = len(nums)
        V = [False] * N
        V[0] = True
        for i in range(N):
            if not V[i]: continue
            for j in range(i+1, min(i+nums[i]+1,N)):
                V[j] = True
        return V[-1]
            
        ",111111111111111111111111111111111111111111111111111111111111111111111111110
150406063,python3,"2 years, 3 months",1523952759,Accepted,308 ms,/submissions/detail/150406063/,Not Pending,Palindrome Number,N/A,"class Solution:
    def isPalindrome(self, x):
        """"""
        :type x: int
        :rtype: bool
        """"""
        return str(x) == str(x
150384754,python3,"2 years, 3 months",1523943248,Accepted,44 ms,/submissions/detail/150384754/,Not Pending,Remove Nth Node From End of List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head, n):
        """"""
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """"""
        def find(v):
          if v == None:
            return 0
          ret = find(v.next)
          if ret == n:
            v.next = v.next.next
          return 1+ret
        x = ListNode(None)
        x.next= head
        find(x)
        return x.next",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150383894,python3,"2 years, 3 months",1523942903,Wrong Answer,N/A,/submissions/detail/150383894/,Not Pending,Remove Nth Node From End of List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def removeNthFromEnd(self, head, n):
        """"""
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """"""
        def find(v):
          if v == None:
            return 0
          ret = find(v.next)
          if ret == n:
            v.next = v.next.next
          return 1+ret
        find(head)
        return head",1010110111111111010111111111101110101111010110111111111111011111011111011111111111111110111101111111110111111101111011011111110011010111111111111111111111111111011011101111111101101101111111111111110111111111
150382610,python3,"2 years, 3 months",1523942422,Accepted,148 ms,/submissions/detail/150382610/,Not Pending,Rotated Digits,N/A,"class Solution:
    def rotatedDigits(self, N):
        """"""
        :type N: int
        :rtype: int
        """"""
        ret = 0
        R = { ""1"" : ""1"", ""0"": ""0"", ""2"" : ""5"", ""5"": ""2"", ""6"":""9"", ""9"":""6"", ""8"": ""8""}
        for i in range(1,N+1):
          i = str(i)
          if sum([v in i for v in ""347""]) > 0: continue
          j = """".join([R[v] for v in i])
          ret += 1 if i != j else 0
        return ret",11111111111111111111111111111111111111111111111111
150248856,python3,"2 years, 3 months",1523864818,Accepted,68 ms,/submissions/detail/150248856/,Not Pending,Merge Intervals,N/A,"# Definition for an interval.
# class Interval:
#     def __init__(self, s=0, e=0):
#         self.start = s
#         self.end = e

class Solution:
    def merge(self, I):
        """"""
        :type intervals: List[Interval]
        :rtype: List[Interval]
        """"""
        N = len(I)
        I = sorted([(i.start, i.end) for i in I])
        i = 0
        ret = []
        while i < N:
          x = list(I[i])
          j = i+1
          while j < N:
            if I[j][1] < x[0]: break
            if x[1] < I[j][0]: break
            x[0] = min(x[0], I[j][0])
            x[1] = max(x[1], I[j][1])
            j += 1
          ret.append(Interval(x[0],x[1]))
          i = j
        return ret
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150247860,python3,"2 years, 3 months",1523864222,Accepted,100 ms,/submissions/detail/150247860/,Not Pending,Palindrome Partitioning,N/A,"class Solution:
    def partition(self, s):
        """"""
        :type s: str
        :rtype: List[List[str]]
        """"""
        ret = []
        def bf(s, t = []):
          if len(s) == 0:
            if len(t) > 0:
              ret.append(t)
          for i in range(1,1+len(s)):
            v = s[:i]
            if v == v[::-1]:
              bf(s[i:], t + [v])
        bf(s)
        return ret
        ",1111111111111111111111
150247425,python3,"2 years, 3 months",1523863967,Accepted,36 ms,/submissions/detail/150247425/,Not Pending,Letter Combinations of a Phone Number,N/A,"class Solution:
    def letterCombinations(self, digits):
        """"""
        :type digits: str
        :rtype: List[str]
        """"""
        b = { ""2"": ""abc"", ""3"": ""def"", ""4"": ""ghi"",
            ""5"": ""jkl"", ""6"": ""mno"", ""7"": ""pqrs"", ""8"": ""tuv"",
            ""9"": ""wxyz""}
        ret = []
        
        def bf(s, t = """"):
          if len(s) == 0:
            if len(t) > 0: ret.append(t)
            return 
          for a in b[s[0]]:
            bf(s[1:], t+a)
        bf(digits)
        return ret",1111111111111111111111111
150246936,python3,"2 years, 3 months",1523863679,Accepted,40 ms,/submissions/detail/150246936/,Not Pending,Binary Tree Zigzag Level Order Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def zigzagLevelOrder(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        if root == None: return []
        q1 = [root]
        q2 = []
        ret = []
        it = 0
        while len(q1) > 0:
          it += 1
          ret.append([v.val for v in q1])
          if it % 2 == 0:
            ret[-1] = ret[-1][::-1]
          for v in q1:
            if v.left != None: q2.append(v.left)
            if v.right != None: q2.append(v.right)
          q1 = q2
          q2 = []
        return ret",111111111111111111111111111111111
150246838,python3,"2 years, 3 months",1523863629,Runtime Error,N/A,/submissions/detail/150246838/,Not Pending,Binary Tree Zigzag Level Order Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def zigzagLevelOrder(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        q1 = [root]
        q2 = []
        ret = []
        it = 0
        while len(q1) > 0:
          it += 1
          ret.append([v.val for v in q1])
          if it % 2 == 0:
            ret[-1] = ret[-1][::-1]
          for v in q1:
            if v.left != None: q2.append(v.left)
            if v.right != None: q2.append(v.right)
          q1 = q2
          q2 = []
        return ret",
150245917,python3,"2 years, 3 months",1523863188,Accepted,40 ms,/submissions/detail/150245917/,Not Pending,Word Break,N/A,"class Solution:
    def wordBreak(self, s, wordDict):
        """"""
        :type s: str
        :type wordDict: List[str]
        :rtype: bool
        """"""
        
        cache = dict()
        def dp(i):
          if i == len(s):
            return True
          if i in cache:
            return cache[i]
          cache[i] = False
          for d in wordDict:
            if s[i:].startswith(d):
              if dp(i+len(d)):
                cache[i] = True
                break
          return cache[i]
        
        ret = dp(0)
        return ret",1111111111111111111111111111111111
150244684,python3,"2 years, 3 months",1523862568,Wrong Answer,N/A,/submissions/detail/150244684/,Not Pending,Word Break,N/A,"class Solution:
    def wordBreak(self, s, wordDict):
        """"""
        :type s: str
        :type wordDict: List[str]
        :rtype: bool
        """"""
        
        cache = dict()
        
        def dp(i):
          if i == len(s):
            return True
          if i in cache:
            return cache
          cache[i] = False
          for d in wordDict:
            if s[i:].startswith(d):
              if dp(i+len(d)):
                cache[i] = True
                break
          return cache[i]
        
        return dp(0)",1111111110111111111111111110100100
150243482,python3,"2 years, 3 months",1523861970,Accepted,40 ms,/submissions/detail/150243482/,Not Pending,Find the Difference,N/A,"class Solution:
    def findTheDifference(self, s, t):
        """"""
        :type s: str
        :type t: str
        :rtype: str
        """"""
        from collections import defaultdict
        d = defaultdict(int)
        for v in s: d[v] += 1
        for v in t: d[v] -= 1
        return """".join([k*abs(v) for k, v in d.items() if v != 0])
        
        ",111111111111111111111111111111111111111111111111111111
150243376,python3,"2 years, 3 months",1523861922,Wrong Answer,N/A,/submissions/detail/150243376/,Not Pending,Find the Difference,N/A,"class Solution:
    def findTheDifference(self, s, t):
        """"""
        :type s: str
        :type t: str
        :rtype: str
        """"""
        from collections import defaultdict
        d = defaultdict(int)
        for v in s: d[v] += 1
        for v in t: d[v] -= 1
        return """".join([k*v for k, v in d.items() if v > 0])
        
        ",000000000000000000000000000000000000000000000000000000
150242995,python3,"2 years, 3 months",1523861743,Accepted,84 ms,/submissions/detail/150242995/,Not Pending,Letter Case Permutation,N/A,"class Solution:
    def letterCasePermutation(self, S):
        """"""
        :type S: str
        :rtype: List[str]
        """"""
        ret = []
        
        def solve(i, s):
          if i == len(s):
            ret.append("""".join(s))
          else:
            if s[i].isalpha():
              org = s[i]
              s[i] = s[i].lower()
              solve(i+1, s)
              s[i] = s[i].upper()
              solve(i+1, s)
              s[i] = org
            else:
              solve(i+1, s)
              
        solve(0, list(S))
        return ret",1111111111111111111111111111111111111111111111111111111111111111
150141437,python3,"2 years, 3 months",1523817353,Accepted,104 ms,/submissions/detail/150141437/,Not Pending,Max Area of Island,N/A,"class Solution:
    def maxAreaOfIsland(self, grid):
        """"""
        :type grid: List[List[int]]
        :rtype: int
        """"""
        ret = 0
        N, M = len(grid), len(grid[0])
        
        def find_all(si, sj):
          q1 = [(si,sj)]
          q2 = []
          grid[si][sj] = 0
          Di = [-1,1,0,0]
          Dj = [0,0,-1,1]
          area = 0
          while len(q1)>0:
            area += len(q1)
            for v in q1:
              for di, dj in zip(Di,Dj):
                i, j = v
                i, j = i+di, j+dj
                if i < 0 or i >= N: continue
                if j < 0 or j >= M: continue
                if grid[i][j] == 0: continue
                grid[i][j] = 0
                q2.append((i,j))
            
            q1 = q2
            q2 = []
          
          return area
          
          
        for i in range(N):
          for j in range(M):
            if grid[i][j] == 1:
              ret = max(ret, find_all(i, j))
        
        return ret

150094686,cpp,"2 years, 3 months",1523780314,Accepted,98 ms,/submissions/detail/150094686/,Not Pending,Perfect Squares,N/A,"class Solution {
public:
    int numSquares(int n) {
        vector<int> best(n+1, 987654321);
        best[0] = 0;
      
        for(int i = 1 ; i <= n ; ++i ) {
          best[i] = i;
          for(int j = 1 ; i-j*j >= 0  ; ++j ) {
            best[i] = min(best[i], best[i-j*j] + 1);
          }
        }
        return best[n];
    }
}
150094509,python3,"2 years, 3 months",1523780195,Time Limit Exceeded,N/A,/submissions/detail/150094509/,Not Pending,Perfect Squares,N/A,"class Solution:
    def numSquares(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        import queue
        
        used = [False] * (n+1)
        q = queue.Queue()
        q.put((0,0))
        
        while not q.empty():
          top = q.get()
          k, h = top
          if k == n:
            return h
          if used[k]: 
            continue
          j = 1
          while k+j*j <= n:
            l = k+j*j
            if l == n: return h+1
            j += 1
            if used[l]: continue
            q.put((l,h+1))
        return None
150094430,python3,"2 years, 3 months",1523780147,Time Limit Exceeded,N/A,/submissions/detail/150094430/,Not Pending,Perfect Squares,N/A,"class Solution:
    def numSquares(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        import queue
        
        used = [False] * (n+1)
        q = queue.Queue()
        q.put((0,0))
        
        while not q.empty():
          top = q.get()
          k, h = top
          if k == n:
            return h
          if used[k]: 
            continue
          j = 1
          while k+j*j <= n:
            l = k+j*j
            j += 1
            if used[l]: continue
            q.put((l,h+1))
        return None
150094334,python3,"2 years, 3 months",1523780092,Time Limit Exceeded,N/A,/submissions/detail/150094334/,Not Pending,Perfect Squares,N/A,"class Solution:
    def numSquares(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        import queue
        
        used = [False] * (n+1)
        q = queue.Queue()
        q.put((0,0))
        
        while not q.empty():
          top = q.get()
          k, h = top
          if k == n:
            return h
          if used[k]: 
            continue
          j = 1
          while k+j*j <= n:
            l = k+j*j
            if used[l]: continue
            q.put((l,h+1))
            j += 1
        return None
150093732,python3,"2 years, 3 months",1523779720,Time Limit Exceeded,N/A,/submissions/detail/150093732/,Not Pending,Perfect Squares,N/A,"class Solution:
    def numSquares(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        cache = [987654321] * (n+1)
        cache[0] = 0
        
        for i in range(n+1):
          j = 1
          while i-j*j >= 0:
            cache[i] = min(cache[i], cache[i-j*j]+1)
            j += 1
            
        return cache[n]

150092715,python3,"2 years, 3 months",1523778998,Accepted,100 ms,/submissions/detail/150092715/,Not Pending,Set Matrix Zeroes,N/A,"class Solution:
    def setZeroes(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """"""
        N = len(matrix)
        M = len(matrix[0])
        fi, fj = False, False
        for i in range(N):
          for j in range(M):
            if matrix[i][j] == 0:
              matrix[i][0] = 0
              matrix[0][j] = 0
              if i == 0: fi = True
              if j == 0: fj = True
        
        for i in range(1,N):
          for j in range(1,M):
            if matrix[i][0] == 0 or matrix[0][j] == 0:
              matrix[i][j] = 0
        
        if fi:
          for j in range(M): matrix[0][j] = 0
        if fj:
          for i in range(N): matrix[i][0] = 0",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150092144,python3,"2 years, 3 months",1523778691,Accepted,96 ms,/submissions/detail/150092144/,Not Pending,Set Matrix Zeroes,N/A,"class Solution:
    def setZeroes(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """"""
        N = len(matrix)
        M = len(matrix[0])
        r = [False] * N
        c = [False] * M
        for i in range(N):
          for j in range(M):
            if matrix[i][j] == 0:
              r[i] = True
              c[j] = True

        for i in range(N):
          for j in range(M):
            if r[i] or c[j]:
              matrix[i][j] = 0
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150091488,python3,"2 years, 3 months",1523778268,Wrong Answer,N/A,/submissions/detail/150091488/,Not Pending,Set Matrix Zeroes,N/A,"class Solution:
    def setZeroes(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """"""
        N = len(matrix)
        M = len(matrix[0])
        for i in range(N):
          for j in range(M):
            if matrix[i][j] == 0:
              matrix[i][0] = matrix[0][j] = 0
        
        for i in range(N):
          if matrix[i][0] == 0:
            for j in range(M):
              matrix[i][j] = 0
        for j in range(M):
          if matrix[0][j] == 0:
            for i in range(N):
              matrix[i][j] = 0
              
        ",1111111111111001001100100011100000100001001000001110100111001110010101011000000000000010101000010000010000100010110000100000011111111110111101110101000000001
150090623,python3,"2 years, 3 months",1523777777,Accepted,36 ms,/submissions/detail/150090623/,Not Pending,Game of Life,N/A,"class Solution:
    def gameOfLife(self, board):
        """"""
        :type board: List[List[int]]
        :rtype: void Do not return anything, modify board in-place instead.
        """"""
        N = len(board)
        M = len(board[0])
        for i in range(N):
          for j in range(M):
            board[i][j] += 1
            
        def will_live(board, i, j):
          nlive = 0
          for ii in [i-1, i, i+1]:
            for jj in [j-1, j, j+1]:
              if i == ii and j == jj: continue
              if ii < 0 or ii >= N: continue
              if jj < 0 or jj >= M: continue
              nlive += 1 if abs(board[ii][jj]) == 2 else 0
          if nlive == 3: return True
          if board[i][j] == 2 and nlive == 2: return True
          return False
        for i in range(N):
          for j in range(M):
            if will_live(board, i, j):
              board[i][j] *= -1
        for i in range(N):
          for j in range(M):
            board[i][j] = 1 if board[i][j] < 0 else 0",1111111111111111111111
150090474,python3,"2 years, 3 months",1523777686,Wrong Answer,N/A,/submissions/detail/150090474/,Not Pending,Game of Life,N/A,"class Solution:
    def gameOfLife(self, board):
        """"""
        :type board: List[List[int]]
        :rtype: void Do not return anything, modify board in-place instead.
        """"""
        N = len(board)
        M = len(board[0])
        for i in range(N):
          for j in range(M):
            board[i][j] += 1
            
        def will_live(board, i, j):
          nlive, ndead = 0, 0
          for ii in [i-1, i, i+1]:
            for jj in [j-1, j, j+1]:
              if i == ii and j == jj: continue
              if ii < 0 or ii >= N: continue
              if jj < 0 or jj >= M: continue
              nlive += 1 if abs(board[ii][jj]) == 2 else 0
              ndead += 1 if abs(board[ii][jj]) == 1 else 0
          if board[i][j] == 2 and ( nlive == 2 or nlive == 3 ): return True
          if board[i][j] == 1 and ndead == 3: return True
          return False
        for i in range(N):
          for j in range(M):
            if will_live(board, i, j):
              board[i][j] *= -1
        for i in range(N):
          for j in range(M):
            board[i][j] = 1 if board[i][j] < 0 else 0",1111111010000000100000
150089298,python3,"2 years, 3 months",1523777065,Accepted,36 ms,/submissions/detail/150089298/,Not Pending,Longest Increasing Subsequence,N/A,"class Solution:
    def lengthOfLIS(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        import bisect
        lis = []
        
        for x in nums:
          p = bisect.bisect_left(lis, x)
          if p == len(lis):
            lis.append(x)
          else:
            lis[p] = x
        return len(lis)",111111111111111111111111
150088404,python3,"2 years, 3 months",1523776621,Accepted,56 ms,/submissions/detail/150088404/,Not Pending,Valid Sudoku,N/A,"class Solution:
    def isValidSudoku(self, board):
        """"""
        :type board: List[List[str]]
        :rtype: bool
        """"""
        rs, cs, ds = set(), set(), set()
        for i in range(9):
          for j in range(9):
            if board[i][j] == '.': continue
            num = int(board[i][j])
            if (i,num) in rs: return False
            if (j,num) in cs: return False
            if (i//3, j//3, num) in ds: return False
            rs.add((i,num))
            cs.add((j,num))
            ds.add((i//3,j//3, num))
        return True

150087767,python3,"2 years, 3 months",1523776297,Accepted,160 ms,/submissions/detail/150087767/,Not Pending,Group Anagrams,N/A,"class Solution:
    def groupAnagrams(self, strs):
        """"""
        :type strs: List[str]
        :rtype: List[List[str]]
        """"""
        from collections import defaultdict
        s = defaultdict(list)
        for x in strs:
          s["""".join(sorted(x))].append(x)
        ret = []
        for k in s:
          ret.append(s[k])
        return ret",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150087179,python3,"2 years, 3 months",1523775994,Accepted,48 ms,/submissions/detail/150087179/,Not Pending,Search a 2D Matrix II,N/A,"class Solution:
    def searchMatrix(self, matrix, target):
        """"""
        :type matrix: List[List[int]]
        :type target: int
        :rtype: bool
        """"""
        
        r, c = len(matrix)-1, 0
        
        while r >= 0 and c < len(matrix[0]):
          if target == matrix[r][c]: 
            return True
          elif target > matrix[r][c]:
            c += 1
          else:
            r -= 1
            
        return False",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150084671,python3,"2 years, 3 months",1523774707,Accepted,320 ms,/submissions/detail/150084671/,Not Pending,Kth Smallest Element in a Sorted Matrix,N/A,"class Solution:
    def kthSmallest(self, matrix, k):
        """"""
        :type matrix: List[List[int]]
        :type k: int
        :rtype: int
        """"""
        a = []
        for r in matrix:
          a = sorted(a+r)[:k]
        return a[k-1]",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150084229,python3,"2 years, 3 months",1523774485,Accepted,76 ms,/submissions/detail/150084229/,Not Pending,Kth Smallest Element in a BST,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def kthSmallest(self, root, k):
        """"""
        :type root: TreeNode
        :type k: int
        :rtype: int
        """"""
        def nchild(root):
          if root is None: return 0
          return 1 + nchild(root.left) + nchild(root.right)
        
        def getk(x, k):
          lc, rc = nchild(x.left), nchild(x.right)
          if lc == k-1:
            return x.val
          if lc < k-1:
            return getk(x.right, k-lc-1)
          else:
            return getk(x.left, k)
          
        return getk(root, k)
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150083081,python3,"2 years, 3 months",1523773854,Accepted,36 ms,/submissions/detail/150083081/,Not Pending,Rotate Image,N/A,"class Solution:
    def rotate(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """"""
        N = len(matrix)
        
        for i in range(N):
          for j in range(i+1,N):
            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]
        
        for i in range(N):
          for j in range(N//2):
            matrix[i][j], matrix[i][N-1-j] = matrix[i][N-1-j], matrix[i][j]
        ",111111111111111111111
150082598,python3,"2 years, 3 months",1523773604,Accepted,56 ms,/submissions/detail/150082598/,Not Pending,Rotate Image,N/A,"class Solution:
    def rotate(self, matrix):
        """"""
        :type matrix: List[List[int]]
        :rtype: void Do not return anything, modify matrix in-place instead.
        """"""
        N = len(matrix)
        
        for i in range(N//2):
          for j in range(i,N-i-1):
            a = j-i
            b = N-i-1-j
            #print(i, j, a, b)
            v = matrix[i][j]
            a, b = [a, b, -a], [b, -a, -b]
            ii, jj = i, j
            for k in range(3):
              ii += a[k]
              jj += b[k]
              t = matrix[ii][jj]
              matrix[ii][jj] = v
              v = t
            matrix[i][j] = v
",111111111111111111111
150076357,python3,"2 years, 3 months",1523770459,Accepted,204 ms,/submissions/detail/150076357/,Not Pending,Insert Delete GetRandom O(1),N/A,"class RandomizedSet:

    def __init__(self):
        """"""
        Initialize your data structure here.
        """"""
        self.s = set()

    def insert(self, val):
        """"""
        Inserts a value to the set. Returns true if the set did not already contain the specified element.
        :type val: int
        :rtype: bool
        """"""
        if val in self.s: 
          return False
        self.s.add(val)
        return True

    def remove(self, val):
        """"""
        Removes a value from the set. Returns true if the set contained the specified element.
        :type val: int
        :rtype: bool
        """"""
        if val in self.s: 
          self.s.remove(val)
          return True
        else:
          return False

    def getRandom(self):
        """"""
        Get a random element from the set.
        :rtype: int
        """"""
        return random.choice(list(self.s))


# Your RandomizedSet object will be instantiated and called as such:
# obj = RandomizedSet()
# param_1 = obj.insert(val)
# param_2 = obj.remove(val)
# param_3 = obj.getRandom()",111111111111111111
150075842,python3,"2 years, 3 months",1523770205,Accepted,40 ms,/submissions/detail/150075842/,Not Pending,Kth Largest Element in an Array,N/A,"class Solution:
    def findKthLargest(self, nums, k):
        """"""
        :type nums: List[int]
        :type k: int
        :rtype: int
        """"""
        return sorted(nums)[-k]
        ",11111111111111111111111111111111
150073922,python,"2 years, 3 months",1523769220,Accepted,115 ms,/submissions/detail/150073922/,Not Pending,Flatten Nested List Iterator,N/A,"# """"""
# This is the interface that allows for creating nested lists.
# You should not implement it, or speculate about its implementation
# """"""
#class NestedInteger(object):
#    def isInteger(self):
#        """"""
#        @return True if this NestedInteger holds a single integer, rather than a nested list.
#        :rtype bool
#        """"""
#
#    def getInteger(self):
#        """"""
#        @return the single integer that this NestedInteger holds, if it holds a single integer
#        Return None if this NestedInteger holds a nested list
#        :rtype int
#        """"""
#
#    def getList(self):
#        """"""
#        @return the nested list that this NestedInteger holds, if it holds a nested list
#        Return None if this NestedInteger holds a single integer
#        :rtype List[NestedInteger]
#        """"""

class NestedIterator(object):

    def __init__(self, nestedList):
        """"""
        Initialize your data structure here.
        :type nestedList: List[NestedInteger]
        """"""
        self.nums = []
        
        def flatten(lst):
          for x in lst:
            if x.isInteger():
              yield x.getInteger()
            else:
              for y in flatten(x.getList()):
                yield y
        
        self.flatten = flatten(nestedList)
        
        
        
    def next(self):
        """"""
        :rtype: int
        """"""
        return self.v
        

    def hasNext(self):
        """"""
        :rtype: bool
        """"""
        try:
          self.v = next(self.flatten)
          return True
        except StopIteration:
          return False
        

# Your NestedIterator object will be instantiated and called as such:
# i, v = NestedIterator(nestedList), []
# while i.hasNext(): v.append(i.next())",11111111111111111111111111111111111111111111
150072166,python,"2 years, 3 months",1523768351,Accepted,116 ms,/submissions/detail/150072166/,Not Pending,Flatten Nested List Iterator,N/A,"# """"""
# This is the interface that allows for creating nested lists.
# You should not implement it, or speculate about its implementation
# """"""
#class NestedInteger(object):
#    def isInteger(self):
#        """"""
#        @return True if this NestedInteger holds a single integer, rather than a nested list.
#        :rtype bool
#        """"""
#
#    def getInteger(self):
#        """"""
#        @return the single integer that this NestedInteger holds, if it holds a single integer
#        Return None if this NestedInteger holds a nested list
#        :rtype int
#        """"""
#
#    def getList(self):
#        """"""
#        @return the nested list that this NestedInteger holds, if it holds a nested list
#        Return None if this NestedInteger holds a single integer
#        :rtype List[NestedInteger]
#        """"""

class NestedIterator(object):

    def __init__(self, nestedList):
        """"""
        Initialize your data structure here.
        :type nestedList: List[NestedInteger]
        """"""
        self.nums = []
        
        def flatten(lst):
          for x in lst:
            if x.isInteger():
              self.nums.append(x.getInteger())
            else:
              flatten(x.getList())
        flatten(nestedList)
        
        self.i = 0
        
        
    def next(self):
        """"""
        :rtype: int
        """"""
        self.i += 1
        return self.nums[self.i-1]
        

    def hasNext(self):
        """"""
        :rtype: bool
        """"""
        return self.i < len(self.nums)
        

# Your NestedIterator object will be instantiated and called as such:
# i, v = NestedIterator(nestedList), []
# while i.hasNext(): v.append(i.next())",11111111111111111111111111111111111111111111
150070550,python3,"2 years, 3 months",1523767495,Accepted,176 ms,/submissions/detail/150070550/,Not Pending,Count Binary Substrings,N/A,"class Solution:
    def countBinarySubstrings(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        c = None
        l = 0
        cseq = []
        for p in s:
          if c == p: l += 1
          else:
            c = p
            if l > 0:
              cseq.append(l)
            l = 1
        cseq.append(l)
        N = len(cseq)
        ret = 0       
        for i in range(N-1):
          ret += min(cseq[i], cseq[i+1])
        return ret
          ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150070455,python3,"2 years, 3 months",1523767446,Wrong Answer,N/A,/submissions/detail/150070455/,Not Pending,Count Binary Substrings,N/A,"class Solution:
    def countBinarySubstrings(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        c = None
        l = 0
        cseq = []
        for p in s:
          if c == p: l += 1
          else:
            c = p
            if l > 0:
              cseq.append(l)
            l = 1
        cseq.append(l)
        N = len(cseq)
        ret = 0        
        for i in range(N-1):
          ret += min(cseq[i], cseq[i-1])
        return ret
          ",111111111101111101101101111111101110000111101111111110111111101101000011011100011111111111
150068607,python3,"2 years, 3 months",1523766549,Accepted,136 ms,/submissions/detail/150068607/,Not Pending,Find All Numbers Disappeared in an Array,N/A,"class Solution:
    def findDisappearedNumbers(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        present = [False] * (1+len(nums))
        for x in nums:
          present[x] = True
        present[0] = True
        return [ i for i, f in enumerate(present) if not f]
        ",1111111111111111111111111111111111
150049383,cpp,"2 years, 3 months",1523759380,Accepted,1882 ms,/submissions/detail/150049383/,Not Pending,Race Car,N/A,"typedef pair<int,int> pii;
typedef pair<int, pii> node;

class Solution {
public:
    node make_node(int a, int b, int c) {
      return make_pair(a, make_pair(b,c));
    }
    int racecar(int target) {
      priority_queue< node, vector<node>, greater<node> > q;
      set<pii> cache;
      q.push(make_node(0,0,1));
      while(!q.empty()) {
        node top = q.top();
        q.pop();
        int l = top.first;
        int d = top.second.first;
        int s = top.second.second;
        if(d==target) {
          return l;
        }
        pii state = make_pair(d,s);
        if(cache.find(state) != cache.end()) {
          continue;
        }
        //cout << l << "" "" << d << "" "" << s << endl;
        cache.insert(state);
        if(abs(d+s) > 30000) continue;
        if(cache.find(make_pair(d+s,s*2)) == cache.end()) {
          q.push(make_node(l+1, d+s, s*2));
        }
        if(s>0) {
          if(cache.find(make_pair(d,-1)) == cache.end()) {
            q.push(make_node(l+1,d,-1));
          }
        }
        else {
          if(cache.find(make_pair(d,1)) == cache.end()) {
            q.push(make_node(l+1,d,1));
          }          
        }
      }
      return 0;
    }
};",11111111111111111111111111111111111111111111111111111
150049071,cpp,"2 years, 3 months",1523759282,Wrong Answer,N/A,/submissions/detail/150049071/,Not Pending,Race Car,N/A,"typedef pair<int,int> pii;
typedef pair<int, pii> node;

class Solution {
public:
    node make_node(int a, int b, int c) {
      return make_pair(a, make_pair(b,c));
    }
    int racecar(int target) {
      priority_queue< node, vector<node>, greater<node> > q;
      set<pii> cache;
      q.push(make_node(0,0,1));
      while(!q.empty()) {
        node top = q.top();
        q.pop();
        int l = top.first;
        int d = top.second.first;
        int s = top.second.second;
        if(d==target) {
          return l;
        }
        pii state = make_pair(d,s);
        if(cache.find(state) != cache.end()) {
          continue;
        }
        //cout << l << "" "" << d << "" "" << s << endl;
        cache.insert(state);
        if(abs(d+s) > 2*target) continue;
        if(cache.find(make_pair(d+s,s*2)) == cache.end()) {
          q.push(make_node(l+1, d+s, s*2));
        }
        if(s>0) {
          if(cache.find(make_pair(d,-1)) == cache.end()) {
            q.push(make_node(l+1,d,-1));
          }
        }
        else {
          if(cache.find(make_pair(d,1)) == cache.end()) {
            q.push(make_node(l+1,d,1));
          }          
        }
      }
      return 0;
    }
};",10111111111010111111111010001011111111011111111111111
150047928,cpp,"2 years, 3 months",1523758937,Time Limit Exceeded,N/A,/submissions/detail/150047928/,Not Pending,Race Car,N/A,"typedef pair<int,int> pii;
typedef pair<int, pii> node;

class Solution {
public:
    node make_node(int a, int b, int c) {
      return make_pair(a, make_pair(b,c));
    }
    int racecar(int target) {
      priority_queue< node, vector<node>, greater<node> > q;
      set<pii> cache;
      q.push(make_node(0,0,1));
      while(!q.empty()) {
        node top = q.top();
        q.pop();
        int l = top.first;
        int d = top.second.first;
        int s = top.second.second;
        if(d==target) {
          return l;
        }
        pii state = make_pair(d,s);
        if(cache.find(state) != cache.end()) {
          continue;
        }
        //cout << l << "" "" << d << "" "" << s << endl;
        cache.insert(state);
        if(cache.find(make_pair(d+s,s*2)) == cache.end()) {
          q.push(make_node(l+1, d+s, s*2));
        }
        if(s>0) {
          if(cache.find(make_pair(d,-1)) == cache.end()) {
            q.push(make_node(l+1,d,-1));
          }
        }
        else {
          if(cache.find(make_pair(d,1)) == cache.end()) {
            q.push(make_node(l+1,d,1));
          }          
        }
      }
      return 0;
    }
};",11111111111111111111111111111111111111111111111110000
150042580,python3,"2 years, 3 months",1523757399,Accepted,92 ms,/submissions/detail/150042580/,Not Pending,Ambiguous Coordinates,N/A,"class Solution:
    def ambiguousCoordinates(self, S):
        """"""
        :type S: str
        :rtype: List[str]
        """"""
        def is_valid(x):
          if x.startswith(""0"") and x != ""0"" and not x.startswith(""0.""): return False
          if x.endswith("".0""): return False
          if x.endswith(""0"") and ""."" in x: return False
          return True
          
        def generate(x):
          ret = []
          if is_valid(x):
            ret.append(x)
          for i in range(1, len(x)):
            num = ""{}.{}"".format(x[:i],x[i:])
            if is_valid(num): ret.append(num)
          return ret
        
        S = S.replace(""("","""").replace("")"","""")
        N = len(S)
        ret = []
        for i in range(1,N):
          A = S[:i]
          B = S[i:]
          A = generate(A)
          B = generate(B)
          for x in A:
            for y in B:
              ret.append(""({}, {})"".format(x,y))
        return ret",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150042215,python3,"2 years, 3 months",1523757290,Wrong Answer,N/A,/submissions/detail/150042215/,Not Pending,Ambiguous Coordinates,N/A,"class Solution:
    def ambiguousCoordinates(self, S):
        """"""
        :type S: str
        :rtype: List[str]
        """"""
        def is_valid(x):
          if x.startswith(""0"") and x != ""0"" and not x.startswith(""0.""): return False
          if x.endswith("".0""): return False
          if x.endswith(""0"") and ""."" in x: return False
          if x.endswith(""00""): return False
          return True
          
        def generate(x):
          ret = []
          if is_valid(x):
            ret.append(x)
          for i in range(1, len(x)):
            num = ""{}.{}"".format(x[:i],x[i:])
            if is_valid(num): ret.append(num)
          return ret
        
        S = S.replace(""("","""").replace("")"","""")
        N = len(S)
        ret = []
        for i in range(1,N):
          A = S[:i]
          B = S[i:]
          A = generate(A)
          B = generate(B)
          for x in A:
            for y in B:
              ret.append(""({}, {})"".format(x,y))
        return ret",1111111111111111111111111111110111001101111111111111111011101110000011100110111111111111111111110111011101110111011100000000001101110000011100110111111111111111111110111111111110111011101110111011101110111011101110111000000000000000000000111001101110000000000110111000001110011011111011111111111111111111111111111111111111111001111111111111111111
150041925,python3,"2 years, 3 months",1523757221,Wrong Answer,N/A,/submissions/detail/150041925/,Not Pending,Ambiguous Coordinates,N/A,"class Solution:
    def ambiguousCoordinates(self, S):
        """"""
        :type S: str
        :rtype: List[str]
        """"""
        def is_valid(x):
          if x.startswith(""0"") and x != ""0"" and not x.startswith(""0.""): return False
          if x.endswith("".0""): return False
          if x.endswith(""00""): return False
          return True
          
        def generate(x):
          ret = []
          if is_valid(x):
            ret.append(x)
          for i in range(1, len(x)):
            num = ""{}.{}"".format(x[:i],x[i:])
            if is_valid(num): ret.append(num)
          return ret
        
        S = S.replace(""("","""").replace("")"","""")
        N = len(S)
        ret = []
        for i in range(1,N):
          A = S[:i]
          B = S[i:]
          A = generate(A)
          B = generate(B)
          for x in A:
            for y in B:
              ret.append(""({}, {})"".format(x,y))
        return ret",1111111111111111111111111111010001000100010000111010001000000010000000100000001110111101000110000001000000000000000100000000000000010000000000000001101011101000110000001100000000000000100000000000000000000000000000001000000000000000000000000000000010000000000000000000000000000000110001110011010010010101111011100100111110111000011011011010001111
150041823,python3,"2 years, 3 months",1523757192,Wrong Answer,N/A,/submissions/detail/150041823/,Not Pending,Ambiguous Coordinates,N/A,"class Solution:
    def ambiguousCoordinates(self, S):
        """"""
        :type S: str
        :rtype: List[str]
        """"""
        def is_valid(x):
          if x.startswith(""0"") and x != ""0"" and not x.startswith(""0.""): return False
          if x.endswith("".0""): return False
          if x.endswith(""00""): return False
          return True
          
        def generate(x):
          ret = []
          if is_valid(x):
            ret.append(x)
          for i in range(1, len(x)):
            num = ""{}.{}"".format(x[:i],x[i:])
            if is_valid(num): ret.append(num)
          return ret
        
        S = S.replace(""("","""").replace("")"","""")
        N = len(S)
        ret = []
        for i in range(1,N):
          A = S[:i]
          B = S[i:]
          A = generate(A)
          B = generate(B)
          for x in A:
            for y in B:
              ret.append(""({},{})"".format(x,y))
        return ret",0000000000000100000000000010000000000000000000010000000000000000000000000000000000001000000010000000000000000000000000000000000000000000000000000000000001000000010000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
150039413,python3,"2 years, 3 months",1523756546,Accepted,100 ms,/submissions/detail/150039413/,Not Pending,Linked List Components,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def numComponents(self, head, G):
        """"""
        :type head: ListNode
        :type G: List[int]
        :rtype: int
        """"""
        G = set(G)
        cur = head
        while cur != None:
          if not cur.val in G: cur.val = None
          cur = cur.next
        
        ret = 0
        num = 0
        
        cur = head
        while cur != None:
          if cur.val == None:
            if num > 0: 
              ret += 1
            num = 0
          else:
            num += 1
          cur = cur.next
        if num > 0:
          ret += 1
        return ret
                ",111111111111111111111111111111111111111111111111111111111
150037778,python3,"2 years, 3 months",1523755994,Accepted,40 ms,/submissions/detail/150037778/,Not Pending,Most Common Word,N/A,"class Solution:
    def mostCommonWord(self, par, banned):
        """"""
        :type paragraph: str
        :type banned: List[str]
        :rtype: str
        """"""
        for s in ""!?',;."":
          par = par.replace(s, """")
        par = par.lower()
        from collections import Counter
        banned = set(banned)
        par = [p for p in par.strip().split() if not p in banned]
        return Counter(par).most_common(1)[0][0]
      
        
        ",1111111111111111111111111111111111111111111111
150031360,python3,"2 years, 3 months",1523752690,Accepted,72 ms,/submissions/detail/150031360/,Not Pending,Add Strings,N/A,"class Solution:
    def addStrings(self, num1, num2):
        """"""
        :type num1: str
        :type num2: str
        :rtype: str
        """"""
        N1 = len(num1)
        N2 = len(num2)
        ret = []
        j1 = N1-1
        j2 = N2-1
        carry = 0
        while j1 >= 0 and j2 >= 0:
          x1 = int(num1[j1])
          x2 = int(num2[j2])
          ret.append(x1+x2+carry)
          carry = ret[-1] // 10
          ret[-1] %= 10
          ret[-1] = str(ret[-1])
          j1 -= 1
          j2 -= 1
        while j1 >= 0:
          ret.append(int(num1[j1])+carry)
          carry = ret[-1] // 10
          ret[-1] %= 10
          ret[-1] = str(ret[-1])
          j1 -= 1
        while j2 >= 0:
          ret.append(int(num2[j2])+carry)
          carry = ret[-1] // 10
          ret[-1] %= 10
          ret[-1] = str(ret[-1])
          j2 -= 1
        if carry > 0:
          ret.append(str(carry))
        return """".join(ret)[::-1]
",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
150031323,python3,"2 years, 3 months",1523752672,Runtime Error,N/A,/submissions/detail/150031323/,Not Pending,Add Strings,N/A,"class Solution:
    def addStrings(self, num1, num2):
        """"""
        :type num1: str
        :type num2: str
        :rtype: str
        """"""
        N1 = len(num1)
        N2 = len(num2)
        ret = []
        j1 = N1-1
        j2 = N2-1
        carry = 0
        while j1 >= 0 and j2 >= 0:
          x1 = int(num1[j1])
          x2 = int(num2[j2])
          ret.append(x1+x2+carry)
          carry = ret[-1] // 10
          ret[-1] %= 10
          ret[-1] = str(ret[-1])
          j1 -= 1
          j2 -= 1
        while j1 >= 0:
          ret.append(int(num1[j1])+carry)
          carry = ret[-1] // 10
          ret[-1] %= 10
          ret[-1] = str(ret[-1])
          j1 -= 1
        while j2 >= 0:
          ret.append(int(num1[j2])+carry)
          carry = ret[-1] // 10
          ret[-1] %= 10
          ret[-1] = str(ret[-1])
          j2 -= 1
        if carry > 0:
          ret.append(str(carry))
        return """".join(ret)[::-1]
",
149748884,python3,"2 years, 3 months",1523569108,Accepted,40 ms,/submissions/detail/149748884/,Not Pending,Sort Colors,N/A,"class Solution:
    def sortColors(self, nums):
        """"""
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        cnt = [0,0,0]
        for x in nums:
            cnt[x] += 1
        k = 0
        for i in range(3):
            for j in range(cnt[i]):
                nums[k] = i
                k += 1",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111
149748571,python3,"2 years, 3 months",1523568934,Accepted,44 ms,/submissions/detail/149748571/,Not Pending,Binary Tree Level Order Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def levelOrder(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[List[int]]
        """"""
        ret = []
        def route(lev, cur):
            if cur == None:
                return
            if lev > len(ret):
                while lev > len(ret):
                    ret.append([])
            ret[lev-1].append(cur.val)
            route(lev+1, cur.left)
            route(lev+1, cur.right)
                            
        route(1, root)
        return ret",1111111111111111111111111111111111
149747226,python3,"2 years, 3 months",1523568151,Accepted,40 ms,/submissions/detail/149747226/,Not Pending,Subsets,N/A,"class Solution:
    def subsets(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        from itertools import combinations
        ret = []
        N = len(nums)
        for i in range(N+1):
            for c in combinations(nums, i):
                ret.append(list(c))
        return ret",1111111111
149746892,python,"2 years, 3 months",1523567976,Accepted,30 ms,/submissions/detail/149746892/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)/2
        while l <= r:
            mid = l + (r-l) / 2
            if isBadVersion(mid):
                r = mid-1
            else:
                l = mid+1
        for i in range(max(1,mid-2), min(mid+2,n+1)):
            if isBadVersion(i):
                return i
            ",111111111111111111111
149746822,python,"2 years, 3 months",1523567934,Wrong Answer,N/A,/submissions/detail/149746822/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)/2
        while l < r:
            mid = (l+r)/2
            if isBadVersion(mid):
                r = mid-1
            else:
                l = mid+1
        for i in range(max(1,mid-2), min(mid+2,n+1)):
            if isBadVersion(i):
                return i
            ",111111111110110101101
149746724,python,"2 years, 3 months",1523567885,Wrong Answer,N/A,/submissions/detail/149746724/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                r = mid-1
            else:
                l = mid+1
        for i in range(max(1,mid-2), min(mid+2,n+1)):
            if isBadVersion(i):
                return i
            ",111111111110110101101
149746700,python,"2 years, 3 months",1523567871,Wrong Answer,N/A,/submissions/detail/149746700/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                r = mid-1
            else:
                l = mid+1
        return mid
        for i in range(max(1,mid-2), min(mid+2,n+1)):
            if isBadVersion(i):
                return i
            ",110010011000000000100
149746649,python,"2 years, 3 months",1523567843,Wrong Answer,N/A,/submissions/detail/149746649/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                r = mid-1
            else:
                l = mid+1
        for i in range(max(1,mid-2), min(mid+2,n+1)):
            if isBadVersion(i):
                return i
            ",111111111110110101101
149746279,python,"2 years, 3 months",1523567646,Time Limit Exceeded,N/A,/submissions/detail/149746279/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                h = mid-1
            else:
                l = mid+1
        for i in range(max(1,mid-2), min(mid+2,n+1)):
            if isBadVersion(i):
                return i
            ",100000000000000000000
149746188,python,"2 years, 3 months",1523567592,Wrong Answer,N/A,/submissions/detail/149746188/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                h = mid-1
            else:
                l = mid+1
        for i in range(min(mid+2,n+1), max(0,mid-2), -1):
            if isBadVersion(i):
                return i
            ",000000000000000000000
149745914,python,"2 years, 3 months",1523567430,Time Limit Exceeded,N/A,/submissions/detail/149745914/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                h = mid-1
            else:
                l = mid+1
        return mid
            ",100000000000000000000
149745883,python,"2 years, 3 months",1523567411,Wrong Answer,N/A,/submissions/detail/149745883/,Not Pending,First Bad Version,N/A,"# The isBadVersion API is already defined for you.
# @param version, an integer
# @return a bool
# def isBadVersion(version):

class Solution(object):
    def firstBadVersion(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        
        l, r = 1, n
        mid = (l+r)//2
        while l < r:
            mid = (l+r)//2
            if isBadVersion(mid):
                h = mid-1
            else:
                l = mid+1
        return 
            ",000000000000000000000
149745510,python3,"2 years, 3 months",1523567204,Accepted,92 ms,/submissions/detail/149745510/,Not Pending,Find First and Last Position of Element in Sorted Array,N/A,"class Solution:
    def searchRange(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        import bisect
        left = bisect.bisect_left(nums, target)
        right = bisect.bisect_right(nums, target)
        if left == right:
            return [-1,-1]
        else:
            return [left,right-1]
",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
149744596,python,"2 years, 3 months",1523566679,Accepted,60 ms,/submissions/detail/149744596/,Not Pending,Increasing Triplet Subsequence,N/A,"class Solution(object):
    def increasingTriplet(self, nums):
        """"""
        :type nums: List[int]
        :rtype: bool
        """"""
        if len(nums) < 3: return False
        
        N = len(nums)
        mini = nums[0]
        nums[0] = None
        
        for i in range(1,N):
            if mini < nums[i]:
                continue
            else:
                mini = min(mini, nums[i])
                nums[i] = None
        mini = None
        for x in nums:
            if x == None: continue
            elif mini == None:
                mini = x
            elif mini > x:
                mini = x
            elif mini < x:
                return True
        return False
            
            ",1111111111111111111111111111111111111111111111111111111111111
148978600,python3,"2 years, 4 months",1523154071,Accepted,1304 ms,/submissions/detail/148978600/,Not Pending,Bus Routes,N/A,"class Solution:
    def numBusesToDestination(self, routes, S, T):
        """"""
        :type routes: List[List[int]]
        :type S: int
        :type T: int
        :rtype: int
        """"""
        
        if S == T: return 0
        
        N = len(routes)
        sroutes = [ set(r) for r in routes ]
        is_start = [ S in s for s in sroutes ]
        is_target = [ T in s for s in sroutes ]

        import numpy as np
        
        graph = [[0 for j in range(N)] for i in range(N) ]
        for i in range(N):
          for j in range(N):
            graph[i][j] = 1 if len(sroutes[i] & sroutes[j])>0 else 987654321
        
        
        dist = [987654321 for i in range(N)]
        visited = [False for i in range(N)]
        for i in range(N):
          if is_start[i]: dist[i] = 1
        
        for i in range(N):
          p = None
          min_dist = None
          for j in range(N):
            if not visited[j]:
              if p == None or min_dist > dist[j]:
                p = j
                min_dist = dist[j]
          if p is None:
            break
          visited[p] = True
          
          for j in range(N):
            dist[j] = min(dist[j], min_dist+graph[p][j])
        
        print(dist)
        best = None
        for i in range(N):
          if is_target[i]:
            if best == None or best > dist[i]:
              best = dist[i]
        if best >= 987654321:
          return -1
        else:
          return best",111111111111111111111111111111111111111111111
148978161,python3,"2 years, 4 months",1523153940,Wrong Answer,N/A,/submissions/detail/148978161/,Not Pending,Bus Routes,N/A,"class Solution:
    def numBusesToDestination(self, routes, S, T):
        """"""
        :type routes: List[List[int]]
        :type S: int
        :type T: int
        :rtype: int
        """"""
        
        if S == T: return 0
        
        N = len(routes)
        sroutes = [ set(r) for r in routes ]
        is_start = [ S in s for s in sroutes ]
        is_target = [ T in s for s in sroutes ]

        import numpy as np
        
        graph = [[0 for j in range(N)] for i in range(N) ]
        for i in range(N):
          for j in range(N):
            graph[i][j] = 1 if len(sroutes[i] & sroutes[j])>0 else 987654321
        
        
        dist = [987654321 for i in range(N)]
        visited = [False for i in range(N)]
        for i in range(N):
          if is_start[i]: dist[i] = 1
            
        for i in range(N):
          p = None
          min_dist = None
          for j in range(N):
            if not visited[j]:
              if p == None or min_dist > dist[j]:
                p = j
                min_dist = dist[j]
          for j in range(N):
            dist[j] = min(dist[j], min_dist+graph[p][j])
          
        best = None
        for i in range(N):
          if is_target[i]:
            if best == None or best > dist[i]:
              best = dist[i]
        if best >= 987654321:
          return -1
        else:
          return best",111111111111111111111111111111111111111101101
148973721,python3,"2 years, 4 months",1523152648,Accepted,432 ms,/submissions/detail/148973721/,Not Pending,Largest Sum of Averages,N/A,"class Solution:
    def largestSumOfAverages(self, A, K):
        """"""
        :type A: List[int]
        :type K: int
        :rtype: float
        """"""
        N = len(A)
        
        mavg = [[0 for i in range(N)] for j in range(N)]
        
        for i in range(N):
          sums = 0
          nums = 0
          for j in range(i,N):
            nums += 1
            sums += A[j]
            mavg[i][j] = sums / nums
            
        cache = [[-987654321 for i in range(N+1)] for j in range(N)]

        for i in range(N):
          cache[i][1] = mavg[0][i]
        
        for k in range(2,K+1):
          for i in range(N):
            for j in range(0,i):
              cache[i][k] = max(cache[i][k], cache[j][k-1] + mavg[j+1][i])
          
        best = -987654321
        for k in range(1,K+1):
          best = max(best, cache[N-1][k])
        return best
        
                                                                       
        ",111111111111111111111111111111111111111111111111111
148970528,python3,"2 years, 4 months",1523151738,Accepted,36 ms,/submissions/detail/148970528/,Not Pending,Binary Tree Pruning,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def travel(self, root):
        if root.left == None and root.right == None:
          return root.val
        
        left_val, right_val = 0, 0
        if not root.left is None:
          left_val = self.travel(root.left)
          if left_val == 0:
            root.left = None
        if not root.right is None:
          right_val = self.travel(root.right)
          if right_val == 0:
            root.right = None
        return root.val + left_val + right_val
        
    def pruneTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: TreeNode
        """"""
        self.travel(root)
        return root 
        ",1111111111111111111111111111
148969603,python3,"2 years, 4 months",1523151459,Accepted,436 ms,/submissions/detail/148969603/,Not Pending,Largest Triangle Area,N/A,"class Solution:
    def largestTriangleArea(self, P):
        """"""
        :type points: List[List[int]]
        :rtype: float
        """"""
        N = len(P)
        best = 0
        for i in range(N):
          for j in range(i+1,N):
            for k in range(j+1,N):
              X = [P[i][0], P[j][0], P[k][0]]
              Y = [P[i][1], P[j][1], P[k][1]]     
              area = 0
              for l in range(3):
                area += X[l%3] * Y[(l+1)%3]
                area -= X[(l+1)%3] * Y[l%3]
              best = max(abs(area), best)
        return best * 0.5",111111111111111111111111111111111111111111111111111111111
148605170,python3,"2 years, 4 months",1522914372,Accepted,40 ms,/submissions/detail/148605170/,Not Pending,Merge Sorted Array,N/A,"class Solution:
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: void Do not return anything, modify nums1 in-place instead.
        """"""
        p = m+n-1
        i, j = m-1, n-1
        while i >= 0 and j >= 0:
          if nums1[i] > nums2[j]:
            nums1[p] = nums1[i]
            nums1[i] = 0 
            i -= 1
          else:
            nums1[p] = nums2[j]
            nums2[j] = 0
            j -= 1
          p -= 1
        print(nums1, nums2)
        
        while i >= 0:
          nums1[p] = nums1[i]
          i -= 1
          p -= 1
        while j >= 0:
          nums1[p] = nums2[j]
          j -= 1
          p -= 1
",11111111111111111111111111111111111111111111111111111111111
148605105,python3,"2 years, 4 months",1522914323,Wrong Answer,N/A,/submissions/detail/148605105/,Not Pending,Merge Sorted Array,N/A,"class Solution:
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: void Do not return anything, modify nums1 in-place instead.
        """"""
        p = m+n-1
        i, j = m-1, n-1
        while i >= 0 and j >= 0 and p >= m:
          if nums1[i] > nums2[j]:
            nums1[p] = nums1[i]
            nums1[i] = 0 
            i -= 1
          else:
            nums1[p] = nums2[j]
            nums2[j] = 0
            j -= 1
          p -= 1
        
        while i >= 0:
          nums1[p] = nums1[i]
          i -= 1
          p -= 1
        while j >= 0:
          nums1[p] = nums2[j]
          j -= 1
          p -= 1
",11110111110110110011110101000000100000000001000000000101110
148604048,python3,"2 years, 4 months",1522913681,Wrong Answer,N/A,/submissions/detail/148604048/,Not Pending,Merge Sorted Array,N/A,"class Solution:
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: void Do not return anything, modify nums1 in-place instead.
        """"""
        p = m+n-1
        i, j = 0, 0
        while i < m and j < n and p >= m:
          if nums1[i] < nums2[j]:
            nums1[p] = nums1[i]
            nums1[i] = 0 
            i += 1
          else:
            nums1[p] = nums2[j]
            nums2[j] = 0
            j += 1
          p -= 1
        l = 0
        print(nums1, nums2)
        while i < m:
          nums1[p] = nums1[i]
          i += 1
          p -= 1
        while j < n:
          nums1[p] = nums2[j]
          j += 1
          p -= 1
        for i in range((m+n)//2):
          nums1[i], nums1[m+n-1-i] = nums1[m+n-1-i], nums1[i]",11111101010100001110011001000000000000000000000000000101010
148604015,python3,"2 years, 4 months",1522913665,Wrong Answer,N/A,/submissions/detail/148604015/,Not Pending,Merge Sorted Array,N/A,"class Solution:
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: void Do not return anything, modify nums1 in-place instead.
        """"""
        p = m+n-1
        i, j = 0, 0
        while i < m and j < n and p >= m:
          if nums1[i] < nums2[j]:
            nums1[p] = nums1[i]
            nums1[i] = 0 
            i += 1
          else:
            nums1[p] = nums2[j]
            nums2[i] = 0
            j += 1
          p -= 1
        l = 0
        print(nums1, nums2)
        while i < m:
          nums1[p] = nums1[i]
          i += 1
          p -= 1
        while j < n:
          nums1[p] = nums2[j]
          j += 1
          p -= 1
        for i in range((m+n)//2):
          nums1[i], nums1[m+n-1-i] = nums1[m+n-1-i], nums1[i]",11110101010100001110010001000000000000000000000000000101010
148604000,python3,"2 years, 4 months",1522913652,Runtime Error,N/A,/submissions/detail/148604000/,Not Pending,Merge Sorted Array,N/A,"class Solution:
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: void Do not return anything, modify nums1 in-place instead.
        """"""
        p = m+n-1
        i, j = 0, 0
        while i < m and j < n and p >= m:
          if nums1[i] < nums2[j]:
            nums1[p] = nums1[i]
            nums1[i] = 0 
            i += 1
          else:
            nums1[p] = nums2[j]
            numsj[i] = 0
            j += 1
          p -= 1
        l = 0
        print(nums1, nums2)
        while i < m:
          nums1[p] = nums1[i]
          i += 1
          p -= 1
        while j < n:
          nums1[p] = nums2[j]
          j += 1
          p -= 1
        for i in range((m+n)//2):
          nums1[i], nums1[m+n-1-i] = nums1[m+n-1-i], nums1[i]",
148598708,python3,"2 years, 4 months",1522911041,Wrong Answer,N/A,/submissions/detail/148598708/,Not Pending,Merge Sorted Array,N/A,"class Solution:
    def merge(self, nums1, m, nums2, n):
        """"""
        :type nums1: List[int]
        :type m: int
        :type nums2: List[int]
        :type n: int
        :rtype: void Do not return anything, modify nums1 in-place instead.
        """"""
        p = m+n-1
        i, j = 0, 0
        while i < m and j < n:
          if nums1[i] < nums2[j]:
            nums1[p] = nums1[i]
            i += 1
          else:
            nums1[p] = nums2[j]
            j += 1
          p -= 1
        while i < m:
          nums1[p] = nums1[i]
          i += 1
          p -= 1
        while j < n:
          nums1[p] = nums2[j]
          j += 1
          p -= 1
        for i in range((m+n)//2):
          nums1[i], nums1[m+n-1-i] = nums1[m+n-1-i], nums1[i]",11111101010100001110011001000000000000000000000000000101010
148593525,python3,"2 years, 4 months",1522908860,Accepted,56 ms,/submissions/detail/148593525/,Not Pending,Top K Frequent Elements,N/A,"class Solution:
    def topKFrequent(self, nums, k):
        """"""
        :type nums: List[int]
        :type k: int
        :rtype: List[int]
        """"""
        from collections import Counter
        return sorted([k for k, v in Counter(nums).most_common(k)])
        ",11111111111111111111
148592977,python3,"2 years, 4 months",1522908621,Accepted,60 ms,/submissions/detail/148592977/,Not Pending,Odd Even Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def print(self, head):
      cur = head
      while not cur is None:
        print(cur.val, end = ""->"")
        cur = cur.next
      print()
        
    def oddEvenList(self, head):
      """"""
      :type head: ListNode
      :rtype: ListNode
      """"""
      if head is None or head.next is None: return head
      cur = head
      i = 0
      cursor = [ ListNode(None), ListNode(None) ]
      even_head = head.next
      while not cur is None:
        #print(i)
        cursor[i%2].next = cur
        cursor[i%2] = cur 
        cur = cur.next
        cursor[i%2].next = None
        #self.print(head)
        #self.print(even_head)
        i += 1
      cursor[0].next = even_head
      return head",1111111111111111111111111111111111111111111111111111111111111111111111
148588915,python3,"2 years, 4 months",1522906903,Time Limit Exceeded,N/A,/submissions/detail/148588915/,Not Pending,Odd Even Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def oddEvenList(self, head):
      """"""
      :type head: ListNode
      :rtype: ListNode
      """"""
      if head is None or head.next is None: return head
      cur = head
      i = 0
      cursor = [ ListNode(None), ListNode(None) ]
      even_head = head.next
      while not cur is None:
        cursor[i%2].next = cur
        cursor[i%2] = cur 
        cur = cur.next
        i += 1
      cursor[0].next = even_head
      return head",1000000000000000000000000000000000000000000000000000000000000000000000
146372562,cpp,"2 years, 4 months",1521700174,Accepted,22 ms,/submissions/detail/146372562/,Not Pending,Palindrome Linked List,N/A,"/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
        
class Solution {
public:
    ListNode *front;
    bool run(ListNode *cur) {
      if(cur == NULL) {
        return true;
      }
      if(run(cur->next)&& front->val == cur->val) {
        front = front->next;
        return true;
      }
      else {
        return false;
      }
    }
    bool isPalindrome(ListNode* head) {
        front = head;
        return run(head);
    }
};",11111111111111111111111111
146371673,python3,"2 years, 4 months",1521699862,Runtime Error,N/A,/submissions/detail/146371673/,Not Pending,Palindrome Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def run(self, cur):
      if cur == None:
        return True
      if self.run(cur.next) and self.head.val == cur.val:
        self.head = self.head.next
        return True
      else:
        return False
      
    def isPalindrome(self, head):
        import sys
        sys.setrecursionlimit(1000000)

        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        self.head = head
        return self.run(head)
        ",
146371637,python3,"2 years, 4 months",1521699848,Runtime Error,N/A,/submissions/detail/146371637/,Not Pending,Palindrome Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def run(self, cur):
      if cur == None:
        return True
      if self.run(cur.next) and self.head.val == cur.val:
        self.head = self.head.next
        return True
      else:
        return False
      
    def isPalindrome(self, head):
        import sys
        sys.setrecursionlimit(100000)

        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        self.head = head
        return self.run(head)
        ",
146371620,python3,"2 years, 4 months",1521699841,Runtime Error,N/A,/submissions/detail/146371620/,Not Pending,Palindrome Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def run(self, cur):
      if cur == None:
        return True
      if self.run(cur.next) and self.head.val == cur.val:
        self.head = self.head.next
        return True
      else:
        return False
      
    def isPalindrome(self, head):
        import sys
        sys.setrecursionlimit(10000)

        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        self.head = head
        return self.run(head)
        ",
146371446,python3,"2 years, 4 months",1521699779,Runtime Error,N/A,/submissions/detail/146371446/,Not Pending,Palindrome Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def run(self, cur):
      if cur == None:
        return True
      if self.run(cur.next) and self.head.val == cur.val:
        self.head = self.head.next
        return True
      else:
        return False
      
    def isPalindrome(self, head):
        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        self.head = head
        return self.run(head)
        ",
146371074,python,"2 years, 4 months",1521699630,Runtime Error,N/A,/submissions/detail/146371074/,Not Pending,Palindrome Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def run(self, cur):
      if cur == None:
        return True
      if self.run(cur.next) and self.head.val == cur.val:
        self.head = self.head.next
        return True
      else:
        return False
      
    def isPalindrome(self, head):
        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        self.head = head
        return self.run(head)
        ",
146370182,python,"2 years, 4 months",1521699295,Accepted,52 ms,/submissions/detail/146370182/,Not Pending,Symmetric Tree,N/A,"# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def doSymmetry(self, root):
      if root == None:
        return None
      cur = TreeNode(root.val)
      cur.left = self.doSymmetry(root.right)
      cur.right = self.doSymmetry(root.left)
      return cur
    
    def check(self, a, b):
      if a == None and b == None: return True
      if a != None and b != None:      
        if a.val != b.val: return False
        if not self.check(a.left, b.left): return False
        if not self.check(a.right, b.right): return False
        return True
      else:
        return False
      
    
    def isSymmetric(self, root):
        """"""
        :type root: TreeNode
        :rtype: bool
        """"""
        
        sym = self.doSymmetry(root)
        
        return self.check(root, sym)",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
146368947,python,"2 years, 4 months",1521698807,Accepted,86 ms,/submissions/detail/146368947/,Not Pending,Linked List Cycle,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def hasCycle(self, head):
        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        if head == None:
          return False
        if head.val == None:
          return True
        
        head.val = None
        return self.hasCycle(head.next)
        ",1111111111111111
146368925,python,"2 years, 4 months",1521698798,Runtime Error,N/A,/submissions/detail/146368925/,Not Pending,Linked List Cycle,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def hasCycle(self, head):
        """"""
        :type head: ListNode
        :rtype: bool
        """"""
        if head == None:
          return False
        if head.val == None:
          return True
        
        head.val = None
        return hasCycle(head.next)
        ",
146367439,python,"2 years, 4 months",1521698263,Accepted,97 ms,/submissions/detail/146367439/,Not Pending,Min Stack,N/A,"class MinStack(object):

    def __init__(self):
        """"""
        initialize your data structure here.
        """"""
        self.min = []
        self.stk = []

    def push(self, x):
        """"""
        :type x: int
        :rtype: void
        """"""
        if len(self.stk) == 0:
          self.min.append(x)
        else:
          self.min.append(min(self.getMin(),x))
        self.stk.append(x)

    def pop(self):
        """"""
        :rtype: void
        """"""
        self.stk.pop()
        self.min.pop()

    def top(self):
        """"""
        :rtype: int
        """"""
        return self.stk[-1]
        

    def getMin(self):
        """"""
        :rtype: int
        """"""
        return self.min[-1]
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(x)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()",111111111111111111
146366534,python,"2 years, 4 months",1521697945,Accepted,1023 ms,/submissions/detail/146366534/,Not Pending,Min Stack,N/A,"class MinStack(object):

    def __init__(self):
        """"""
        initialize your data structure here.
        """"""
        self.min = None
        self.stk = []

    def push(self, x):
        """"""
        :type x: int
        :rtype: void
        """"""
        self.stk.append(x)

    def pop(self):
        """"""
        :rtype: void
        """"""
        self.stk.pop()

    def top(self):
        """"""
        :rtype: int
        """"""
        return self.stk[-1]
        

    def getMin(self):
        """"""
        :rtype: int
        """"""
        return min(self.stk)
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(x)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()",111111111111111111
145827606,python3,"2 years, 4 months",1521427254,Accepted,160 ms,/submissions/detail/145827606/,Not Pending,Roman to Integer,N/A,"class Solution:
    def romanToInt(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        ret = 0
        
        nums = {
          ""I"" : 1,
          ""V"" : 5,
          ""X"" : 10,
          ""L"" : 50,
          ""C"" : 100,
          ""D"" : 500,
          ""M"" : 1000
        }
        ones = set([""I"", ""X"", ""C""])
        five_ten = { ""I"": ""VX"", ""X"" : ""LC"", ""C"" : ""DM"" }
        
        n = len(s)
        ret = 0
        RLE = []
        prev = None
        cnt = 0
        for x in s:
          if prev == x:
            cnt += 1
          else:
            if cnt > 0:
              RLE.append([prev, cnt])
            cnt = 1
            prev = x
        if cnt > 0:
          RLE.append([prev, cnt])
          
        #print(RLE)
        
        m = len(RLE)
        for i in range(m):
          r, cnt = RLE[i]
          if r in ones:
            if i+1 < m and RLE[i+1][0] in five_ten[r]:
              ret -= nums[r] * cnt
            else:
              ret += nums[r] * cnt
          else:
            ret += nums[r] * cnt
        return ret
            

145823913,python3,"2 years, 4 months",1521425961,Wrong Answer,N/A,/submissions/detail/145823913/,Not Pending,Roman to Integer,N/A,"class Solution:
    def romanToInt(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        ret = 0
        
        
        for i, c in enumerate([""CDM"", ""XLC"", ""IVX""]):
          I, V, X = list(c)
          nums = [I, I+I, I+I+I, I+V, V, V+I, V+I+I, V+I+I+I, I+X]
          for j, n in enumerate(nums[::-1]):
            if n in s:
              s = s.replace(n, """")
              ret += (9-j) * 10**(2-i)
              break
        ret += s.count(""M"") * 1000
        
        return ret
            

145822074,python,"2 years, 4 months",1521425296,Accepted,42 ms,/submissions/detail/145822074/,Not Pending,House Robber,N/A,"class Solution(object):
    def rob(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        if len(nums) == 0:
          return 0
        
        planA, planB = 0, nums[0]
        best = nums[0]
        for x in nums[1:]:
          planA, planB = max(planA,planB), planA + x
          best = max(best, max(planA, planB))
        return best",111111111111111111111111111111111111111111111111111111111111111111111
145821707,python,"2 years, 4 months",1521425158,Wrong Answer,N/A,/submissions/detail/145821707/,Not Pending,House Robber,N/A,"class Solution(object):
    def rob(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        if len(nums) == 0:
          return 0
        
        planA, planB = 0, nums[0]
        best = nums[0]
        for x in nums[1:]:
          planA, planB = planB, planA + x
          best = max(best, max(planA, planB))
        return best",111111111111111111110111111111001110111110010000000000000000000000001
145821069,python,"2 years, 4 months",1521424934,Accepted,369 ms,/submissions/detail/145821069/,Not Pending,Intersection of Two Linked Lists,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """"""
        :type head1, head1: ListNode
        :rtype: ListNode
        """"""
        
        head = ListNode(None)
        cur = head
        
        while headA != None and headB != None:
          if headA.val == headB.val:
            node2add = headA
            cur.next = node2add
            headA = headA.next 
            headB = headB.next
            node2add.next = None
            cur = cur.next
          elif headA.val < headB.val: headA = headA.next
          else: headB = headB.next
            
        return head.next
            
            ",111111111111111111111111111111111111111111
145820993,python,"2 years, 4 months",1521424905,Time Limit Exceeded,N/A,/submissions/detail/145820993/,Not Pending,Intersection of Two Linked Lists,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """"""
        :type head1, head1: ListNode
        :rtype: ListNode
        """"""
        
        head = ListNode(None)
        cur = head
        
        while headA != None and headB != None:
          if headA.val == headB.val:
            node2add = headA
            cur.next = node2add
            headA = headA.next 
            headB = headB.next
            node2add.next = None
            cur = cur.next
          if headA.val < headB.val: headA = headA.next
          if headA.val < headB.val: headB = headB.next
            
        return head.next
            
            ",111111100000000000000000000000000000000000
145819450,python3,"2 years, 4 months",1521424362,Accepted,40 ms,/submissions/detail/145819450/,Not Pending,Pascal's Triangle,N/A,"class Solution:
    def generate(self, numRows):
        """"""
        :type numRows: int
        :rtype: List[List[int]]
        """"""
        if numRows == 0: return []
        ret = [[1]]
        
        for i in range(2,numRows+1):
          row = [1]
          for j in range(i-2):
            row.append(ret[-1][j]+ret[-1][j+1])
          row.append(1)
          ret.append(row)
        return ret
      ",111111111111111
145818884,python3,"2 years, 4 months",1521424137,Accepted,52 ms,/submissions/detail/145818884/,Not Pending,Merge Two Sorted Lists,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeTwoLists(self, l1, l2):
        """"""
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """"""
        head = ListNode(None)
        cur = head
        while l1 != None and l2 != None:
          if l1.val <= l2.val:
            cur.next = ListNode(l1.val)
            cur = cur.next
            l1 = l1.next
          else:
            cur.next = ListNode(l2.val)
            cur = cur.next
            l2 = l2.next
        
        while l1 != None:
            cur.next = ListNode(l1.val)
            cur = cur.next
            l1 = l1.next
            
        while l2 != None:         
            cur.next = ListNode(l2.val)
            cur = cur.next
            l2 = l2.next
        return head.next",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145817668,python3,"2 years, 4 months",1521423681,Accepted,76 ms,/submissions/detail/145817668/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution:
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        i = 0
        for i in range(n-1, 0, -1):
          if nums[i] == nums[i-1]:
            nums[i] = None
        j = 0
        for i in range(n):
          if nums[i] == None:
            j = max(i, j)
            while j < n and nums[j] == None:
              j += 1
            if j == n: 
              break
            nums[i] = nums[j]
            nums[j] = None
        return len(nums) - nums.count(None)
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145816248,python3,"2 years, 4 months",1521423149,Time Limit Exceeded,N/A,/submissions/detail/145816248/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution:
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        i = 0
        while i < n:
          j = i
          while j < n and nums[i] == nums[j]:
            j += 1
          else:
            st = i+1
            for k in range(j,n):
              nums[st] = nums[k]
              st += 1
            n = st
          i += 1
        return n
        ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
145815354,python3,"2 years, 4 months",1521422810,Time Limit Exceeded,N/A,/submissions/detail/145815354/,Not Pending,Remove Duplicates from Sorted Array,N/A,"class Solution:
    def removeDuplicates(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        i = 1
        while i < n:
          if nums[i-1] == nums[i]:
            for j in range(i,n-1):
              nums[j]=nums[j+1]
            n -= 1
          else:
            i += 1
        return n
        ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
145814734,python3,"2 years, 4 months",1521422586,Accepted,48 ms,/submissions/detail/145814734/,Not Pending,Reverse Linked List,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseList(self, head):
        """"""
        :type head: ListNode
        :rtype: ListNode
        """"""
        cur = head
        prev = None
        while cur != None:
          next = cur.next
          cur.next = prev
          prev = cur
          cur = next
        return prev        ",111111111111111111111111111
145813732,python3,"2 years, 4 months",1521422192,Accepted,80 ms,/submissions/detail/145813732/,Not Pending,Convert Sorted Array to Binary Search Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def sortedArrayToBST(self, nums):
        """"""
        :type nums: List[int]
        :rtype: TreeNode
        """"""
        if len(nums) == 0: 
          return None
        if len(nums) == 1:
          return TreeNode(nums[0])
        mid = len(nums)//2
        cur = TreeNode(nums[mid])
        cur.left = self.sortedArrayToBST(nums[:mid])
        cur.right = self.sortedArrayToBST(nums[mid+1:])
        return cur",11111111111111111111111111111111
145539781,python3,"2 years, 4 months",1521276601,Accepted,56 ms,/submissions/detail/145539781/,Not Pending,Detect Capital,N/A,"class Solution:
    def detectCapitalUse(self, word):
        """"""
        :type word: str
        :rtype: bool
        """"""
        return word.isupper() or word.islower() or (len(word)>0 and word[0].isupper() and word[1:].islower
145539614,python3,"2 years, 4 months",1521276485,Wrong Answer,N/A,/submissions/detail/145539614/,Not Pending,Detect Capital,N/A,"class Solution:
    def detectCapitalUse(self, word):
        """"""
        :type word: str
        :rtype: bool
        """"""
        return word.isupper
145539402,python3,"2 years, 4 months",1521276350,Accepted,56 ms,/submissions/detail/145539402/,Not Pending,Maximum Subarray,N/A,"class Solution:
    def maxSubArray(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        
        best = max(nums)
        cur = 0
        for x in nums:
          cur += x
          best = max(best, cur)
          
          if cur < 0: 
            cur = 0

        return best",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145539321,python3,"2 years, 4 months",1521276305,Wrong Answer,N/A,/submissions/detail/145539321/,Not Pending,Maximum Subarray,N/A,"class Solution:
    def maxSubArray(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        
        best = max(nums)
        cur = 0
        for x in nums:
          cur += x
          if cur < 0: 
            cur = 0
          best = max(best, cur)

        return best",1110010011101111110101111111111101111111110111101111111110111111111111101111111111111111111111110111111111111111111110111111111111111111111111111111111111111111111111111111111111111111111111111111101111
145539043,python3,"2 years, 4 months",1521276123,Accepted,68 ms,/submissions/detail/145539043/,Not Pending,Largest Number,N/A,"class Solution:
    def largestNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: str
        """"""
        nums = list(map(str, nums))
        if nums.count(""0"") == len(nums): return ""0""
        n = len(nums)
        for i in range(n):
          for j in range(i+1,n):
            if nums[j]+nums[i] > nums[i]+nums[j]:
              nums[i], nums[j] = nums[j], nums[i]
        return """".join(nums)",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145539004,python3,"2 years, 4 months",1521276097,Wrong Answer,N/A,/submissions/detail/145539004/,Not Pending,Largest Number,N/A,"class Solution:
    def largestNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: str
        """"""
        nums = list(map(str, nums))
        n = len(nums)
        for i in range(n):
          for j in range(i+1,n):
            if nums[j]+nums[i] > nums[i]+nums[j]:
              nums[i], nums[j] = nums[j], nums[i]
        return """".join(nums)",11111111111111111111111111111111111111111111010110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145536777,python3,"2 years, 4 months",1521274689,Accepted,440 ms,/submissions/detail/145536777/,Not Pending,Shuffle an Array,N/A,"class Solution:

    def __init__(self, nums):
        """"""
        :type nums: List[int]
        """"""
        self.org = nums[:]
        self.cur = nums[:]

    def reset(self):
        """"""
        Resets the array to its original configuration and return it.
        :rtype: List[int]
        """"""
        if len(self.cur) == 0:
          return []
        self.cur[:] = self.org[:]
        return self.cur

    def shuffle(self):
        """"""
        Returns a random shuffling of the array.
        :rtype: List[int]
        """"""
        if len(self.cur) == 0:
          return []
        import random
        random.shuffle(self.cur)
        return self.cur


# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.reset()
# param_2 = obj.shuffle()",1111111111
145536501,python3,"2 years, 4 months",1521274517,Wrong Answer,N/A,/submissions/detail/145536501/,Not Pending,Shuffle an Array,N/A,"class Solution:

    def __init__(self, nums):
        """"""
        :type nums: List[int]
        """"""
        self.org = nums[:]
        self.cur = nums[:]

    def reset(self):
        """"""
        Resets the array to its original configuration and return it.
        :rtype: List[int]
        """"""
        if len(self.cur) == 0:
          return []
        self.cur[:] = self.org[:]
        return self.cur

    def shuffle(self):
        """"""
        Returns a random shuffling of the array.
        :rtype: List[int]
        """"""
        if len(self.cur) == 0:
          return []
        
        x = self.cur[0]
        for i in range(len(self.cur)-1):
          self.cur[i] = self.cur[i+1] 
        self.cur[-1] = x
        return self.cur


# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.reset()
# param_2 = obj.shuffle()",1111110000
145536390,python3,"2 years, 4 months",1521274450,Runtime Error,N/A,/submissions/detail/145536390/,Not Pending,Shuffle an Array,N/A,"class Solution:

    def __init__(self, nums):
        """"""
        :type nums: List[int]
        """"""
        self.org = nums[:]
        self.cur = nums[:]

    def reset(self):
        """"""
        Resets the array to its original configuration and return it.
        :rtype: List[int]
        """"""
        self.cur[:] = self.org[:]
        return self.cur

    def shuffle(self):
        """"""
        Returns a random shuffling of the array.
        :rtype: List[int]
        """"""
        x = self.cur[0]
        for i in range(len(self.cur)-1):
          self.cur[i] = self.cur[i+1] 
        self.cur[-1] = x
        return self.cur


# Your Solution object will be instantiated and called as such:
# obj = Solution(nums)
# param_1 = obj.reset()
# param_2 = obj.shuffle()",
145535785,python3,"2 years, 4 months",1521274128,Accepted,40 ms,/submissions/detail/145535785/,Not Pending,Binary Tree Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def inorderTraversal(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[int]
        """"""
        if root is None: 
          return []
        left = [] if root.left is None else self.inorderTraversal(root.left)
        right = [] if root.right is None else self.inorderTraversal(root.right)
        return left + [root.val] + right
        ",11111111111111111111111111111111111111111111111111111111111111111111
145535649,python3,"2 years, 4 months",1521274051,Runtime Error,N/A,/submissions/detail/145535649/,Not Pending,Binary Tree Inorder Traversal,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def inorderTraversal(self, root):
        """"""
        :type root: TreeNode
        :rtype: List[int]
        """"""
        if root.left is None and root.right is None:
          return [root.val]
        left = [] if root.left is None else self.inorderTraversal(root.left)
        right = [] if root.right is None else self.inorderTraversal(root.right)
        return left + [root.val] + right
        ",
145534258,python3,"2 years, 4 months",1521273258,Accepted,48 ms,/submissions/detail/145534258/,Not Pending,Factorial Trailing Zeroes,N/A,"class Solution:
    def trailingZeroes(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        i = 5
        ret = 0
        while True:
          if n // i == 0:
            break
          ret += n // i
          i *= 5
        return ret

145533783,python3,"2 years, 4 months",1521272986,Time Limit Exceeded,N/A,/submissions/detail/145533783/,Not Pending,Factorial Trailing Zeroes,N/A,"class Solution:
    def trailingZeroes(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        t, f = 0, 0
        for i in range(2,n+1):
          while i % 2 == 0:
            i //= 2
            t += 1
          while i % 5 == 0:
            i //= 5
            f += 1
            
        return min(f, t)",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100
145531755,python3,"2 years, 4 months",1521271847,Accepted,44 ms,/submissions/detail/145531755/,Not Pending,Count and Say,N/A,"class Solution:
    def countAndSay(self, n):
        """"""
        :type n: int
        :rtype: str
        """"""
        say = ""1""
        
        for i in range(n-1):
          cur = """"
          nrepeat = 0
          count = """"
          for c in say:
            if cur == c:
              nrepeat += 1
            else:
              if nrepeat > 0:
                count += str(nrepeat) + cur 
              cur = c
              nrepeat = 1
          if nrepeat > 0:
            count += str(nrepeat) + cur 
          say = count
        return say",111111111111111111
145530340,python3,"2 years, 4 months",1521271078,Accepted,56 ms,/submissions/detail/145530340/,Not Pending,Excel Sheet Column Number,N/A,"class Solution:
    def titleToNumber(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        ret = 0
        for c in s:
          ret *= 26
          ret += (ord(c)-ord('A')+1)
        return ret

145528961,python3,"2 years, 4 months",1521270288,Accepted,56 ms,/submissions/detail/145528961/,Not Pending,Rotate Array,N/A,"class Solution:
    def rotate(self, nums, k):
        """"""
        :type nums: List[int]
        :type k: int
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        k = k % len(nums)
        nums[:] = nums[-k:] + nums[:-k]",111111111111111111111111111111111
145528870,python3,"2 years, 4 months",1521270235,Time Limit Exceeded,N/A,/submissions/detail/145528870/,Not Pending,Rotate Array,N/A,"class Solution:
    def rotate(self, nums, k):
        """"""
        :type nums: List[int]
        :type k: int
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        for _ in range(k):
          x = nums[-1]
          for i in range(len(nums)-1,0,-1):
            nums[i] = nums[i-1]
          nums[0] = x
          #print(nums)
          ",111111111111111111111111111111110
145528505,python3,"2 years, 4 months",1521270020,Wrong Answer,N/A,/submissions/detail/145528505/,Not Pending,Rotate Array,N/A,"class Solution:
    def rotate(self, nums, k):
        """"""
        :type nums: List[int]
        :type k: int
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        nums[:] = nums[-k:] + nums[:-k]",111111011110111111111000100011101
145396403,python3,"2 years, 4 months",1521185341,Accepted,108 ms,/submissions/detail/145396403/,Not Pending,Valid Palindrome,N/A,"class Solution:
    def isPalindrome(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        s = """".join([c for c in s.lower() if c.isalnum()])
        return s == s[::-1]",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145396346,python3,"2 years, 4 months",1521185311,Runtime Error,N/A,/submissions/detail/145396346/,Not Pending,Valid Palindrome,N/A,"class Solution:
    def isPalindrome(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        s = """".join([c for c in s.lower() if c.isalphanum()])
        return s == s[::-1]",
145396300,python3,"2 years, 4 months",1521185293,Wrong Answer,N/A,/submissions/detail/145396300/,Not Pending,Valid Palindrome,N/A,"class Solution:
    def isPalindrome(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        s = """".join([c for c in s.lower() if c.isalpha()])
        return s == s[::-1]",11111111110111111101101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111001111111011111011111011101011111101111111111111110111011011110101111111110111011010111111111111100111
145396203,python3,"2 years, 4 months",1521185248,Wrong Answer,N/A,/submissions/detail/145396203/,Not Pending,Valid Palindrome,N/A,"class Solution:
    def isPalindrome(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        s = s.lower()
        return s == s[::-1]",11110001111110111111110000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111011111111001110111111111101111111101011111011111111110111111111111111111111111111110111111110011010
145396145,python3,"2 years, 4 months",1521185214,Accepted,52 ms,/submissions/detail/145396145/,Not Pending,Contains Duplicate,N/A,"class Solution:
    def containsDuplicate(self, nums):
        """"""
        :type nums: List[int]
        :rtype: bool
        """"""
        return len(nums) != len(set(nums))",111111111111111111
145396009,python3,"2 years, 4 months",1521185150,Accepted,904 ms,/submissions/detail/145396009/,Not Pending,Power of Three,N/A,"class Solution:
    def isPowerOfThree(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        import math
        if n <= 0: return False
        l, h = 0, round(math.pow(n,1/3))
        for i in range(32):
          m = (l+h) // 2
          if 3 ** m == n:
            return True
          if 3 ** m > n:
            h = m-1
          else:
            l = m+1
        return False
145395866,python3,"2 years, 4 months",1521185093,Runtime Error,N/A,/submissions/detail/145395866/,Not Pending,Power of Three,N/A,"class Solution:
    def isPowerOfThree(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        import math
        l, h = 0, round(math.pow(n,1/3))
        for i in range(32):
          m = (l+h) // 2
          if 3 ** m == n:
            return True
          if 3 ** m > n:
            h = m-1
          else:
            l = m+1
        return False",
145395758,python3,"2 years, 4 months",1521185039,Time Limit Exceeded,N/A,/submissions/detail/145395758/,Not Pending,Power of Three,N/A,"class Solution:
    def isPowerOfThree(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        l, h = 0, n
        for i in range(100):
          m = (l+h) // 2
          if 3 ** m == n:
            return True
          if 3 ** m > n:
            h = m-1
          else:
            l = m+1
        return False
145395538,python3,"2 years, 4 months",1521184954,Wrong Answer,N/A,/submissions/detail/145395538/,Not Pending,Power of Three,N/A,"class Solution:
    def isPowerOfThree(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        l, h = 0, n
        if n == 0: return False
        for i in range(100):
          m = (l+h) // 2
          if m ** 3 == n:
            return True
          if m ** 3 > n:
            h = m-1
          else:
            l = m+1
        return False
145395423,python3,"2 years, 4 months",1521184904,Wrong Answer,N/A,/submissions/detail/145395423/,Not Pending,Power of Three,N/A,"class Solution:
    def isPowerOfThree(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        l, h = 0, n
        
        for i in range(100):
          m = (l+h) // 2
          if m ** 3 == n:
            return True
          if m ** 3 > n:
            h = m-1
          else:
            l = m
145394929,python3,"2 years, 4 months",1521184678,Accepted,64 ms,/submissions/detail/145394929/,Not Pending,Plus One,N/A,"class Solution:
    def plusOne(self, digits):
        """"""
        :type digits: List[int]
        :rtype: List[int]
        """"""
        
        digits = digits[::-1]
        
        digits[0] += 1
        
        c = 0
        
        for i in range(len(digits)):
          digits[i] += c
          c = digits[i] // 10
          digits[i] %= 10
        if c > 0:
          digits.append(c)
        return digits[::-1]",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145394387,python3,"2 years, 4 months",1521184468,Accepted,620 ms,/submissions/detail/145394387/,Not Pending,4Sum II,N/A,"class Solution:
    def fourSumCount(self, A, B, C, D):
        """"""
        :type A: List[int]
        :type B: List[int]
        :type C: List[int]
        :type D: List[int]
        :rtype: int
        """"""
        from collections import defaultdict
        x, y = defaultdict(int), defaultdict(int)
        for a in A:
          for b in B:
            x[a+b] += 1
            
        for c in C:
          for d in D:
            y[c+d] += 1
        ret = 0  
        
        for k, v in x.items():
          ret += v * y[-k]
          
        return ret",111111111111111111111111111111111111111111111111
145394346,python3,"2 years, 4 months",1521184452,Wrong Answer,N/A,/submissions/detail/145394346/,Not Pending,4Sum II,N/A,"class Solution:
    def fourSumCount(self, A, B, C, D):
        """"""
        :type A: List[int]
        :type B: List[int]
        :type C: List[int]
        :type D: List[int]
        :rtype: int
        """"""
        from collections import defaultdict
        x, y = defaultdict(int), defaultdict(int)
        for a in A:
          for b in B:
            x[a+b] += 1
            
        for c in C:
          for d in D:
            y[c+d] += 1
        ret = 0  
        
        for k, v in x.items():
          ret += v * y[-k]",000000000000000000000000000000000000000000000000
145394150,python3,"2 years, 4 months",1521184363,Time Limit Exceeded,N/A,/submissions/detail/145394150/,Not Pending,4Sum II,N/A,"class Solution:
    def fourSumCount(self, A, B, C, D):
        """"""
        :type A: List[int]
        :type B: List[int]
        :type C: List[int]
        :type D: List[int]
        :rtype: int
        """"""
        from collections import defaultdict
        d = defaultdict(int)
        for a in A:
          for b in B:
            for c in C:
              d[a+b+c] += 1
        ret = 0    
        for s in D:
          ret += d[-s]
        return ret
              
        ",111111111111111111111111111111111100000000000000
145393589,python3,"2 years, 4 months",1521184140,Accepted,44 ms,/submissions/detail/145393589/,Not Pending,Intersection of Two Arrays,N/A,"class Solution:
    def intersection(self, nums1, nums2):
        """"""
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """"""
        return sorted(list(set(nums1) & set(nums2)))",111111111111111111111111111111111111111111111111111111111111
145393425,python3,"2 years, 4 months",1521184077,Accepted,268 ms,/submissions/detail/145393425/,Not Pending,Intersection of Two Arrays II,N/A,"class Solution:
    def intersect(self, nums1, nums2):
        """"""
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """"""
        ret = []
        for s in nums1:
          for j in range(len(nums2)):
            if s == nums2[j]:
              nums2[j] = None
              ret.append(s)
              break
        return ret",1111111111111111111111111111111111111111111111111111111111111
145393331,python3,"2 years, 4 months",1521184036,Wrong Answer,N/A,/submissions/detail/145393331/,Not Pending,Intersection of Two Arrays II,N/A,"class Solution:
    def intersect(self, nums1, nums2):
        """"""
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: List[int]
        """"""
        ret = []
        for s in nums1:
          for t in nums2:
            if s == t:
              t = None
              ret.append(s)
              break
        return ret",1111111111111101101101111111111100000011100100011100000000000
145393029,python3,"2 years, 4 months",1521183921,Accepted,52 ms,/submissions/detail/145393029/,Not Pending,Happy Number,N/A,"class Solution:
    def isHappy(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        vis = set()
        
        while n != 1:
          if n in vis: return False
          vis.add(n)
          m, t = 0, n
          while True:
            m += (t % 10)**2
            t //= 10
            if t == 0: break
          n = m
        return True",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145392657,python3,"2 years, 4 months",1521183773,Accepted,40 ms,/submissions/detail/145392657/,Not Pending,Unique Paths,N/A,"class Solution:
    def uniquePaths(self, m, n):
        """"""
        :type m: int
        :type n: int
        :rtype: int
        """"""
        m -= 1
        n -= 1
        ret = 1
        
        k = m+n
        for i in range(1,m+1):
          ret *= k
          ret //= i
          k -= 1
        return ret",1111111111111111111111111111111111111111111111111111111111111
145317225,python3,"2 years, 4 months",1521151786,Accepted,40 ms,/submissions/detail/145317225/,Not Pending,Valid Parentheses,N/A,"class Solution:
    def isValid(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        is_open = lambda x: x in ""({[""
        c_pair = {"")"": ""("", ""}"": ""{"", ""]"":""[""}
        stk = []
        for c in s:
            if is_open(c):
                stk.append(c)
            else:
                if len(stk) == 0: return False
                if c_pair[c] != stk[-1]: return False
                stk.pop()
        return len(stk) == 0",1111111111111111111111111111111111111111111111111111111111111111111111111
145316124,python3,"2 years, 4 months",1521151142,Accepted,64 ms,/submissions/detail/145316124/,Not Pending,Permutations,N/A,"class Solution:
    def permute(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        ret = [nums]
        n = len(nums)
        L = list(range(n))
        while True:
            i = None
            for j in range(n-1):
                if L[j] < L[j+1]:
                    i = j
            if i is None:
                break
            
            for j in range(n-1,i,-1):
                if L[j] > L[i]:
                    L[j], L[i] = L[i], L[j]
                    L[i+1:] = L[i+1:][::-1]
                    break
            ret.append([nums[l] for l in L])
        return ret",1111111111111111111111111
145309351,python3,"2 years, 4 months",1521147518,Compile Error,N/A,/submissions/detail/145309351/,Not Pending,Find First and Last Position of Element in Sorted Array,N/A,"class Solution:
    def searchRange(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        from bisect import bisect_left, bisect_right
        
        l = bisect_left(nums, target)
        r = bisect_right(nums, target)
        
        if l == r: return [-1,-1]
        else return [l,r-1]
        ",
145309158,python3,"2 years, 4 months",1521147407,Accepted,44 ms,/submissions/detail/145309158/,Not Pending,Longest Common Prefix,N/A,"class Solution:
    def longestCommonPrefix(self, strs):
        """"""
        :type strs: List[str]
        :rtype: str
        """"""
        if len(strs) == 0: return """"
        shortest = None
        
        for s in strs:
            if shortest is None or len(s) < len(shortest):
                shortest = s
                
        for i in range(len(shortest)+1,0,-1):
            if sum([shortest[:i]==x[:i] for x in strs]) == len(strs):
                return shortest[:i]
        return """"
            ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145308654,python3,"2 years, 4 months",1521147140,Accepted,88 ms,/submissions/detail/145308654/,Not Pending,ZigZag Conversion,N/A,"class Solution:
    def convert(self, s, numRows):
        """"""
        :type s: str
        :type numRows: int
        :rtype: str
        """"""
        if numRows == 1: return s
        ret = ["""" for i in range(numRows)]
        disp = 1
        p = 0
        for c in s:
            #print(p)
            ret[p] += c
            #print(ret)
            
            p += disp
            if p < 1 or p >= numRows-1:
                disp *= -1
                
        return """".join(ret
145308604,python3,"2 years, 4 months",1521147116,Runtime Error,N/A,/submissions/detail/145308604/,Not Pending,ZigZag Conversion,N/A,"class Solution:
    def convert(self, s, numRows):
        """"""
        :type s: str
        :type numRows: int
        :rtype: str
        """"""
        ret = ["""" for i in range(numRows)]
        disp = 1
        p = 0
        for c in s:
            #print(p)
            ret[p] += c
            #print(ret)
            
            p += disp
            if p < 1 or p >= numRows-1:
                disp *= -1
                
        return """".join(ret)",
145300845,cpp,"2 years, 4 months",1521142768,Accepted,8 ms,/submissions/detail/145300845/,Not Pending,Implement strStr(),N/A,"class Solution {
public:
    int strStr(string haystack, string needle) {
        int n = (int)haystack.size();
        int m = (int)needle.size();
        for(int i=0;i+m<=n;++i) {
            int j = 0;
            for(;j<m;++j) {
                if(haystack[i+j]!=needle[j]) break;
            }
            if(j==m) return i;
        }
        return -1;
    }
};",11111111111111111111111111111111111111111111111111111111111111111111111111
145250106,python3,"2 years, 4 months",1521112175,Accepted,60 ms,/submissions/detail/145250106/,Not Pending,Ugly Number,N/A,"class Solution:
    def isUgly(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        if num == 0: return False
        while num % 2 == 0: num //= 2
        while num % 3 == 0: num //= 3
        while num % 5 == 0: num //= 5
        return num
145250072,python3,"2 years, 4 months",1521112150,Time Limit Exceeded,N/A,/submissions/detail/145250072/,Not Pending,Ugly Number,N/A,"class Solution:
    def isUgly(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        while num % 2 == 0: num //= 2
        while num % 3 == 0: num //= 3
        while num % 5 == 0: num //= 5
        return num
145250005,python3,"2 years, 4 months",1521112091,Accepted,364 ms,/submissions/detail/145250005/,Not Pending,Count Primes,N/A,"class Solution:
    def countPrimes(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        if n == 0: return 0
        import math
        t = int(math.sqrt(n))
        p = [True for i in range(n+1)]
        p[0] = p[1] = False
        p[4::2] = [False] * len(p[4::2])
        for i in range(3, t+2, 2):
          if p[i]:
            p[i*i::i] = [False] * len(p[i*i::i])
        return sum(p[:-1])
                ",11111111111111111111
145249985,python3,"2 years, 4 months",1521112071,Runtime Error,N/A,/submissions/detail/145249985/,Not Pending,Count Primes,N/A,"class Solution:
    def countPrimes(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        if n == 0: return 0
        import math
        t = int(math.sqrt(n))
        p = [True for i in range(n)]
        p[0] = p[1] = False
        p[4::2] = [False] * len(p[4::2])
        for i in range(3, t+2, 2):
          if p[i]:
            p[i*i::i] = [False] * len(p[i*i::i])
        return sum(p)
                ",
145249947,python3,"2 years, 4 months",1521112030,Wrong Answer,N/A,/submissions/detail/145249947/,Not Pending,Count Primes,N/A,"class Solution:
    def countPrimes(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        if n == 0: return 0
        import math
        t = int(math.sqrt(n))
        p = [True for i in range(n+1)]
        p[0] = p[1] = False
        p[4::2] = [False] * len(p[4::2])
        for i in range(3, t+2, 2):
          if p[i]:
            p[i*i::i] = [False] * len(p[i*i::i])
        return sum(p)
                ",11001010111010111001
145249921,python3,"2 years, 4 months",1521112008,Runtime Error,N/A,/submissions/detail/145249921/,Not Pending,Count Primes,N/A,"class Solution:
    def countPrimes(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        import math
        t = int(math.sqrt(n))
        p = [True for i in range(n+1)]
        p[0] = p[1] = False
        p[4::2] = [False] * len(p[4::2])
        for i in range(3, t+2, 2):
          if p[i]:
            p[i*i::i] = [False] * len(p[i*i::i])
        return sum(p)
                ",
145249464,python3,"2 years, 4 months",1521111618,Accepted,72 ms,/submissions/detail/145249464/,Not Pending,Sqrt(x),N/A,"class Solution:
    def mySqrt(self, x):
        """"""
        :type x: int
        :rtype: int
        """"""
        if x == 1: return 1
        l,h = 0, x
        for i in range(32):
          m = (l+h) // 2
          if m**2 > x: h = m
          else: l = m
        return m
145249352,python3,"2 years, 4 months",1521111511,Wrong Answer,N/A,/submissions/detail/145249352/,Not Pending,Sqrt(x),N/A,"class Solution:
    def mySqrt(self, x):
        """"""
        :type x: int
        :rtype: int
        """"""
        l,h = 0, x
        for i in range(32):
          m = (l+h) // 2
          if m**2 > x: h = m
          else: l = m
        return m
145248995,cpp,"2 years, 4 months",1521111155,Accepted,569 ms,/submissions/detail/145248995/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        set< vector<int> > s_ans;
        sort(nums.begin(), nums.end());
        vector<int> vec(3,0);
        for(int i=0;i<n;++i) {
          vec[0] = nums[i];
          for(int j=i+1;j<n;++j) {
            vec[1] = nums[j];
            if(binary_search(&nums[j+1], &nums[n], -nums[i]-nums[j])) {
              vec[2] = -nums[i]-nums[j];
              s_ans.insert(vec);
            }
          }
        }
        cout << s_ans.size() << endl;
      
        vector<vector<int>> ret;
        for(set<vector<int>>::iterator it = s_ans.begin(); it != s_ans.end() ; ++it ) {
          ret.push_back(*it);
        }
      
        return ret;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145248476,cpp,"2 years, 4 months",1521110729,Time Limit Exceeded,N/A,/submissions/detail/145248476/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        set< vector<int> > s_ans;
        sort(nums.begin(), nums.end());
        for(int i=0;i<n;++i) {
          for(int j=i+1;j<n;++j) {
            if(binary_search(&nums[j+1], &nums[n], -nums[i]-nums[j])) {
              vector<int> vec(3,0);
              vec[0] = nums[i];
              vec[1] = nums[j];
              vec[2] = -nums[i]-nums[j];
              s_ans.insert(vec);
            }
          }
        }
      
        vector<vector<int>> ret;
        for(set<vector<int>>::iterator it = s_ans.begin(); it != s_ans.end() ; ++it ) {
          ret.push_back(*it);
        }
      
        return ret;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
145247522,python3,"2 years, 4 months",1521109883,Time Limit Exceeded,N/A,/submissions/detail/145247522/,Not Pending,3Sum,N/A,"class Solution(object):
    def threeSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        from bisect import bisect_left
        nums = sorted(nums)
        ans = []
        n = len(nums)
        for i in range(n):
          for j in range(i+1,n-1):
            t_nums = nums[j+1:]
            m = len(t_nums)
            k = bisect_left(t_nums, -nums[i]-nums[j])
            if k >= m: continue
            if nums[i]+nums[j]+t_nums[k] == 0:
              ans.append((nums[i],nums[j],t_nums[k]))
        return sorted(list(set(ans)))",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100
145247262,python3,"2 years, 4 months",1521109684,Wrong Answer,N/A,/submissions/detail/145247262/,Not Pending,3Sum,N/A,"class Solution(object):
    def threeSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        from bisect import bisect_left
        nums = sorted(nums)
        ans = []
        n = len(nums)
        for i in range(n):
          for j in range(i+1,n):
            k = bisect_left(nums, -nums[i]-nums[j])
            if k >= n or k <= j: continue
            if nums[i]+nums[j]+nums[k] == 0:
              ans.append((nums[i],nums[j],nums[k]))
        return sorted(list(set(ans)))",1111111011111101101111110110111001110101111000100010010001000001111010101101111110111110011010101101110000000001100011111000010110001000010100000000010100011101100111010010111001000000110110010001001101110001010010111111101010110000000000000000000000000000000000000000000000000000000000000000000000000000000000000
145245986,cpp,"2 years, 4 months",1521108564,Time Limit Exceeded,N/A,/submissions/detail/145245986/,Not Pending,3Sum,N/A,"class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = (int)nums.size();
        set< vector<int> > s_ans;
        sort(nums.begin(), nums.end());
        for(int i=0;i<n;++i) {
          for(int j=i+1;j<n;++j) {
            for(int k=j+1;k<n;++k) {
              if( nums[i] + nums[j] + nums[k] == 0 ) {
                vector<int> vec(3,0);
                vec[0] = nums[i];
                vec[1] = nums[j];
                vec[2] = nums[k];
                s_ans.insert(vec);
              }
            }
          }
        }
      
        vector<vector<int>> ret;
        for(set<vector<int>>::iterator it = s_ans.begin(); it != s_ans.end() ; ++it ) {
          ret.push_back(*it);
        }
      
        return ret;
    }
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111100
145245560,python3,"2 years, 4 months",1521108235,Time Limit Exceeded,N/A,/submissions/detail/145245560/,Not Pending,3Sum,N/A,"class Solution(object):
    def threeSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        nums = sorted(nums)
        ans = []
        n = len(nums)
        for i in range(n):
          for j in range(i+1,n):
            for k in range(j+1,n):
              if nums[i] + nums[j] + nums[k] == 0:
                ans.append((nums[i],nums[j],nums[k]))
              elif nums[i] + nums[j] + nums[k] > 0:
                  break
        return sorted(list(set(ans)))",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000
145245478,python3,"2 years, 4 months",1521108179,Time Limit Exceeded,N/A,/submissions/detail/145245478/,Not Pending,3Sum,N/A,"class Solution(object):
    def threeSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        from itertools import combinations
        nums = sorted(nums)
        return sorted(list(set([tuple(x) for x in combinations(nums,3) if sum(x) == 0])))",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000
145245128,python,"2 years, 4 months",1521107919,Time Limit Exceeded,N/A,/submissions/detail/145245128/,Not Pending,3Sum,N/A,"class Solution(object):
    def threeSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[List[int]]
        """"""
        from itertools import combinations
        nums = sorted(nums)
        return sorted(list(set([tuple(x) for x in combinations(nums,3) if sum(x) == 0])))",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000
145244739,python,"2 years, 4 months",1521107631,Accepted,170 ms,/submissions/detail/145244739/,Not Pending,First Unique Character in a String,N/A,"class Solution(object):
    def firstUniqChar(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        from collections import defaultdict
        idx = defaultdict(int)
        cnt = defaultdict(int)
        for i,c in enumerate(s):
          cnt[c] += 1
          idx[c] = i
          
        best = len(s)
        for c in string.ascii_lowercase:
          if cnt[c] == 1:
            best = min(best, idx[c])
        return -1 if best == len(s) else best",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145244431,python,"2 years, 4 months",1521107407,Time Limit Exceeded,N/A,/submissions/detail/145244431/,Not Pending,First Unique Character in a String,N/A,"class Solution(object):
    def firstUniqChar(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        for i,c in enumerate(s):
          if s.count(c) == 1:
            return i
        return -1",11111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000
145244101,python,"2 years, 4 months",1521107150,Accepted,33 ms,/submissions/detail/145244101/,Not Pending,Keyboard Row,N/A,"class Solution(object):
    def findWords(self, words):
        """"""
        :type words: List[str]
        :rtype: List[str]
        """"""
        k_rows = [set(x) for x in [""qwertyuiop"", ""asdfghjkl"", ""zxcvbnm""]]
        return [w for w in words if sum([len(set(w.lower()) & r) == len(set(w.lower())) for r in k_rows])>0 ]",1111111111111111111111
145243490,python,"2 years, 4 months",1521106724,Accepted,148 ms,/submissions/detail/145243490/,Not Pending,Reshape the Matrix,N/A,"class Solution(object):
    def matrixReshape(self, nums, r, c):
        """"""
        :type nums: List[List[int]]
        :type r: int
        :type c: int
        :rtype: List[List[int]]
        """"""
        if r*c != len(nums) * len(nums[0]): return nums
        
        ret = [[0 for j in range(c)] for i in range(r)]
        
        x = [] 
        for row in nums: x.extend(row)
        
        k = 0
        for i in range(r):
          for j in range(c):
            ret[i][j] = x[k]
            k += 1
        return ret",11111111111111111111111111111111111111111111111111111111
145216948,python,"2 years, 4 months",1521094773,Accepted,43 ms,/submissions/detail/145216948/,Not Pending,Find the Duplicate Number,N/A,"class Solution(object):
    def findDuplicate(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        for i in range(n):
          if nums[abs(nums[i])] < 0:
            return abs(nums[i])
          nums[abs(nums[i])] *= -1
        return -1",11111111111111111111111111111111111111111111111111111
145216866,python,"2 years, 4 months",1521094743,Compile Error,N/A,/submissions/detail/145216866/,Not Pending,Find the Duplicate Number,N/A,"class Solution(object):
    def findDuplicate(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n = len(nums)
        for i in range(n):
          if nums[abs(nums[i])] < 0:
            return abs(nums[i])
          nums[abs(nums[i])] *= -1
        return -1",
145215280,python,"2 years, 4 months",1521094182,Accepted,40 ms,/submissions/detail/145215280/,Not Pending,Reverse Words in a String III,N/A,"class Solution(object):
    def reverseWords(self, s):
        """"""
        :type s: str
        :rtype: str
        """"""
        return "" "".join([x[::-1] for x in s.split("" "")])
        ",111111111111111111111111111111
145214862,python,"2 years, 4 months",1521094031,Accepted,143 ms,/submissions/detail/145214862/,Not Pending,Array Partition I,N/A,"class Solution(object):
    def arrayPairSum(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums = sorted(nums)
        ret = 0
        for i in range(0, len(nums), 2):
          ret += min(nums[i],nums[i+1])
        return ret",111111111111111111111111111111111111111111111111111111111111111111111111111111111
145214167,python3,"2 years, 4 months",1521093803,Accepted,40 ms,/submissions/detail/145214167/,Not Pending,Invert Binary Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def invertTree(self, root):
        """"""
        :type root: TreeNode
        :rtype: TreeNode
        """"""
        if not root is None:
          self.invertTree(root.left)
          self.invertTree(root.right)
          root.left, root.right = root.right, root.left
        return root
      ",11111111111111111111111111111111111111111111111111111111111111111111
145027113,python,"2 years, 4 months",1521002717,Accepted,31 ms,/submissions/detail/145027113/,Not Pending,Climbing Stairs,N/A,"class Solution(object):
    def climbStairs(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        a, b = 0, 1
        for i in range(n):
          a, b = b, a+b
        return b",111111111111111111111111111111111111111111111
145026768,python3,"2 years, 4 months",1521002590,Accepted,52 ms,/submissions/detail/145026768/,Not Pending,Best Time to Buy and Sell Stock II,N/A,"class Solution:
    def maxProfit(self, prices):
        """"""
        :type prices: List[int]
        :rtype: int
        """"""
        n = len(prices)
        if n == 0: return 0
        runs = [0] * n
        for i in range(n-1,0,-1):
          if prices[i] > prices[i-1]:
            runs[i-1] = runs[i]+1
        i = 0
        best = 0
        while i < n:
          if runs[i] == 0: 
            i += 1
            continue
          best += prices[i+runs[i]] - prices[i]
          i += runs[i]+1
        return best
          ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145025716,python,"2 years, 4 months",1521002231,Accepted,81 ms,/submissions/detail/145025716/,Not Pending,Delete Node in a Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """"""
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """"""
        node.val = node.next.val
        node.next = node.next.next",11111111111111111111111111111111111111111111111111111111111111111111111111111111111
145025611,python,"2 years, 4 months",1521002195,Wrong Answer,N/A,/submissions/detail/145025611/,Not Pending,Delete Node in a Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """"""
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """"""
        node.next = node.next.next",01100100100100011111010000101110100001001000010111010000101100000000000000000000000
145025541,python,"2 years, 4 months",1521002175,Runtime Error,N/A,/submissions/detail/145025541/,Not Pending,Delete Node in a Linked List,N/A,"# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def deleteNode(self, node):
        """"""
        :type node: ListNode
        :rtype: void Do not return anything, modify node in-place instead.
        """"""
        self.next = self.next.next",
145024793,python3,"2 years, 4 months",1521001920,Accepted,52 ms,/submissions/detail/145024793/,Not Pending,Best Time to Buy and Sell Stock,N/A,"class Solution:
    def maxProfit(self, prices):
        """"""
        :type prices: List[int]
        :rtype: int
        """"""
        n = len(prices)
        mini = 987654321
        best = 0
        for p in prices:
          mini = min(mini, p)
          best = max(best, p-mini)
        return best",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
145024717,python3,"2 years, 4 months",1521001898,Runtime Error,N/A,/submissions/detail/145024717/,Not Pending,Best Time to Buy and Sell Stock,N/A,"class Solution:
    def maxProfit(self, prices):
        """"""
        :type prices: List[int]
        :rtype: int
        """"""
        n = len(prices)
        mini = prices[0]
        best = 0
        for p in prices:
          mini = min(mini, p)
          best = max(best, p-mini)
        return best",
145024324,python3,"2 years, 4 months",1521001758,Time Limit Exceeded,N/A,/submissions/detail/145024324/,Not Pending,Best Time to Buy and Sell Stock,N/A,"class Solution:
    def maxProfit(self, prices):
        """"""
        :type prices: List[int]
        :rtype: int
        """"""
        n = len(prices)
        best = 0
        for i in range(n):
          for j in range(i+1,n):
            best = max(best, prices[j]-prices[i])
        return best",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
145023370,python3,"2 years, 4 months",1521001390,Accepted,44 ms,/submissions/detail/145023370/,Not Pending,Robot Return to Origin,N/A,"class Solution:
    def judgeCircle(self, moves):
        """"""
        :type moves: str
        :rtype: bool
        """"""
        return moves.count('U') == moves.count('D') and moves.count('L') == moves.count('R')",11111111111111111111111111111111111111111111111111111111111111
145021308,python3,"2 years, 4 months",1521000624,Accepted,88 ms,/submissions/detail/145021308/,Not Pending,Majority Element,N/A,"class Solution:
    def majorityElement(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        from collections import Counter
        return Counter(nums).most_common()[0][0]",11111111111111111111111111111111111111111111
144659209,python3,"2 years, 5 months",1520825273,Accepted,40 ms,/submissions/detail/144659209/,Not Pending,Bulb Switcher,N/A,"class Solution:
    def bulbSwitch(self, n):
        """"""
        :type n: int
        :rtype: int
        """"""
        import math
        return int(math.sqrt(n))",11111111111111111111111111111111111
144658637,python3,"2 years, 5 months",1520825093,Accepted,56 ms,/submissions/detail/144658637/,Not Pending,Perfect Number,N/A,"class Solution:
    def checkPerfectNumber(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        if num <= 1: return False
        return num == sum([i+num//i if i != num//i else i for i in range(2,round(math.sqrt(num))+1) if num % i == 0])+1",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144658578,python3,"2 years, 5 months",1520825073,Wrong Answer,N/A,/submissions/detail/144658578/,Not Pending,Perfect Number,N/A,"class Solution:
    def checkPerfectNumber(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        if num <= 0: return False
        return num == sum([i+num//i if i != num//i else i for i in range(2,round(math.sqrt(num))+1) if num % i == 0])+1",111111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144658521,python3,"2 years, 5 months",1520825057,Wrong Answer,N/A,/submissions/detail/144658521/,Not Pending,Perfect Number,N/A,"class Solution:
    def checkPerfectNumber(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        if num < 0: return False
        return num == sum([i+num//i if i != num//i else i for i in range(1,round(math.sqrt(num))+1) if num % i == 0])-num",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
144658437,python3,"2 years, 5 months",1520825031,Wrong Answer,N/A,/submissions/detail/144658437/,Not Pending,Perfect Number,N/A,"class Solution:
    def checkPerfectNumber(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        if num < 0: return False
        return num == sum([i+num//i if i != num//i else i for i in range(1,round(math.sqrt(num))+1) if num % i == 0])",000011111111111111111111111111111111111111111111101111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110
144658277,python3,"2 years, 5 months",1520824978,Runtime Error,N/A,/submissions/detail/144658277/,Not Pending,Perfect Number,N/A,"class Solution:
    def checkPerfectNumber(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        
        return num == sum([i+num//i if i != num//i else i for i in range(1,round(math.sqrt(num))+1) if num % i == 0])",
144657952,cpp,"2 years, 5 months",1520824877,Time Limit Exceeded,N/A,/submissions/detail/144657952/,Not Pending,Perfect Number,N/A,"class Solution {
public:
    bool checkPerfectNumber(int num) {
      int ret = 1;
      int limit = num / 2;
      for(int i=2;i<=limit;++i) if(num%i==0) ret += i;
      return ret == num;
   }
};",111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
144657649,python3,"2 years, 5 months",1520824783,Time Limit Exceeded,N/A,/submissions/detail/144657649/,Not Pending,Perfect Number,N/A,"class Solution:
    def checkPerfectNumber(self, num):
        """"""
        :type num: int
        :rtype: bool
        """"""
        return num == sum([i for i in range(1,num//2+1) if num % i == 0])",111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
144657162,python3,"2 years, 5 months",1520824618,Accepted,108 ms,/submissions/detail/144657162/,Not Pending,Self Dividing Numbers,N/A,"class Solution:
    def run(self, n):
      d = list(map(int,str(n)))
      if d.count(0)>0: return False
      return [n%x==0 for x in d].count(False) == 0
    def selfDividingNumbers(self, left, right):
        """"""
        :type left: int
        :type right: int
        :rtype: List[int]
        """"""
        return [ i for i in range(left,right+1) if self.run(i)]",1111111111111111111111111111111
144656469,python3,"2 years, 5 months",1520824403,Accepted,64 ms,/submissions/detail/144656469/,Not Pending,Power of Two,N/A,"class Solution:
    def isPowerOfTwo(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        return n>0 and ((n & (n-1)) == 0);

144656376,python3,"2 years, 5 months",1520824372,Wrong Answer,N/A,/submissions/detail/144656376/,Not Pending,Power of Two,N/A,"class Solution:
    def isPowerOfTwo(self, n):
        """"""
        :type n: int
        :rtype: bool
        """"""
        return n and ((n & (n-1)) == 0);

144655982,cpp,"2 years, 5 months",1520824246,Wrong Answer,N/A,/submissions/detail/144655982/,Not Pending,Power of Two,N/A,"class Solution {
public:
    bool isPowerOfTwo(int n) {
      return n && ((n & (n-1)) == 0);
    }
}
144655901,cpp,"2 years, 5 months",1520824220,Wrong Answer,N/A,/submissions/detail/144655901/,Not Pending,Power of Two,N/A,"class Solution {
public:
    bool isPowerOfTwo(int n) {
      return n && (n & (n-1) == 0);
    }
}
144655415,cpp,"2 years, 5 months",1520824062,Accepted,6 ms,/submissions/detail/144655415/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
      uint32_t ret = 0;
      for(int i=0;i<32;++i) {
        ret *= 2;
        ret += n%2;
        n /= 2;
      }
      return ret;
    }
};",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144655291,cpp,"2 years, 5 months",1520824025,Wrong Answer,N/A,/submissions/detail/144655291/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
      uint32_t ret = 0;
      for(int i=0;i<32;++i) {
        ret += n%2;
        ret *= 2;
        n /= 2;
      }
      return ret;
    }
}
144654608,cpp,"2 years, 5 months",1520823793,Wrong Answer,N/A,/submissions/detail/144654608/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n, int t=32) {
      uint32_t ret = 0;
      for(int i=0;i<31;++i) {
        ret += n%2;
        ret *= 2;
        n /= 2;
      }
      return ret;
    }
}
144654484,cpp,"2 years, 5 months",1520823753,Wrong Answer,N/A,/submissions/detail/144654484/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n, int t=32) {
      uint32_t ret = 0;
      for(int i=0;i<32;++i) {
        ret += n%2;
        ret *= 2;
        n /= 2;
      }
      return ret;
    }
}
144653863,cpp,"2 years, 5 months",1520823538,Wrong Answer,N/A,/submissions/detail/144653863/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n, int t=32) {
        return n>0 ? 1-n%2 + 2*reverseBits(n/2,t-1): 0;
    }
};",100000000000000000000000000000000001010100101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
144653553,cpp,"2 years, 5 months",1520823442,Wrong Answer,N/A,/submissions/detail/144653553/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n, int t=32) {
        return t>0 ? 1-n%2 + 2*reverseBits(n/2,t-1): 0;
    }
}
144653436,cpp,"2 years, 5 months",1520823404,Wrong Answer,N/A,/submissions/detail/144653436/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n, int t=31) {
        return t>0 ? 1-n%2 + 2*reverseBits(n/2,t-1): 0;
    }
}
144653359,cpp,"2 years, 5 months",1520823384,Wrong Answer,N/A,/submissions/detail/144653359/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n, int t=32) {
        return t>0 ? 1-n%2 + 2*reverseBits(n/2,t-1): 0;
    }
};",000000000000000000000000000000000011111101111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
144653161,cpp,"2 years, 5 months",1520823327,Wrong Answer,N/A,/submissions/detail/144653161/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        return n>0 ? 1-n%2 + 2*reverseBits(n/2): 0;
    }
}
144652667,cpp,"2 years, 5 months",1520823177,Runtime Error,N/A,/submissions/detail/144652667/,Not Pending,Reverse Bits,N/A,"class Solution {
public:
    uint32_t reverseBits(uint32_t n) {
        return 1-n%2 + 2*reverseBits(n/2);
    }
};",
144652384,cpp,"2 years, 5 months",1520823085,Accepted,3 ms,/submissions/detail/144652384/,Not Pending,Sum of Two Integers,N/A,"class Solution {
public:
    int getSum(int a, int b) {
      while(b!=0) {
        int c = a&b;
        a ^= b;
        b = c<<1;
      }
      return a;
    }
};
",1111111111111
144651941,python3,"2 years, 5 months",1520822939,Wrong Answer,N/A,/submissions/detail/144651941/,Not Pending,Sum of Two Integers,N/A,"class Solution:
    def getSum(self, a, b):
        """"""
        :type a: int
        :type b: int
        :rtype: int
        """"""
        while b !=0:
          c = a & b
          a = a ^ b
          b = c << 1
          a &= 0xFFFFFFFFFF
          b &= 0xFFFFFFFFFF
          
        return a",1111111111010
144651870,python3,"2 years, 5 months",1520822915,Wrong Answer,N/A,/submissions/detail/144651870/,Not Pending,Sum of Two Integers,N/A,"class Solution:
    def getSum(self, a, b):
        """"""
        :type a: int
        :type b: int
        :rtype: int
        """"""
        while b !=0:
          c = a & b
          a = a ^ b
          b = c << 1
          a &= 0xFFFFFFFF
          b &= 0xFFFFFFFF
          
        return a",1111111111010
144648878,python3,"2 years, 5 months",1520821914,Wrong Answer,N/A,/submissions/detail/144648878/,Not Pending,Find the Duplicate Number,N/A,"class Solution:
    def findDuplicate(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        n=len(nums)-1
        return sum(nums)-n*(n+1)//2
        ",11111101001010000100000000000000000000000000000000001
144648548,python3,"2 years, 5 months",1520821794,Accepted,52 ms,/submissions/detail/144648548/,Not Pending,Generate Parentheses,N/A,"class Solution:
    def run(self, par, o, l):
      if o < 0: return
      if l >= self.n*2:
        if o == 0: self.ret.append(par)
        return
      self.run(par+""("", o+1, l+1)
      self.run(par+"")"", o-1, l+1)
      
    def generateParenthesis(self, n):
        """"""
        :type n: int
        :rtype: List[str]
        """"""
        self.ret = []
        self.n = n
        self.run("""", 0, 0)
        return self.ret
        ",11111111
144647755,python3,"2 years, 5 months",1520821513,Wrong Answer,N/A,/submissions/detail/144647755/,Not Pending,Generate Parentheses,N/A,"class Solution:
    def run(self, depth):
      if depth == 1:
        return [""()""]
      if depth == 2:
        return [""(())"", ""()()""]
      else:
        p = self.run(depth-1)
        ret = []
        ret.extend([""(""+x+"")"" for x in p])
        ret.extend([x+""()"" for x in p])
        ret.extend([""()""+x for x in p])
        ret = sorted(list(set(ret)))
        return ret
      
    def generateParenthesis(self, n):
        """"""
        :type n: int
        :rtype: List[str]
        """"""
        return self.run(n)
        ",11100000
144644833,python3,"2 years, 5 months",1520820511,Accepted,76 ms,/submissions/detail/144644833/,Not Pending,Valid Anagram,N/A,"class Solution:
    def isAnagram(self, s, t):
        """"""
        :type s: str
        :type t: str
        :rtype: bool
        """"""
        return sorted(s) == sorted(t)
        ",1111111111111111111111111111111111
144644593,cpp,"2 years, 5 months",1520820435,Accepted,16 ms,/submissions/detail/144644593/,Not Pending,Longest Continuous Increasing Subsequence,N/A,"class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int best = 0;
        vector<int> cache(nums.size(), 1);
        int n = (int)nums.size();
        for(int i=0;i<n;++i) {
          if(i>0 && nums[i-1]<nums[i]) {
            cache[i] = max(cache[i], cache[i-1]+1);
          }
          best = max(best, cache[i]);
        }
        return best;
    }
};",111111111111111111111111111111111111
144644513,cpp,"2 years, 5 months",1520820410,Wrong Answer,N/A,/submissions/detail/144644513/,Not Pending,Longest Continuous Increasing Subsequence,N/A,"class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int best = 0;
        vector<int> cache(nums.size(), 1);
        int n = (int)nums.size();
        for(int i=1;i<n;++i) {
          if(nums[i-1]<nums[i]) {
            cache[i] = max(cache[i], cache[i-1]+1);
          }
          best = max(best, cache[i]);
        }
        return best;
    }
};",111011110111111111111111111111111111
144644464,cpp,"2 years, 5 months",1520820396,Wrong Answer,N/A,/submissions/detail/144644464/,Not Pending,Longest Continuous Increasing Subsequence,N/A,"class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int best = 0;
        vector<int> cache(nums.size(), 1);
        int n = (int)nums.size();
        for(int i=1;i<n;++i) {
          if(nums[i-1]<nums[i]) {
            cache[i] = max(cache[i], cache[i-1]+1);
            best = max(best, cache[i]);
          }
        }
        return best;
    }
};",101011110101111001101111110110110110
144644417,cpp,"2 years, 5 months",1520820379,Wrong Answer,N/A,/submissions/detail/144644417/,Not Pending,Longest Continuous Increasing Subsequence,N/A,"class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int best = 1;
        vector<int> cache(nums.size(), 1);
        int n = (int)nums.size();
        for(int i=1;i<n;++i) {
          if(nums[i-1]<nums[i]) {
            cache[i] = max(cache[i], cache[i-1]+1);
            best = max(best, cache[i]);
          }
        }
        return best;
    }
};",111101111111111111111111111111111111
144644341,cpp,"2 years, 5 months",1520820357,Wrong Answer,N/A,/submissions/detail/144644341/,Not Pending,Longest Continuous Increasing Subsequence,N/A,"class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int best = 1;
        vector<int> cache(nums.size(), 1);
        int n = (int)nums.size();
        for(int i=1;i<n;++i) {
          if(nums[i-1]<nums[i]) {
            cache[i] = max(cache[i], cache[i]+1);
            best = max(best, cache[i]);
          }
        }
        return best;
    }
};",010100001111111111111000001001001001
144643976,cpp,"2 years, 5 months",1520820242,Wrong Answer,N/A,/submissions/detail/144643976/,Not Pending,Longest Continuous Increasing Subsequence,N/A,"class Solution {
public:
    int findLengthOfLCIS(vector<int>& nums) {
        int best = 1;
        vector<int> cache(nums.size(), 1);
        int n = (int)nums.size();
        for(int i=0;i<n;++i) {
          for(int j=0;j<i;++j) {
            if(nums[j]<nums[i]) {
              cache[i] = max(cache[i], cache[j]+1);
              best = max(best, cache[i]);
            }
          }
        }
        return best;
    }
};",011100011111111111111100011011011001
144641976,python3,"2 years, 5 months",1520819561,Accepted,124 ms,/submissions/detail/144641976/,Not Pending,Product of Array Except Self,N/A,"class Solution:
    def productExceptSelf(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        if nums.count(0) == 1: 
          ans = [0]*len(nums)
          ret = 1
          p = 0
          for i in range(len(nums)):
            if nums[i] == 0:
              p = i
              continue
            else:
              ret *= nums[i]
          ans[p] = ret
          return ans
              
        if nums.count(0) > 1: return [0]*len(nums)
        import math
        ans = [math.log(abs(x)) for x in nums]
        sums = math.fsum(ans)
        s = 1 if sum([x<0 for x in nums]) % 2 == 0 else -1
        signs = [-1 if x<0 else 1 for x in nums]
        ans = [round(math.exp(sums-x)) * s * y for x, y in zip(ans, signs)]
        return ans",11111111111111111
144641804,python3,"2 years, 5 months",1520819503,Wrong Answer,N/A,/submissions/detail/144641804/,Not Pending,Product of Array Except Self,N/A,"class Solution:
    def productExceptSelf(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        if nums.count(0) == 1: 
          ans = [0]*len(nums)
          ret = 1
          p = 0
          for i in range(len(nums)):
            if nums[i] == 0:
              p = i
              continue
            else:
              ret *= nums[i]
          ans[p] = ret
          return ans
              
        if nums.count(0) > 1: return [0]*len(nums)
        import math
        ans = [math.log(abs(x)) for x in nums]
        sums = math.fsum(ans)
        s = 1 if sum([x<0 for x in nums]) % 2 == 0 else -1
        signs = [-1 if x<0 else 1 for x in nums]
        ans = [int(math.exp(sums-x)) * s * y for x, y in zip(ans, signs)]
        return ans",11111110111000000
144641184,python3,"2 years, 5 months",1520819287,Wrong Answer,N/A,/submissions/detail/144641184/,Not Pending,Product of Array Except Self,N/A,"class Solution:
    def productExceptSelf(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        if nums.count(0) == 1: 
          ans = [0]*len(nums)
          ret = 1
          p = 0
          for i in range(len(nums)):
            if nums[i] == 0:
              p = i
              continue
            else:
              ret *= nums[i]
          ans[p] = ret
          return ans
              
        if nums.count(0) > 1: return [0]*len(nums)
        import math
        ans = [math.log10(abs(x)) for x in nums]
        sums = sum(ans)
        s = 1 if sum([x<0 for x in nums]) % 2 == 0 else -1
        signs = [-1 if x<0 else 1 for x in nums]
        ans = [int(10**(sums-x)+1e-16) * s * y for x, y in zip(ans, signs)]
        return ans",11111111011111110
144640629,python3,"2 years, 5 months",1520819091,Wrong Answer,N/A,/submissions/detail/144640629/,Not Pending,Product of Array Except Self,N/A,"class Solution:
    def productExceptSelf(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        if nums.count(0) == 1: 
          ans = [0]*len(nums)
          ret = 1
          p = 0
          for i in range(len(nums)):
            if nums[i] == 0:
              p = i
              continue
            else:
              ret *= nums[i]
          ans[p] = ret
          return ans
              
        if nums.count(0) > 1: return [0]*len(nums)
        import math
        ans = [math.log10(abs(x)) for x in nums]
        sums = sum(ans)
        s = 1 if sum([x<0 for x in nums]) % 2 == 0 else -1
        signs = [-1 if x<0 else 1 for x in nums]
        ans = [int(10**(sums-x)+1e-8) * s * y for x, y in zip(ans, signs)]
        return ans",11111111111111110
144639891,python3,"2 years, 5 months",1520818811,Runtime Error,N/A,/submissions/detail/144639891/,Not Pending,Product of Array Except Self,N/A,"class Solution:
    def productExceptSelf(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        if nums.count(0) == 1: 
          ans = [0]*len(nums)
          ret = 1
          p = 0
          for i in range(len(nums)):
            if nums[i] == 0:
              p = i
              continue
            else:
              ret *= nums[i]
          ans[p] = ret
          return ans
              
        if nums.count(0) > 1: return [0]*len(nums)
        import math
        nums = [math.log10(x) for x in nums]
        sums = sum(nums)
        nums = [int(10**(sums-x)+1e-8) for x in nums]
        return nums",
144638499,python3,"2 years, 5 months",1520818310,Wrong Answer,N/A,/submissions/detail/144638499/,Not Pending,Product of Array Except Self,N/A,"class Solution:
    def productExceptSelf(self, nums):
        """"""
        :type nums: List[int]
        :rtype: List[int]
        """"""
        if nums.count(0) == len(nums): return nums
        import math
        nums = [math.log10(x) if x > 0 else -1 for x in nums]
        sums = sum([x for x in nums if x >= 0])
        nums = [int(10**(sums-x)+1e-8) if x >= 0 else 0 for x in nums]
        return nums",10100011100100000
144619728,cpp,"2 years, 5 months",1520810869,Accepted,31 ms,/submissions/detail/144619728/,Not Pending,Toeplitz Matrix,N/A,"class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        for(int i=1;i<(int)matrix.size();++i) {
          for(int j=1;j<(int)matrix[i].size();++j) {
            if(matrix[i][j]!=matrix[i-1][j-1]) return false;
          }
        }
        return true;
    }
};",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144619618,cpp,"2 years, 5 months",1520810818,Wrong Answer,N/A,/submissions/detail/144619618/,Not Pending,Toeplitz Matrix,N/A,"class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        int n = (int)matrix.size();
        for(int i=1;i<n;++i) {
          for(int j=1;j<n;++j) {
            if(matrix[i][j]!=matrix[i-1][j-1]) return false;
          }
        }
        return true;
    }
};",11111111111111111111111111111111111111111111111111111111111111001111111110111110111110110110110110110110111110110110110110000100111111110110111110110110110110111110110110110110110111000101101101101111111110111111111110110110110110110111110110000101101101101101101101111111111111111110110111110111110111000101101101101101101101101101101111111111111111111111111110000101101101101101101101101101101100101101111111111111111110000101101101101101101101101101101101101101101101101101101111
144618758,python3,"2 years, 5 months",1520810482,Accepted,48 ms,/submissions/detail/144618758/,Not Pending,Missing Number,N/A,"class Solution:
    def missingNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        return len(nums)*(len(nums)+1)//2-sum(nums)
        ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144527189,python3,"2 years, 5 months",1520756793,Accepted,652 ms,/submissions/detail/144527189/,Not Pending,Move Zeroes,N/A,"class Solution:
    def moveZeroes(self, nums):
        """"""
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        n = len(nums)
        for i in range(n-1, -1, -1):
          if nums[i] == 0:
            for j in range(i+1,n):
              nums[j-1], nums[j] = nums[j], nums[j-1]
",111111111111111111111
144527070,python3,"2 years, 5 months",1520756742,Wrong Answer,N/A,/submissions/detail/144527070/,Not Pending,Move Zeroes,N/A,"class Solution:
    def moveZeroes(self, nums):
        """"""
        :type nums: List[int]
        :rtype: void Do not return anything, modify nums in-place instead.
        """"""
        n = len(nums)
        for i in range(n):
          if nums[i] == 0:
            for j in range(i+1,n):
              nums[j-1], nums[j] = nums[j], nums[j-1]
",111111111101110110100
144526844,python3,"2 years, 5 months",1520756645,Accepted,56 ms,/submissions/detail/144526844/,Not Pending,Single Number,N/A,"class Solution:
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums.sort()
        i = 0
        while i < len(nums)-1:
          if nums[i] == nums[i+1]:
            i += 2
          else:
            return nums[i]
        return nums[-1]
        ",111111111111111
144526703,python3,"2 years, 5 months",1520756581,Accepted,56 ms,/submissions/detail/144526703/,Not Pending,Maximum Depth of Binary Tree,N/A,"# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxDepth(self, root):
        """"""
        :type root: TreeNode
        :rtype: int
        """"""
        if root is None:
          return 0
        else:
          left = 0 if root.left is None else self.maxDepth(root.left)
          right = 0 if root.right is None else self.maxDepth(root.right)
          return max(left, right)+1",111111111111111111111111111111111111111
144525783,python3,"2 years, 5 months",1520756175,Wrong Answer,N/A,/submissions/detail/144525783/,Not Pending,Single Number,N/A,"class Solution:
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums.sort()
        i = 0
        while i < len(nums)-1:
          if nums[i] == nums[i+1]:
            i += 2
          else:
            return nums[i]
        return nums[0]
        ",111111111111101
144525751,python3,"2 years, 5 months",1520756161,Runtime Error,N/A,/submissions/detail/144525751/,Not Pending,Single Number,N/A,"class Solution:
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums.sort()
        i = 0
        while i < len(nums)-1:
          if nums[i] == nums[i+1]:
            i += 2
          else:
            return num[i]
        return nums[0]
        ",
144525552,python3,"2 years, 5 months",1520756083,Wrong Answer,N/A,/submissions/detail/144525552/,Not Pending,Single Number,N/A,"class Solution:
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums.sort()
        for i in range(len(nums)-1):
          if nums[i] != nums[i+1]:
            return nums[i]
        return nums[0]
        ",111111000000000
144525452,python3,"2 years, 5 months",1520756043,Wrong Answer,N/A,/submissions/detail/144525452/,Not Pending,Single Number,N/A,"class Solution:
    def singleNumber(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums.sort()
        for i in range(len(nums)-1):
          if nums[i] == nums[i+1]:
            return nums[i]
        return -1
        ",010000000000000
144525272,python3,"2 years, 5 months",1520755961,Accepted,60 ms,/submissions/detail/144525272/,Not Pending,Fizz Buzz,N/A,"class Solution:
    def fizzBuzz(self, n):
        """"""
        :type n: int
        :rtype: List[str]
        """"""
        ret = []
        for i in range(1, n+1):
          if i % 3 != 0 and i % 5 != 0:
            ret.append(str(i))
          else:
            x = """"
            if i % 3 == 0: x += ""Fizz""
            if i % 5 == 0: x += ""Buzz""
            ret.append(x)
        return ret",11111111
144524778,python3,"2 years, 5 months",1520755749,Accepted,52 ms,/submissions/detail/144524778/,Not Pending,Reverse String,N/A,"class Solution:
    def reverseString(self, s):
        """"""
        :type s: str
        :rtype: str
        """"""
        return s[::-1]",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144524364,python3,"2 years, 5 months",1520755561,Accepted,148 ms,/submissions/detail/144524364/,Not Pending,Basic Calculator II,N/A,"class Solution:
    def calculate(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        s = s.replace("" "","""")
        toks = []
        num = """"
        for x in s:
          if x.isdigit():
            num = num + x
          else:
            if len(num)>0:
              toks.append(int(num))
              num = """"
            toks.append(x)
        if len(num)>0:
          toks.append(int(num))
          
        que = []
        i = 0
        while i < len(toks):
          x = toks[i]
          if x == '*' or x == '/':
            que[-1] = que[-1] * toks[i+1] if x == '*' else que[-1] // toks[i+1]
            i += 2
            continue
          else:
            que.append(x)
          i += 1
          
        i = 2
        ret = que[0]
        while i < len(que):
          o = que[i-1]
          ret = ret + que[i] if o == '+' else ret - que[i]
          i += 2
        return ret
        
            
            
              
            ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144524067,python3,"2 years, 5 months",1520755434,Runtime Error,N/A,/submissions/detail/144524067/,Not Pending,Basic Calculator II,N/A,"class Solution:
    def calculate(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        s = s.replace("" "","""")
        toks = []
        num = """"
        for x in s:
          if x.isdigit():
            num = num + x
          else:
            if len(num)>0:
              toks.append(int(num))
              num = """"
            toks.append(x)
        if len(num)>0:
          toks.append(int(num))
          
        que = []
        i = 0
        while i < len(toks):
          x = toks[i]
          if x == '*' or x == '/':
            que[-1] = que[-1] * toks[i+1] if x == '*' else que[-1] // toks[i+1]
          else:
            que.append(x)
          i += 1
          
        i = 2
        ret = que[0]
        while i < len(que):
          o = que[i-1]
          ret = ret + que[i] if o == '+' else ret - que[i]
          i += 2
        return ret
        
            
            
              
            ",
144520442,python3,"2 years, 5 months",1520753859,Runtime Error,N/A,/submissions/detail/144520442/,Not Pending,Basic Calculator II,N/A,"class Solution:
    def calculate(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        return eval(s.replace(""/"", ""//""))",
144520294,python3,"2 years, 5 months",1520753787,Accepted,56 ms,/submissions/detail/144520294/,Not Pending,Remove K Digits,N/A,"class Solution:
    def removeKdigits(self, num, k):
        """"""
        :type num: str
        :type k: int
        :rtype: str
        """"""
        que = [num[0]]
        for x in num[1:]: 
          if que[-1] <= x:
            que.append(x)
          else:
            while len(que) > 0 and k > 0:
              if que[-1] > x:
                k -= 1
                que.pop()
              else:
                break
            que.append(x)
            
        while k > 0 and len(que) > 0:
          k -= 1
          que.pop()
        if len(que) == 0: return ""0""
        return str(int("""".join(que)))
            ",111111111111111111111111111111111
144514510,python3,"2 years, 5 months",1520751529,Time Limit Exceeded,N/A,/submissions/detail/144514510/,Not Pending,Remove K Digits,N/A,"class Solution:
    def removeKdigits(self, num, k):
        """"""
        :type num: str
        :type k: int
        :rtype: str
        """"""
        if len(num) == k: return ""0""
        
        for _ in range(k):
            smallest = """"
            for i in range(len(num)):
                new_num = num[:i] + num[(i+1):]
                if smallest == """" or int(new_num) < int(smallest):
                    smallest = new_num
            num = str(int(smallest))
        return str(int(num))
                
        ",111111111111111111111100000000000
144514362,python3,"2 years, 5 months",1520751475,Wrong Answer,N/A,/submissions/detail/144514362/,Not Pending,Remove K Digits,N/A,"class Solution:
    def removeKdigits(self, num, k):
        """"""
        :type num: str
        :type k: int
        :rtype: str
        """"""
        if len(num) == k: return ""0""
        
        for _ in range(k):
            smallest = """"
            for i in range(len(num)):
                new_num = num[:i] + num[(i+1):]
                if smallest == """" or int(new_num) < int(smallest):
                    smallest = new_num
            num = smallest
        return num
                
        ",101111011111111111111100000000000
144513146,python3,"2 years, 5 months",1520751028,Accepted,40 ms,/submissions/detail/144513146/,Not Pending,Rotate String,N/A,"class Solution:
    def rotateString(self, A, B):
        """"""
        :type A: str
        :type B: str
        :rtype: bool
        """"""
        for i in range(len(A)):
            C = A[i:] + A[:i] 
            if C == B: return True
        return False",111111111111111111111111111111111111111
144366769,python3,"2 years, 5 months",1520674888,Accepted,40 ms,/submissions/detail/144366769/,Not Pending,Maximum Swap,N/A,"class Solution:
    def maximumSwap(self, num):
        """"""
        :type num: int
        :rtype: int
        """"""
        best = num
        num = list(str(num))
        n = len(num)
        for i in range(n):
            for j in range(i+1, n):
                tmp = num[:]
                tmp[i], tmp[j] = tmp[j], tmp[i]
                best = max(best, int("""".join(tmp)))
                
        return best",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144366742,python3,"2 years, 5 months",1520674871,Wrong Answer,N/A,/submissions/detail/144366742/,Not Pending,Maximum Swap,N/A,"class Solution:
    def maximumSwap(self, num):
        """"""
        :type num: int
        :rtype: int
        """"""
        num = list(str(num))
        n = len(num)
        best = 0
        for i in range(n):
            for j in range(i+1, n):
                tmp = num[:]
                tmp[i], tmp[j] = tmp[j], tmp[i]
                best = max(best, int("""".join(tmp)))
                
        return best",111000000111111111001111011111011111111111111110111111111111111111111111011111111101111111111111111111111111111
144366428,python3,"2 years, 5 months",1520674613,Accepted,60 ms,/submissions/detail/144366428/,Not Pending,Reverse Integer,N/A,"class Solution:
    def reverse(self, x):
        """"""
        :type x: int
        :rtype: int
        """"""
        sign = 1
        if x < 0: 
            sign *= -1
            x *= -1
        ret = sign * int(str(x)[::-1])
        if ret > 2147483647: ret = 0
        elif ret < -2147483648: ret = 0
        return ret",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144366370,python3,"2 years, 5 months",1520674563,Wrong Answer,N/A,/submissions/detail/144366370/,Not Pending,Reverse Integer,N/A,"class Solution:
    def reverse(self, x):
        """"""
        :type x: int
        :rtype: int
        """"""
        sign = 1
        if x < 0: 
            sign *= -1
            x *= -1
        return sign * int(str(x
144366218,python3,"2 years, 5 months",1520674458,Accepted,72 ms,/submissions/detail/144366218/,Not Pending,String to Integer (atoi),N/A,"class Solution:
    def myAtoi(self, str):
        """"""
        :type str: str
        :rtype: int
        """"""
        str = str.strip()
        
        ret = 0 
        sign = 1
        
        for i, d in enumerate(str):
            if d == '-':
                if i == 0: sign *= -1
                else:
                    break
            elif d == '+':
                if i != 0:
                    break
            elif d.isdigit():
                ret = ret * 10 + int(d)
            else:
                break
            
        ret *= sign
        if ret > 2147483647: ret = 2147483647
        elif ret < -2147483648: ret = -2147483648
        return ret
144366184,python3,"2 years, 5 months",1520674434,Wrong Answer,N/A,/submissions/detail/144366184/,Not Pending,String to Integer (atoi),N/A,"class Solution:
    def myAtoi(self, str):
        """"""
        :type str: str
        :rtype: int
        """"""
        str = str.strip()
        
        ret = 0 
        sign = 1
        
        for i, d in enumerate(str):
            if d == '-':
                if i == 0: sign *= -1
                else:
                    break
            elif d == '+':
                if i != 0:
                    break
            elif d.isdigit():
                ret = ret * 10 + int(d)
            
        ret *= sign
        if ret > 2147483647: ret = 2147483647
        elif ret < -2147483648: ret = -2147483648
        return ret
144365780,python3,"2 years, 5 months",1520674151,Wrong Answer,N/A,/submissions/detail/144365780/,Not Pending,String to Integer (atoi),N/A,"class Solution:
    def myAtoi(self, str):
        """"""
        :type str: str
        :rtype: int
        """"""
        try:
            ret = int(str)
            if ret > 2147483647: ret = 2147483647
            elif ret < -2147483648: ret = -2147483648
            return ret
        except ValueError:
            return 0

144365489,python3,"2 years, 5 months",1520673934,Accepted,72 ms,/submissions/detail/144365489/,Not Pending,Valid Number,N/A,"class Solution:
    def isNumber(self, s):
        """"""
        :type s: str
        :rtype: bool
        """"""
        try:
            float(s)
            return True
        except ValueError:
            return False
144339348,python3,"2 years, 5 months",1520660009,Accepted,56 ms,/submissions/detail/144339348/,Not Pending,Find Smallest Letter Greater Than Target,N/A,"class Solution:
    def nextGreatestLetter(self, letters, target):
        """"""
        :type letters: List[str]
        :type target: str
        :rtype: str
        """"""
        ans = ''
        for l in letters:
            if ord(target) >= ord(l): continue
            if ans == '' or ord(ans) > ord(l): ans = l
        if ans == '':
            for l in letters:
                if ans == '' or ord(ans) > ord(l): ans = l
        return ans
        ",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
144339252,python3,"2 years, 5 months",1520659961,Wrong Answer,N/A,/submissions/detail/144339252/,Not Pending,Find Smallest Letter Greater Than Target,N/A,"class Solution:
    def nextGreatestLetter(self, letters, target):
        """"""
        :type letters: List[str]
        :type target: str
        :rtype: str
        """"""
        ans = ''
        for l in letters:
            if ord(target) > ord(l): continue
            if ans == '' or ord(ans) > ord(l): ans = l
        if ans == '':
            for l in letters:
                if ans == '' or ord(ans) > ord(l): ans = l
        return ans
        ",101101111101111111101111111111111111011111011111011110110100000000100000000000000000111111111110110111111111111111111111111110100111100100000000000000000000000100110
144338902,python3,"2 years, 5 months",1520659797,Wrong Answer,N/A,/submissions/detail/144338902/,Not Pending,Find Smallest Letter Greater Than Target,N/A,"class Solution:
    def nextGreatestLetter(self, letters, target):
        """"""
        :type letters: List[str]
        :type target: str
        :rtype: str
        """"""
        ans = ''
        for l in letters:
            if ord(target) >= ord(l): continue
            if ans == '' or ord(ans) > ord(l): ans = l
        return ans
        ",111100111111111111100000000000001111111111111111111111110011111111111111111111111110111111111111110000000000001111111111111111111111110011111111111111111111111110111
144338852,python3,"2 years, 5 months",1520659771,Wrong Answer,N/A,/submissions/detail/144338852/,Not Pending,Find Smallest Letter Greater Than Target,N/A,"class Solution:
    def nextGreatestLetter(self, letters, target):
        """"""
        :type letters: List[str]
        :type target: str
        :rtype: str
        """"""
        ans = ''
        for l in letters:
            if ord(target) > ord(l): continue
            if ans == '' or ord(ans) > ord(l): ans = l
        return ans
        ",101100111101111111100000000000001111011111011111011110110000000000100000000000000000111111111110110000000000001111111111111110100111100000000000000000000000000100110
144336778,python3,"2 years, 5 months",1520658612,Accepted,40 ms,/submissions/detail/144336778/,Not Pending,Number Complement,N/A,"class Solution:
    def findComplement(self, num):
        """"""
        :type num: int
        :rtype: int
        """"""
        ret = 0
        i = 0
        while True:
            ret += abs(1-num%2) * 2**i
            num //= 2
            if num == 0: break
            i += 1
        return ret
            ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
142784327,python3,"2 years, 5 months",1519813689,Accepted,40 ms,/submissions/detail/142784327/,Not Pending,Hamming Distance,N/A,"class Solution:
    def hammingDistance(self, x, y):
        """"""
        :type x: int
        :type y: int
        :rtype: int
        """"""
        return list(str(bin(x^y))).count('1')
        ",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
142784145,mysql,"2 years, 5 months",1519813500,Accepted,1489 ms,/submissions/detail/142784145/,Not Pending,Big Countries,N/A,"# Write your MySQL query statement below
SELECT name, population, area FROM World WHERE area > 3000000 OR population >= 25000000;",1111
142784121,mysql,"2 years, 5 months",1519813476,Wrong Answer,N/A,/submissions/detail/142784121/,Not Pending,Big Countries,N/A,"# Write your MySQL query statement below
SELECT name, population, area FROM World WHERE area > 3000000 OR population >= 2500000;",0100
142784000,python3,"2 years, 5 months",1519813371,Accepted,44 ms,/submissions/detail/142784000/,Not Pending,Jewels and Stones,N/A,"class Solution:
    def numJewelsInStones(self, J, S):
        """"""
        :type J: str
        :type S: str
        :rtype: int
        """"""
        J = list(J)
        S = list(S)
        return sum([S.count(j) for j in J])",11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
142783745,python3,"2 years, 5 months",1519813134,Accepted,236 ms,/submissions/detail/142783745/,Not Pending,Target Sum,N/A,"class Solution:
    def findTargetSumWays(self, nums, S):
        """"""
        :type nums: List[int]
        :type S: int
        :rtype: int
        """"""
        from collections import defaultdict
        cache = defaultdict(int)
        cache[0] = 1
        for n in nums:
            next_cache = defaultdict(int)
            for k in cache.keys():
                next_cache[k+n] += cache[k]
                next_cache[k-n] += cache[k]
                
            cache = next_cache.copy()
        
        return cache[S]
        ",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
142783450,cpp,"2 years, 5 months",1519812853,Accepted,13 ms,/submissions/detail/142783450/,Not Pending,Number of Islands,N/A,"class Solution {
public:
    void flood_fill(int si, int sj, vector<vector<char>>& grid) {
        queue<int> qi;
        queue<int> qj;
        qi.push(si);
        qj.push(sj);
        
        int di[] = {-1,1,0,0};
        int dj[] = {0,0,-1,1};
        int n = (int)grid.size();
        int m = (int)grid.front().size();
        grid[si][sj] = '0';        
        while(!qi.empty()) {
            int ci = qi.front(); qi.pop();
            int cj = qj.front(); qj.pop();
            for(int k=0;k<4;++k) {
                int ni = di[k]+ci;
                int nj = dj[k]+cj;
                if(ni<0 || ni>=n) continue;
                if(nj<0 || nj>=m) continue;
                if(grid[ni][nj]!='1') continue;
                grid[ni][nj]='0';
                qi.push(ni);
                qj.push(nj);
            }            
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n = (int)grid.size();
        if(n==0) return 0;
        int m = (int)grid.front().size();
        int ret = 0;
        for(int i=0;i<n;++i) {
            for(int j=0;j<m;++j) {
                if(grid[i][j]=='1') {
                    ++ret;
                    flood_fill(i, j, grid);
                }    
            }
        }
        return ret;
    }
};",11111111111111111111111111111111111111111111111
142783426,cpp,"2 years, 5 months",1519812827,Runtime Error,N/A,/submissions/detail/142783426/,Not Pending,Number of Islands,N/A,"class Solution {
public:
    void flood_fill(int si, int sj, vector<vector<char>>& grid) {
        queue<int> qi;
        queue<int> qj;
        qi.push(si);
        qj.push(sj);
        
        int di[] = {-1,1,0,0};
        int dj[] = {0,0,-1,1};
        int n = (int)grid.size();
        int m = (int)grid.front().size();
        grid[si][sj] = '0';        
        while(!qi.empty()) {
            int ci = qi.front(); qi.pop();
            int cj = qj.front(); qj.pop();
            for(int k=0;k<4;++k) {
                int ni = di[k]+ci;
                int nj = dj[k]+cj;
                if(ni<0 || ni>=n) continue;
                if(nj<0 || nj>=m) continue;
                if(grid[ni][nj]!='1') continue;
                grid[ni][nj]='0';
                qi.push(ni);
                qj.push(nj);
            }            
        }
    }
    int numIslands(vector<vector<char>>& grid) {
        int n = (int)grid.size();
        int m = (int)grid.front().size();
        int ret = 0;
        for(int i=0;i<n;++i) {
            for(int j=0;j<m;++j) {
                if(grid[i][j]=='1') {
                    ++ret;
                    flood_fill(i, j, grid);
                }    
            }
        }
        return ret;
    }
};",
142780406,python3,"2 years, 5 months",1519810574,Accepted,48 ms,/submissions/detail/142780406/,Not Pending,Evaluate Reverse Polish Notation,N/A,"class Solution:
    def evalRPN(self, tokens):
        """"""
        :type tokens: List[str]
        :rtype: int
        """"""
        stack = []
        
        for x in tokens:
            if not x in [""+"",""-"",""*"",""/""]:
                stack.append(int(x))
            else:
                a, b = stack[-2], stack[-1]
                stack.pop()
                stack.pop()
                if x == ""+"": stack.append(a+b)
                elif x == ""-"": stack.append(a-b)
                elif x == ""*"": stack.append(a*b)
                elif x == ""/"":
                    stack.append(abs(a)//abs(b))
                    if a*b<0: stack[-1] *= -1
                
                
        return stack[0]",11111111111111111111
142779797,python3,"2 years, 5 months",1519810161,Wrong Answer,N/A,/submissions/detail/142779797/,Not Pending,Evaluate Reverse Polish Notation,N/A,"class Solution:
    def evalRPN(self, tokens):
        """"""
        :type tokens: List[str]
        :rtype: int
        """"""
        stack = []
        
        for x in tokens:
            if not x in [""+"",""-"",""*"",""/""]:
                stack.append(x)
            else:
                if x == ""/"":
                    x = ""//""
                a, b = stack[-2], stack[-1]
                stack.pop()
                stack.pop()
                stack.append(str(eval(a+x+b)))
                
        return int(stack[0])",11111111111000100011
142779623,python3,"2 years, 5 months",1519810039,Runtime Error,N/A,/submissions/detail/142779623/,Not Pending,Evaluate Reverse Polish Notation,N/A,"class Solution:
    def evalRPN(self, tokens):
        """"""
        :type tokens: List[str]
        :rtype: int
        """"""
        stack = []
        
        for x in tokens:
            if x.isdigit():
                stack.append(x)
            else:
                if x == ""/"": x = ""//""
                a, b = stack[-2:]
                stack.pop()
                stack.pop()
                stack.append(str(eval(a+x+b)))
                
        return int(stack[0])",
142779499,python3,"2 years, 5 months",1519809959,Runtime Error,N/A,/submissions/detail/142779499/,Not Pending,Evaluate Reverse Polish Notation,N/A,"class Solution:
    def evalRPN(self, tokens):
        """"""
        :type tokens: List[str]
        :rtype: int
        """"""
        stack = []
        
        for x in tokens:
            if x.isdigit():
                stack.append(x)
            else:
                a, b = stack[-2:]
                stack.pop()
                stack.pop()
                stack.append(a+x+b)
                
        return int(stack[0])",
142779221,python3,"2 years, 5 months",1519809782,Accepted,48 ms,/submissions/detail/142779221/,Not Pending,Excel Sheet Column Title,N/A,"class Solution:
    def convertToTitle(self, n):
        """"""
        :type n: int
        :rtype: str
        """"""
        ret = """"
        while True:
            n -= 1
            ret = chr(n%26+ord('A')) + ret
            n = n // 26
            if n == 0: break
        return ret",111111111111111111
142779133,python3,"2 years, 5 months",1519809725,Wrong Answer,N/A,/submissions/detail/142779133/,Not Pending,Excel Sheet Column Title,N/A,"class Solution:
    def convertToTitle(self, n):
        """"""
        :type n: int
        :rtype: str
        """"""
        ret = """"
        while True:
            ret = chr((n-1)%26+ord('A')) + ret
            n = n // 26
            if n == 0: break
        return ret",111011101100111111
142778523,cpp,"2 years, 5 months",1519809359,Accepted,5 ms,/submissions/detail/142778523/,Not Pending,Number of 1 Bits,N/A,"class Solution {
public:
    int hammingWeight(uint32_t n) {
        int ret = 0;
        do {
            ret += n%2;
            n /= 2;
        } while(n>0);
        return ret;
    }
}
142778436,python3,"2 years, 5 months",1519809301,Accepted,64 ms,/submissions/detail/142778436/,Not Pending,"Pow(x, n)",N/A,"class Solution:
    def myPow(self, x, n):
        """"""
        :type x: float
        :type n: int
        :rtype: float
        """"""
        return x**n",111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
141801641,python3,"2 years, 5 months",1519253070,Accepted,244 ms,/submissions/detail/141801641/,Not Pending,Max Consecutive Ones,N/A,"class Solution:
    def findMaxConsecutiveOnes(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        maxi = 0
        cur = 0
        for x in nums:
            if x == 1:
                cur += 1
            else:
                cur = 0
            maxi = max(maxi, cur)
        return maxi",11111111111111111111111111111111111111111
141801494,python3,"2 years, 5 months",1519253006,Time Limit Exceeded,N/A,/submissions/detail/141801494/,Not Pending,Max Consecutive Ones,N/A,"class Solution:
    def findMaxConsecutiveOnes(self, nums):
        """"""
        :type nums: List[int]
        :rtype: int
        """"""
        nums = """".join(list(map(str,nums)))
        for i in range(1,len(nums)+2):
            if not ""1"" * i in nums:
                return (i-1)",11111111111100000000000000000000000000000
141801051,python3,"2 years, 5 months",1519252804,Accepted,64 ms,/submissions/detail/141801051/,Not Pending,Add Digits,N/A,"class Solution:
    def addDigits(self, num):
        """"""
        :type num: int
        :rtype: int
        """"""
        num = str(num)
        while len(num) > 1:
            num = str(sum(list(map(int,list(num)))))
        return int(num
137819809,python3,"2 years, 6 months",1516874194,Accepted,212 ms,/submissions/detail/137819809/,Not Pending,Add Two Numbers,N/A,"# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

def fetch(lst):
    pt = lst
    ret = 0
    i = 0
    while True:
        ret += pt.val * 10 ** i 
        i += 1
        pt = pt.next
        if pt is None: break
    return ret

class Solution:
    def addTwoNumbers(self, l1, l2):
        """"""
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """"""
        sum_val = fetch(l1) + fetch(l2)
        head = ListNode(-1)
        pt = head
        while True:
            pt.next = ListNode(sum_val%10)
            pt = pt.next
            sum_val //= 10
            if sum_val == 0: break
        return head.next
137819141,python3,"2 years, 6 months",1516873622,Accepted,63 ms,/submissions/detail/137819141/,Not Pending,Two Sum,N/A,"class Solution:
    def twoSum(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        
        if target % 2 == 0:
            if nums.count(target/2) >= 2:
                return [i for i, n in enumerate(nums) if n == target/2]
        dict_idx = { n : i for i, n in enumerate(nums) }
        n = len(nums)
        for i in range(n):
            if nums[i] * 2 != target and target-nums[i] in dict_idx:
                    return [i,dict_idx[target-nums[i]]]
        return [-1,-1]",1111111111111111111
137818866,python3,"2 years, 6 months",1516873412,Wrong Answer,N/A,/submissions/detail/137818866/,Not Pending,Two Sum,N/A,"class Solution:
    def twoSum(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        dict_idx = { n : i for i, n in enumerate(nums) }
        n = len(nums)
        for i in range(n):
            if nums[i] * 2 != target and target-nums[i] in dict_idx:
                    return [i,dict_idx[target-nums[i]]]
        return [-1,-1]",1000011110111111111
137818545,python3,"2 years, 6 months",1516873185,Time Limit Exceeded,N/A,/submissions/detail/137818545/,Not Pending,Two Sum,N/A,"class Solution:
    def twoSum(self, nums, target):
        """"""
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """"""
        n = len(nums)
        for i in range(n):
            for j in range(i+1,n):
                if nums[i] + nums[j] == target:
                    return [i,j]
        return [-1,-1]",1111111111111111110
137818274,python3,"2 years, 6 months",1516873002,Time Limit Exceeded,N/A,/submissions/detail/137818274/,Not Pending,Max Chunks To Make Sorted II,N/A,"class Solution:
    def maxChunksToSorted(self, arr):
        """"""
        :type arr: List[int]
        :rtype: int
        """"""
        n = len(arr)
        s = sorted(arr)
        st = 0
        ret = 0
        for i in range(n):
            if sorted(arr[st:i+1]) == s[st:i+1]:
                ret += 1
                st = i+1
        return ret",1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000
137818069,python3,"2 years, 6 months",1516872866,Accepted,63 ms,/submissions/detail/137818069/,Not Pending,Max Chunks To Make Sorted,N/A,"class Solution:
    def maxChunksToSorted(self, arr):
        """"""
        :type arr: List[int]
        :rtype: int
        """"""
        n = len(arr)
        st = 0
        ret = 0
        for i in range(n):
            if sorted(arr[st:i+1]) == list(range(st,i+1)):
                ret += 1
                st = i+1
        return ret",1111111111111111111111111111111111111111111111111111
137808225,python3,"2 years, 6 months",1516867314,Wrong Answer,N/A,/submissions/detail/137808225/,Not Pending,Max Chunks To Make Sorted,N/A,"class Solution:
    def maxChunksToSorted(self, arr):
        """"""
        :type arr: List[int]
        :rtype: int
        """"""
        n = len(arr)
        bound = -1
        ret = 0
        for i in range(n):
            if bound < arr.index(i):
                bound = arr.index(i)
                ret += 1
        return ret",1111111111111011110101111111100110000101010000000000
379250116,javascript,8 minutes,1597130310,Accepted,76 ms,/submissions/detail/379250116/,Not Pending,H-Index,37 MB,"/**
 * @param {number[]} citations
 * @return {number}
 */
var hIndex = (C) => C.sort((a,b)=>b-a).filter((x,i)=>x>i).length;",1111111111111111111111111111111111111111111111111111111111111111111111111111111111
379249247,javascript,10 minutes,1597130181,Accepted,72 ms,/submissions/detail/379249247/,Not Pending,H-Index,37 MB,"/**
 * @param {number[]} citations
 * @return {number}
 */
var hIndex = function(C) {
  C.sort((a,b)=>b-a)
  for(let i=0;i<=C.length;++i) {
    if(C[i]<i+1) return i;
  }
  return C.length;
};",1111111111111111111111111111111111111111111111111111111111111111111111111111111111
378883946,python,"17 hours, 2 minutes",1597069476,Accepted,24 ms,/submissions/detail/378883946/,Not Pending,Excel Sheet Column Number,12.6 MB,"class Solution:
    def titleToNumber(self, s):
        """"""
        :type s: str
        :rtype: int
        """"""
        ret = 0
        for c in s:
          ret *= 26
          ret += (ord(c)-ord('A')+1)
        return ret

